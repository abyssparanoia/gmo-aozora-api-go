swagger: "2.0"
info:
  description: "<p>オープンAPI仕様書（PDF版）は下記リンクをご参照ください</p>\n<div>\n  <div style='display:inline-block;'><a style='text-decoration:none; font-weight:bold; color:#00b8d4;' href='https://gmo-aozora.com/business/service/api-specification.html' target='_blank'>オープンAPI仕様書</a></div><div style='display:inline-block; margin-left:2px; left:2px; width:10px; height:10px; border-top:2px solid #00b8d4; border-right:2px solid #00b8d4; transparent;-webkit-transform:rotate(45deg); transform: rotate(45deg);'></div>\n</div>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>共通仕様</h4>\n<div style='width:100%; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>＜HTTPリクエストヘッダ＞</p>\n  <div style='display:table; margin-left:10px; background-color:#29659b;'>\n    <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff;'>項目</div>\n    <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; color:#fff;'>仕様</div>\n  </div>\n  <div style='display:table; margin-left:10px;'>\n    <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>プロトコル</div>\n    <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>HTTP1.1/HTTPS</div>\n  </div>\n  <div style='display:table; margin-left:10px;'>\n    <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>charset</div>\n    <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>UTF-8</div>\n  </div>\n  <div style='display:table; margin-left:10px;'>\n    <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>content-type</div>\n    <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>application/json</div>\n  </div>\n  <div style='display:table; margin-left:10px;'>\n    <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>domain_name</div>\n    <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>\n      本番環境：api.gmo-aozora.com</br>\n      開発環境：stg-api.gmo-aozora.com\n    </div>\n  </div>\n  <div style='display:table; margin-left:10px;'>\n    <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>メインURL</div>\n    <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>\n      https://{domain_name}/ganb/api/personal/{version}</br>\n      <span style='border-bottom:solid 1px;'>Version:1.x.x</span> の場合</br>\n      　https://api.gmo-aozora.com/ganb/api/personal/<span style='border-bottom:solid 1px;'>v1</span>\n    </div>\n  </div>\n</div>\n<div style='margin:20px 10px;'>\n  <p style='font-weight:bold; color:#616161;'>＜リクエスト共通仕様＞</p>\n  <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>\n  <p style='padding-left:40px;'>パラメータの値が空の場合、またはパラメータ自体が設定されていない場合、どちらもNULLとして扱います</p>\n</div>\n<div style='margin:20px 10px;'>\n  <p style='font-weight:bold; color:#616161;'>＜レスポンス共通仕様＞</p>\n  <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>\n  <ul>\n    <li>レスポンスデータ</li>\n      <ul>\n        <li style='list-style-type:none;'>レスポンスデータの値が空の場合または、レスポンスデータ自体が設定されない場合は「項目自体を設定しません」と記載</li>\n      </ul>\n    <li>配列</li>\n      <ul>\n        <li style='list-style-type:none;'>配列の要素の値が空の場合は「空のリスト」と記載</li>\n        <li style='list-style-type:none;'>配列自体が設定されない場合は「項目自体を設定しません」と記載</li>\n      </ul>\n  </ul>\n</div>\n<div style='margin:20px 10px;'>\n  <p style='font-weight:bold; color:#616161;'>＜更新系APIに関する注意事項＞</p>\n  <ul>\n    <li style='list-style-type:none;'>更新系処理がタイムアウトとなった場合、処理自体は実行されている可能性がありますので、</li>\n    <li style='list-style-type:none;'>再実行を行う必要がある場合は必ず照会系の処理で実行状況を確認してから再実行を行ってください</li>\n  </ul>\n</div>\n"
  version: "1.1.12"
  title: "GMO Aozora Net Bank Open API"
host: "stg-api.gmo-aozora.com"
basePath: "/ganb/api/personal/v1"
tags:
  - name: "account"
    description: "口座"
  - name: "transfer"
    description: "振込・振替"
  - name: "bulk-transfer"
    description: "総合振込"
  - name: "virtual-account"
    description: "振込入金口座"
schemes:
  - "https"
paths:
  /accounts:
    get:
      tags:
        - "account"
      summary: "口座一覧照会"
      description: "保有する全ての口座情報一覧を照会します"
      operationId: "accountsUsingGET"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              baseDate: "2018-08-10"
              baseTime: "10:00:00+09:00"
              accounts:
                - accountId: "101011234567"
                  branchCode: "301"
                  branchName: "うみ支店"
                  accountTypeCode: "01"
                  accountTypeName: "普通預金（有利息）"
                  accountNumber: "1234567"
                  primaryAccountCode: "1"
                  primaryAccountCodeName: "代表口座"
                  accountName: "あおぞら　太郎"
                  accountNameKana: "ｱｵｿﾞﾗ ﾀﾛｳ"
                  currencyCode: "JPY"
                  currencyName: "日本円"
                  transferLimitAmount: "5000000"
              spAccounts:
                - accountId: "SP101011234567"
                  spAccountTypeCode: "1"
                  spAccountTypeCodeName: "親口座"
                - accountId: "SP502011047569"
                  spAccountTypeCode: "2"
                  spAccountTypeCodeName: "子口座"
                  spAccountName: "貯蓄専用"
                  spAccountBranchCode: "502"
                  spAccountBranchName: "あじさい支店"
                  spAccountNumber: "1047569"
          schema:
            $ref: "#/definitions/AccountsResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X GET \\\n  https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts \\\n  -H 'accept: application/json;charset=UTF-8' \\\n  -H 'x-access-token: your access token'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"x-access-token\"] = 'your access token'\nrequest[\"accept\"] = 'application/json;charset=UTF-8'\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPSConnection(\"api.gmo-aozora.com\")\n\nheaders = {\n    'x-access-token': \"your access token\",\n    'accept': \"application/json;charset=UTF-8\"\n    }\n\nconn.request(\"GET\", \"/ganb/api/simulator/personal/v1/accounts\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json;charset=UTF-8\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts\")\n  .get()\n  .addHeader(\"x-access-token\", \"your access token\")\n  .addHeader(\"accept\", \"application/json;charset=UTF-8\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts',\n  headers: \n   { accept: 'application/json;charset=UTF-8',\n     'x-access-token': 'your access token' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n  \"fmt\"\n  \"net/http\"\n  \"io/ioutil\"\n)\n\nfunc main() {\n\n  url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts\"\n\n  req, _ := http.NewRequest(\"GET\", url, nil)\n\n  req.Header.Add(\"x-access-token\", \"your access token\")\n  req.Header.Add(\"accept\", \"application/json;charset=UTF-8\")\n\n  res, _ := http.DefaultClient.Do(req)\n\n  defer res.Body.Close()\n  body, _ := ioutil.ReadAll(res.Body)\n\n  fmt.Println(res)\n  fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"x-access-token\": \"your access token\",\n  \"accept\": \"application/json;charset=UTF-8\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response,error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()\n"
  /accounts/balances:
    get:
      tags:
        - "account"
      summary: "残高照会"
      description: "保有する口座の残高情報を照会します\n口座IDを指定した場合、該当する口座の残高情報を照会します\n口座IDを指定しない場合、保有する口座全ての残高情報を照会します\n"
      operationId: "balancesUsingGET"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "accountId"
          in: "query"
          description: "口座ID\n口座を識別するIDまたは、つかいわけ口座を識別するID\n\nminLength: 12\nmaxLength: 29\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "301011234567"
          x-exportParamName: "AccountId"
          x-optionalDataType: "String"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BalancesResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X GET \\\n  'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/balances?accountId=301011000192' \\\n  -H 'accept: application/json;charset=UTF-8' \\\n  -H 'x-access-token: your access token'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/balances?accountId=301011000192\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"x-access-token\"] = 'your access token'\nrequest[\"accept\"] = 'application/json;charset=UTF-8'\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPSConnection(\"api.gmo-aozora.com\")\n\nheaders = {\n    'x-access-token': \"your access token\",\n    'accept': \"application/json;charset=UTF-8\"\n    }\n\nconn.request(\"GET\", \"/ganb/api/simulator/personal/v1/accounts/balances?accountId=301011000192\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/balances?accountId=301011000192\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json;charset=UTF-8\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/balances?accountId=301011000192\")\n  .get()\n  .addHeader(\"x-access-token\", \"your access token\")\n  .addHeader(\"accept\", \"application/json;charset=UTF-8\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/balances',\n  qs: { accountId: '301011000192' },\n  headers: \n   { accept: 'application/json;charset=UTF-8',\n     'x-access-token': 'your access token' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n  \"fmt\"\n  \"net/http\"\n  \"io/ioutil\"\n)\n\nfunc main() {\n\n  url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/balances?accountId=301011000192\"\n\n  req, _ := http.NewRequest(\"GET\", url, nil)\n\n  req.Header.Add(\"x-access-token\", \"your access token\")\n  req.Header.Add(\"accept\", \"application/json;charset=UTF-8\")\n\n  res, _ := http.DefaultClient.Do(req)\n\n  defer res.Body.Close()\n  body, _ := ioutil.ReadAll(res.Body)\n\n  fmt.Println(res)\n  fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"x-access-token\": \"your access token\",\n  \"accept\": \"application/json;charset=UTF-8\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/balances?accountId=301011000192\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()\n"
  /accounts/transactions:
    get:
      tags:
        - "account"
      summary: "入出金明細照会"
      description: "<p>指定した円普通預金口座の入出金明細情報を照会します</p>\n<p>なお、つかいわけ口座も円普通預金口座の入出金明細を照会可能とし</p>\n<p>つかいわけ口座の口座IDが指定された場合で、紐付く入出金明細が存在しない場合は空のリストを返却します</p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>対象科目</p>\n  <p style='padding-left:20px;'>円普通預金口座</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取得上限件数</p>\n  <p style='padding-left:20px;'>500件</p>\n  <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>\n  <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ページング</p>\n  <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ソート順</p>\n  <p style='padding-left:20px;'>取引の昇順</p>\n</div>\n<div style='width:600px; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>対象期間</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　当日分の入出金明細を返却</li>\n    <li style='list-style-type:none;'>&#9313;の場合　対象期間From　～　当日までの入出金明細を返却</li>\n    <li style='list-style-type:none;'>&#9314;の場合　取引初回　～　対象期間Toまでの入出金明細を返却</li>\n    <li style='list-style-type:none;'>&#9315;の場合　対象期間From　～　対象期間Toまでの入出金明細を返却</li>\n  </ul>\n</div> <div style='margin-bottom:40px;' />\n"
      operationId: "transactionsUsingGET"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "accountId"
          in: "query"
          description: "口座ID\n半角英数字\n口座を識別するIDまたは、つかいわけ口座を識別するID\n\n科目コードが以下の場合のみ受け付けます\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n\nminLength: 12\nmaxLength: 29\n"
          required: true
          type: "string"
          allowEmptyValue: false
          x-example: "301011234567"
          x-exportParamName: "AccountId"
        - name: "dateFrom"
          in: "query"
          description: "対象期間From\n半角文字\nYYYY-MM-DD形式\n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018-07-30"
          x-exportParamName: "DateFrom"
          x-optionalDataType: "String"
        - name: "dateTo"
          in: "query"
          description: "対象期間To\n半角文字\nYYYY-MM-DD形式\n対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却\n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018-08-10"
          x-exportParamName: "DateTo"
          x-optionalDataType: "String"
        - name: "nextItemKey"
          in: "query"
          description: "次明細キー\n半角数字\n初回要求時は未設定\n初回応答で次明細キーが「true」の場合、返却された同項目を2回目以降に設定\n\nminLength: 1\nmaxLength: 24\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "20181012090520112541"
          x-exportParamName: "NextItemKey"
          x-optionalDataType: "String"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128           \n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TransactionsResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X GET \\\n  'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31' \\\n  -H 'accept: application/json;charset=UTF-8' \\\n  -H 'x-access-token: your access token'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"x-access-token\"] = 'your access token'\nrequest[\"accept\"] = 'application/json;charset=UTF-8'\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPSConnection(\"api.gmo-aozora.com\")\n\nheaders = {\n    'x-access-token': \"your access token\",\n    'accept': \"application/json;charset=UTF-8\"\n    }\n\nconn.request(\"GET\", \"/ganb/api/simulator/personal/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json;charset=UTF-8\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31\")\n  .get()\n  .addHeader(\"x-access-token\", \"your access token\")\n  .addHeader(\"accept\", \"application/json;charset=UTF-8\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/transactions',\n  qs: \n   { accountId: '301011000192',\n     dateFrom: '2018-07-30',\n     dateTo: '2018-12-31' },\n  headers: \n   { accept: 'application/json;charset=UTF-8',\n     'x-access-token': 'your access token' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n  \"fmt\"\n  \"net/http\"\n  \"io/ioutil\"\n)\n\nfunc main() {\n\n  url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31\"\n\n  req, _ := http.NewRequest(\"GET\", url, nil)\n\n  req.Header.Add(\"x-access-token\", \"your access token\")\n  req.Header.Add(\"accept\", \"application/json;charset=UTF-8\")\n\n  res, _ := http.DefaultClient.Do(req)\n\n  defer res.Body.Close()\n  body, _ := ioutil.ReadAll(res.Body)\n\n  fmt.Println(res)\n  fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"x-access-token\": \"your access token\",\n  \"accept\": \"application/json;charset=UTF-8\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()\n"
  /accounts/deposit-transactions:
    get:
      tags:
        - "account"
      summary: "振込入金明細照会"
      description: "<p>指定した円普通預金口座の振込入金明細情報を照会します</p>\n<p><font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font></p>\n<p>つかいわけ口座や、証券コネクト等は対象外となります（指定時はエラー）</p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>対象科目</p>\n  <p style='padding-left:20px;'>円普通預金口座</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取得上限件数</p>\n  <p style='padding-left:20px;'>500件</p>\n  <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>\n  <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ページング</p>\n  <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ソート順</p>\n  <p style='padding-left:20px;'>取引の昇順</p>\n</div>\n<div style='width:600px; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>対象期間</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　当日分の振込入金明細を返却</li>\n    <li style='list-style-type:none;'>&#9313;の場合　対象期間From　～　当日までの振込入金明細を返却</li>\n    <li style='list-style-type:none;'>&#9314;の場合　取引初回　～　対象期間Toまでの振込入金明細を返却</li>\n    <li style='list-style-type:none;'>&#9315;の場合　対象期間From　～　対象期間Toまでの振込入金明細を返却</li>\n  </ul>\n</div> <div style='margin-bottom:40px;' />\n"
      operationId: "accountsDepositTransactionsUsingGET"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "accountId"
          in: "query"
          description: "口座ID\n半角数字\n口座を識別するID\n\nminLength: 12\nmaxLength: 29\n"
          required: true
          type: "string"
          allowEmptyValue: false
          x-example: "201011234567"
          x-exportParamName: "AccountId"
        - name: "dateFrom"
          in: "query"
          description: "対象期間From\n半角文字\nYYYY-MM-DD形式\n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018-07-30"
          x-exportParamName: "DateFrom"
          x-optionalDataType: "String"
        - name: "dateTo"
          in: "query"
          description: "対象期間To\n半角文字\nYYYY-MM-DD形式\n 対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却\n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018-08-10"
          x-exportParamName: "DateTo"
          x-optionalDataType: "String"
        - name: "nextItemKey"
          in: "query"
          description: "次明細キー\n半角数字\n初回要求時は未設定\n初回応答で次明細フラグが「true」の場合、返却された同項目を2回目以降に設定\n\nminLength: 1\nmaxLength: 24\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "20181012090520123456"
          x-exportParamName: "NextItemKey"
          x-optionalDataType: "String"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              accountId: "201011234567"
              dateFrom: "2018-07-30"
              dateTo: "2018-08-10"
              baseDate: "2018-08-10"
              baseTime: "10:00:00+09:00"
              hasNext: true
              nextItemKey: "20181012090520112541"
              count: "500"
              paymentArrivals:
                - transactionDate: "2018-07-30"
                  valueDate: "2018-07-30"
                  transactionType: "1"
                  remarks: "振込 ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123 アオゾラショウジ（カ"
                  amount: "50000"
                  applicantName: "ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ"
                  paymentBankName: "ｱｵｿﾞﾗｷﾞﾝｺｳ"
                  paymentBranchName: "ﾎﾝﾃﾝ"
                  ediInfo: "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123"
                  itemKey: "20181012090520123456"
                - transactionDate: "2018-07-31"
                  valueDate: "2018-07-31"
                  transactionType: "1"
                  remarks: "振込 ｲ-ﾃﾞ-ｱｲ テスト　タロウ あじさい支店 1036971"
                  amount: "10000"
                  applicantName: "ﾃｽﾄ ﾀﾛｳ"
                  paymentBankName: "ﾎｼｿﾞﾗｷﾞﾝｺｳ"
                  paymentBranchName: "ｴｲｷﾞﾖｳﾌﾞ"
                  ediInfo: "ｲ-ﾃﾞ-ｱｲ"
                  itemKey: "20181012090520112541"
          schema:
            $ref: "#/definitions/DepositTransactionsResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X GET \\'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/deposit-transactions?accountId=201011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456' \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'x-access-token: your access token'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/deposit-transactions?accountId=201011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"x-access-token\"] = 'your access token'\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"stg-api,gmo-aozora,com\")\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"GET\", \"ganb/api/personal/v1/accounts/deposit-transactions?accountId=201011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/deposit-transactions?accountId=201011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456\",\n\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/deposit-transactions?accountId=201011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456\")\n  .get()\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/deposit-transactions',\n  qs: \n   { accountId: '201011234567',\n     dateFrom: '2018-07-30',\n     dateTo: '2018-08-01',\n     nextItemKey: '20181012090520123456' },\n  headers: \n   { 'x-access-token': 'your access token',\n     Accept: 'application/json;charset=UTF-8' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/deposit-transactions?accountId=201011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456\"\n\n req, _ := http.NewRequest(\"GET\", url, nil)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"x-access-token\": \"your access token\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/accounts/deposit-transactions?accountId=201011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()\n"
  /va/list:
    post:
      tags:
        - "virtual-account"
      summary: "振込入金口座一覧照会"
      description: "<p>発行済みの振込入金口座の一覧を照会します</p>\n<p><font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font></p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>リクエストボディの振込入金口座IDリスト上限件数</p>\n  <p style='padding-left:20px;'>500件</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取得上限件数</p>\n  <p style='padding-left:20px;'>500件</p>\n  <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>\n  <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ページング</p>\n  <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次一覧キーを追加してリクエストしてください</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ソート順</p>\n  <p style='padding-left:20px;'>発行日時 昇順</p>\n</div>\n<div style='width:600px; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>クエリパラメーター　最終入金日</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>最終入金日From</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>最終入金日To</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>\n    <li style='list-style-type:none;'>&#9313;の場合　最終入金日From　～　当日までの振込入金口座情報を返却</li>\n    <li style='list-style-type:none;'>&#9314;の場合　最も過去となる最終入金日　～　最終入金日Toまでの振込入金口座情報を返却</li>\n    <li style='list-style-type:none;'>&#9315;の場合　最終入金日From　～　最終入金日Toまでの振込入金口座情報を返却</li>\n  </ul>\n</div>\n<div style='width:600px; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>クエリパラメーター　振込入金口座発行日</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座発行日From</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座発行日To</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>\n    <li style='list-style-type:none;'>&#9313;の場合　振込入金口座発行日From　～　当日までの振込入金口座情報を返却</li>\n    <li style='list-style-type:none;'>&#9314;の場合　最も過去となる口座発行日　～　振込入金口座発行日Toまでの振込入金口座情報を返却</li>\n    <li style='list-style-type:none;'>&#9315;の場合　振込入金口座発行日From　～　振込入金口座発行日Toまでの振込入金口座情報を返却</li>\n  </ul>\n</div>\n<div style='width:600px; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>クエリパラメーター　有効期限</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>有効期限From</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>有効期限To</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>\n    <li style='list-style-type:none;'>&#9313;の場合　有効期限From以上の振込入金口座情報を返却</li>\n    <li style='list-style-type:none;'>&#9314;の場合　最も過去となる有効期限　～　有効期限Toまでの振込入金口座情報を返却</li>\n    <li style='list-style-type:none;'>&#9315;の場合　有効期限From　～　有効期限Toまでの振込入金口座情報を返却</li>\n  </ul>\n</div>\n<div style='width:600px; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>クエリパラメーター　入金口座ID、　振込入金口座IDの設定別の仕様</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>入金口座ID</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座ID</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　入金口座IDに該当する振込入金口座情報を返却</li>\n    <li style='list-style-type:none;'>&#9313;の場合　振込入金口座IDに該当する振込入金口座情報を返却</li>\n    <li style='list-style-type:none;'>&#9314;の場合　振込入金口座IDが入金口座IDに紐付いているか判定を行い、OKであれば入金明細を返却し、NGであればエラーを返却します</li>\n  </ul>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>振込入金口座API認証情報</p>\n  <p style='padding-left:20px;'>提携企業契約時は必須で、この値が設定されていない場合、銀行契約の一覧照会を返却します</p>\n</div>\n"
      operationId: "vaListUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: false
          schema:
            $ref: "#/definitions/VaListRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VaListResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/list \\\n  -H 'Content-Type: application/json' \\\n  -H 'accept: application/json;charset=UTF-8' \\\n  -H 'x-access-token: your access token' \\\n  -d '{  \"vaTypeCode\": \"1\", \"depositAmountExistCode\": \"1\", \"vaHolderNameKana\": \"ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\", \"vaStatusCodeList\": [ { \"vaStatusCode\": \"1\" } ], \"latestDepositDateFrom\": \"2018-08-10\", \"latestDepositDateTo\": \"2018-08-10\", \"vaIssueDateFrom\": \"2018-07-31\", \"vaIssueDateTo\": \"2018-08-01\", \"expireDateFrom\": \"2018-08-31\", \"expireDateTo\": \"2018-09-01\", \"raId\": \"201011234567\", \"nextItemKey\": \"AABA0515651\", \"sortItemCode\": \"2\", \"sortOrderCode\": \"2\", \"vaIdList\": [ { \"vaId\": \"5021099622\" } ]}'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/list\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json;charset=UTF-8'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"x-access-token\"] = 'your access token'\nrequest.body = \"{  \\\"vaTypeCode\\\": \\\"1\\\", \\\"depositAmountExistCode\\\": \\\"1\\\", \\\"vaHolderNameKana\\\": \\\"ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\\\", \\\"vaStatusCodeList\\\": [ { \\\"vaStatusCode\\\": \\\"1\\\" } ], \\\"latestDepositDateFrom\\\": \\\"2018-08-10\\\", \\\"latestDepositDateTo\\\": \\\"2018-08-10\\\", \\\"vaIssueDateFrom\\\": \\\"2018-07-31\\\", \\\"vaIssueDateTo\\\": \\\"2018-08-01\\\", \\\"expireDateFrom\\\": \\\"2018-08-31\\\", \\\"expireDateTo\\\": \\\"2018-09-01\\\", \\\"raId\\\": \\\"201011234567\\\", \\\"nextItemKey\\\": \\\"AABA0515651\\\", \\\"sortItemCode\\\": \\\"2\\\", \\\"sortOrderCode\\\": \\\"2\\\", \\\"vaIdList\\\": [ { \\\"vaId\\\": \\\"5021099622\\\" } ]}\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\npayload = \"{  \\\"vaTypeCode\\\": \\\"1\\\", \\\"depositAmountExistCode\\\": \\\"1\\\", \\\"vaHolderNameKana\\\": \\\"ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\\\", \\\"vaStatusCodeList\\\": [ { \\\"vaStatusCode\\\": \\\"1\\\" } ], \\\"latestDepositDateFrom\\\": \\\"2018-08-10\\\", \\\"latestDepositDateTo\\\": \\\"2018-08-10\\\", \\\"vaIssueDateFrom\\\": \\\"2018-07-31\\\", \\\"vaIssueDateTo\\\": \\\"2018-08-01\\\", \\\"expireDateFrom\\\": \\\"2018-08-31\\\", \\\"expireDateTo\\\": \\\"2018-09-01\\\", \\\"raId\\\": \\\"201011234567\\\", \\\"nextItemKey\\\": \\\"AABA0515651\\\", \\\"sortItemCode\\\": \\\"2\\\", \\\"sortOrderCode\\\": \\\"2\\\", \\\"vaIdList\\\": [ { \\\"vaId\\\": \\\"5021099622\\\" } ]}\"\n\nheaders = {\n    'accept': \"application/json;charset=UTF-8\",\n    'Content-Type': \"application/json\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"POST\", \"ganb/api/simulator/personal/v1/va/list\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/list\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{  \\\"vaTypeCode\\\": \\\"1\\\", \\\"depositAmountExistCode\\\": \\\"1\\\", \\\"vaHolderNameKana\\\": \\\"ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\\\", \\\"vaStatusCodeList\\\": [ { \\\"vaStatusCode\\\": \\\"1\\\" } ], \\\"latestDepositDateFrom\\\": \\\"2018-08-10\\\", \\\"latestDepositDateTo\\\": \\\"2018-08-10\\\", \\\"vaIssueDateFrom\\\": \\\"2018-07-31\\\", \\\"vaIssueDateTo\\\": \\\"2018-08-01\\\", \\\"expireDateFrom\\\": \\\"2018-08-31\\\", \\\"expireDateTo\\\": \\\"2018-09-01\\\", \\\"raId\\\": \\\"201011234567\\\", \\\"nextItemKey\\\": \\\"AABA0515651\\\", \\\"sortItemCode\\\": \\\"2\\\", \\\"sortOrderCode\\\": \\\"2\\\", \\\"vaIdList\\\": [ { \\\"vaId\\\": \\\"5021099622\\\" } ]}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Content-Type: application/json\",\n    \"accept: application/json;charset=UTF-8\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{  \\\"vaTypeCode\\\": \\\"1\\\", \\\"depositAmountExistCode\\\": \\\"1\\\", \\\"vaHolderNameKana\\\": \\\"ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\\\", \\\"vaStatusCodeList\\\": [ { \\\"vaStatusCode\\\": \\\"1\\\" } ], \\\"latestDepositDateFrom\\\": \\\"2018-08-10\\\", \\\"latestDepositDateTo\\\": \\\"2018-08-10\\\", \\\"vaIssueDateFrom\\\": \\\"2018-07-31\\\", \\\"vaIssueDateTo\\\": \\\"2018-08-01\\\", \\\"expireDateFrom\\\": \\\"2018-08-31\\\", \\\"expireDateTo\\\": \\\"2018-09-01\\\", \\\"raId\\\": \\\"201011234567\\\", \\\"nextItemKey\\\": \\\"AABA0515651\\\", \\\"sortItemCode\\\": \\\"2\\\", \\\"sortOrderCode\\\": \\\"2\\\", \\\"vaIdList\\\": [ { \\\"vaId\\\": \\\"5021099622\\\" } ]}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/list\")\n  .post(body)\n  .addHeader(\"accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/list',\n  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type': 'application/json',\n     accept: 'application/json;charset=UTF-8' },\n  body: \n   { vaTypeCode: '1',\n     depositAmountExistCode: '1',\n     vaHolderNameKana: 'ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ',\n     vaStatusCodeList: [ { vaStatusCode: '1' } ],\n     latestDepositDateFrom: '2018-08-10',\n     latestDepositDateTo: '2018-08-10',\n     vaIssueDateFrom: '2018-07-31',\n     vaIssueDateTo: '2018-08-01',\n     expireDateFrom: '2018-08-31',\n     expireDateTo: '2018-09-01',\n     raId: '201011234567',\n     nextItemKey: 'AABA0515651',\n     sortItemCode: '2',\n     sortOrderCode: '2',\n     vaIdList: [ { vaId: '5021099622' } ] },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"strings\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/list\"\n\n payload := strings.NewReader(\"{  \\\"vaTypeCode\\\": \\\"1\\\", \\\"depositAmountExistCode\\\": \\\"1\\\", \\\"vaHolderNameKana\\\": \\\"ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\\\", \\\"vaStatusCodeList\\\": [ { \\\"vaStatusCode\\\": \\\"1\\\" } ], \\\"latestDepositDateFrom\\\": \\\"2018-08-10\\\", \\\"latestDepositDateTo\\\": \\\"2018-08-10\\\", \\\"vaIssueDateFrom\\\": \\\"2018-07-31\\\", \\\"vaIssueDateTo\\\": \\\"2018-08-01\\\", \\\"expireDateFrom\\\": \\\"2018-08-31\\\", \\\"expireDateTo\\\": \\\"2018-09-01\\\", \\\"raId\\\": \\\"201011234567\\\", \\\"nextItemKey\\\": \\\"AABA0515651\\\", \\\"sortItemCode\\\": \\\"2\\\", \\\"sortOrderCode\\\": \\\"2\\\", \\\"vaIdList\\\": [ { \\\"vaId\\\": \\\"5021099622\\\" } ]}\")\n\n req, _ := http.NewRequest(\"POST\", url, payload)\n\n req.Header.Add(\"accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"Content-Type\", \"application/json\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json;charset=UTF-8\",\n  \"Content-Type\": \"application/json\",\n  \"x-access-token\": \"your access token\"\n]\nlet parameters = [\n  \n  \"vaTypeCode\": \"1\",\n  \"depositAmountExistCode\": \"1\",\n  \"vaHolderNameKana\": \"ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\",\n  \"vaStatusCodeList\": [[\"vaStatusCode\": \"1\"]],\n  \"latestDepositDateFrom\": \"2018-08-10\",\n  \"latestDepositDateTo\": \"2018-08-10\",\n  \"vaIssueDateFrom\": \"2018-07-31\",\n  \"vaIssueDateTo\": \"2018-08-01\",\n  \"expireDateFrom\": \"2018-08-31\",\n  \"expireDateTo\": \"2018-09-01\",\n  \"raId\": \"201011234567\",\n  \"nextItemKey\": \"AABA0515651\",\n  \"sortItemCode\": \"2\",\n  \"sortOrderCode\": \"2\",\n  \"vaIdList\": [[\"vaId\": \"5021099622\"]]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/list\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /va/deposit-transactions:
    get:
      tags:
        - "virtual-account"
      summary: "振込入金口座入金明細照会"
      description: "<p>振込入金口座の入金明細を照会します</p>\n<p><font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font></p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取得上限件数</p>\n  <p style='padding-left:20px;'>500件</p>\n  <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>\n  <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ページング</p>\n  <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ソート順</p>\n  <p style='padding-left:20px;'>取引の昇順</p>\n  <p style='padding-left:20px;'>ソート順コードを指定することにより、ソート順を変更できます</p>\n</div>\n<div style='width:600px; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>対象期間</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　当日分の入金明細を返却</li>\n    <li style='list-style-type:none;'>&#9313;の場合　対象期間From(※1)　～　当日までの入金明細を返却</li>\n    <li style='list-style-type:none;'>&#9314;の場合　取引初回(※2)　～　対象期間To(※1)までの入金明細を返却</li>\n    <li style='list-style-type:none;'>&#9315;の場合　対象期間From(※1)　～　対象期間To(※1)までの入金明細を返却</li>\n    <li style='list-style-type:none; margin-left:10px;'>※1 : 照会する日付より6ヶ月以内の日付とし、超過する日付の場合は「400　Bad Request」を返却</li>\n    <li style='list-style-type:none; margin-left:10px;'>※2 : 照会する日付より6ヶ月以内の取引とし、それを超えた範囲は返却しません</li> \n  </ul>\n</div>\n<div style='width:600px; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>入金口座ID、振込入金口座の設定別の仕様</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>入金口座ID</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座ID</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　入金口座IDに該当する入金明細を返却します</li>\n    <li style='list-style-type:none;'>&#9313;の場合　振込入金口座IDに該当する入金明細を返却します</li>\n    <li style='list-style-type:none;'>&#9314;の場合　振込入金口座IDが入金口座IDに紐付いているか判定を行い、OKであれば入金明細を返却し、NGであればエラーを返却します</li>\n  </ul>\n</div> <div style='margin-bottom:40px;' />\n"
      operationId: "depositTransactionsUsingGET"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "vaContractAuthKey"
          in: "query"
          description: "振込入金口座API認証情報\n半角英数字\nNULLを設定\n値が設定されている場合は「400 Bad Request」を返却\n\nminLength: 1\nmaxLength: 400\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-exportParamName: "VaContractAuthKey"
          x-optionalDataType: "String"
        - name: "raId"
          in: "query"
          description: "入金口座ID\n半角数字\n入金先の口座を識別するID\n本値が設定されていない場合、振込入金口座IDは必須\n科目コードが以下の口座IDのみ受け付けます\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n\nminLength: 12\nmaxLength: 29\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "201011234567"
          x-exportParamName: "RaId"
          x-optionalDataType: "String"
        - name: "vaId"
          in: "query"
          description: "振込入金口座ID\n半角数字\n振込入金口座を識別するID\n本値が設定されていない場合、入金口座IDは必須\n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "5021099622"
          x-exportParamName: "VaId"
          x-optionalDataType: "String"
        - name: "dateFrom"
          in: "query"
          description: "対象期間From\n半角文字\nYYYY-MM-DD形式\n指定する場合は照会する日付より6ヶ月以内の日付とし、超えた場合は「400 Bad Request」を返却\n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018-08-01"
          x-exportParamName: "DateFrom"
          x-optionalDataType: "String"
        - name: "dateTo"
          in: "query"
          description: "対象期間To\n半角文字\nYYYY-MM-DD形式\n指定する場合は照会する日付より6ヶ月以内の日付とし、超えた場合は「400 Bad Request」を返却\n対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却\n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018-08-02"
          x-exportParamName: "DateTo"
          x-optionalDataType: "String"
        - name: "sortOrderCode"
          in: "query"
          description: "ソート順コード\n半角数字\n取引日のソート順を指定するコード値\n・1=昇順\n・2=降順\n\nminLength: 1\nmaxLength: 1\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2"
          x-exportParamName: "SortOrderCode"
          x-optionalDataType: "String"
        - name: "nextItemKey"
          in: "query"
          description: "次明細キー\n半角数字\n初回要求時は未設定\n初回応答で次明細キーが「true」の場合、返却された同項目を2回目以降に設定\n\nminLength: 1\nmaxLength: 24\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "20181012090520112541"
          x-exportParamName: "NextItemKey"
          x-optionalDataType: "String"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VaDepositTransactionsResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X GET \\\n  'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1' \\\n  -H 'accept: application/json;charset=UTF-8' \\\n  -H 'x-access-token: your access token'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"x-access-token\"] = 'your access token'\nrequest[\"accept\"] = 'application/json;charset=UTF-8'\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPSConnection(\"api.gmo-aozora.com\")\n\nheaders = {\n    'x-access-token': \"your access token\",\n    'accept': \"application/json;charset=UTF-8\"\n    }\n\nconn.request(\"GET\", \"/ganb/api/simulator/personal/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json;charset=UTF-8\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1\")\n  .get()\n  .addHeader(\"x-access-token\", \"your access token\")\n  .addHeader(\"accept\", \"application/json;charset=UTF-8\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/deposit-transactions',\n  qs: \n   { raId: '101011000330',\n     dateFrom: '2018-07-30',\n     dateTo: '2018-12-31',\n     sortOrderCode: '1' },\n  headers: \n   { accept: 'application/json;charset=UTF-8',\n     'x-access-token': 'your access token' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n  \"fmt\"\n  \"net/http\"\n  \"io/ioutil\"\n)\n\nfunc main() {\n\n  url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1\"\n\n  req, _ := http.NewRequest(\"GET\", url, nil)\n\n  req.Header.Add(\"x-access-token\", \"your access token\")\n  req.Header.Add(\"accept\", \"application/json;charset=UTF-8\")\n\n  res, _ := http.DefaultClient.Do(req)\n\n  defer res.Body.Close()\n  body, _ := ioutil.ReadAll(res.Body)\n\n  fmt.Println(res)\n  fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"x-access-token\": \"your access token\",\n  \"accept\": \"application/json;charset=UTF-8\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()\n"
  /va/issue:
    post:
      tags:
        - "virtual-account"
      summary: "振込入金口座発行"
      description: "<p>振込入金口座の発行を行います</p>\n<p><font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font></p>\n<p><font color=\"red\">（銀行システムのメンテナンス時は本APIを実行することができないため、予め余分に振込入金口座を発行してプールしておくことをお勧めします）</font></p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>発行上限数</p>\n  <p style='padding-left:20px;'>1リクエスト　：　1000口座まで</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>追加名義カナを前につける際の半角スペースについて</p>\n  <ul type='square'>\n    <li style='margin:10px;'>\n      <p>追加名義カナの右側は1文字のみ許容します</p>\n      <div style='width:600px; '>\n        <div style='display:table;'>\n          <div style='display:table-cell; width:50px; padding:2px;'>例）</div>\n          <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>\n          <div style='display:table-cell; width:200px; padding:2px; text-align:center;'><pre style='width:150px;'>「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ 」</pre></div>\n        </div>\n        <div style='display:table;'>\n          <div style='display:table-cell; width:50px; padding:2px;'></div>\n          <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>\n          <div style='display:table-cell; width:200px; padding:2px; text-align:center;'><pre style='width:150px;'>「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ  」</pre></div>\n        </div>\n      </div>\n    </li>\n    <li style='margin:10px;'>\n      <p>追加名義カナの左側は許容しません</p>\n      <div style='width:600px;'>\n        <div style='display:table;'>\n          <div style='display:table-cell; width:50px; padding:2px;'>例）</div>\n          <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>\n          <div style='display:table-cell; width:200px; padding:2px; text-align:center;'><pre style='width:150px;'>「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>\n        </div>\n        <div style='display:table;'>\n          <div style='display:table-cell; width:50px; padding:2px;'></div>\n          <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>\n          <div style='display:table-cell; width:200px; padding:2px; text-align:center;'><pre style='width:150px;'>「 ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>\n        </div>\n      </div>\n    </li>\n    <li style='margin:10px;'>\n      <p>連続スペースは許容しません</p>\n      <div style='width:600px;'>\n        <div style='display:table;'>\n          <div style='display:table-cell; width:50px; padding:2px;'>例）</div>\n          <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>\n          <div style='display:table-cell; width:200px; padding:2px; text-align:center;'><pre style='width:150px;'>「ﾃｽ ﾄﾆｭｳ ｷﾝｸﾞﾁ」</pre></div>\n        </div>\n        <div style='display:table;'>\n          <div style='display:table-cell; width:50px; padding:2px;'></div>\n          <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>\n          <div style='display:table-cell; width:300px; padding:2px; text-align:center;'><pre style='width:150px;'>「ﾃｽ  ﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>\n        </div>\n      </div>\n    </li>\n  </ul>\n</div> <div style='margin-bottom:40px;' />\n"
      operationId: "issueUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: false
          schema:
            $ref: "#/definitions/VaIssueRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/VaIssueResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/issue \\\n  -H 'accept: application/json;charset=UTF-8' \\\n  -H 'content-type: application/json' \\\n  -H 'x-access-token: your access token' \\\n  -d '{\n    \"vaTypeCode\" : \"1\",\n    \"issueRequestCount\" : \"5\",\n    \"raId\" : \"301011000192\",\n    \"vaContractAuthKey\" : null,\n    \"vaHolderNameKana\" : \"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\",\n    \"vaHolderNamePos\" : \"1\"\n  }'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/issue\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"x-access-token\"] = 'your access token'\nrequest[\"content-type\"] = 'application/json'\nrequest[\"accept\"] = 'application/json;charset=UTF-8'\nrequest.body = \"{\n\\\"vaTypeCode\\\" : \\\"1\\\",\n\\\"issueRequestCount\\\" : \\\"5\\\",\n\\\"raId\\\" : \\\"301011000192\\\",\n\\\"vaContractAuthKey\\\" : null,\n\\\"vaHolderNameKana\\\" : \\\"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\\\",\n\\\"vaHolderNamePos\\\" : \\\"1\\\"\n}\n\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPSConnection(\"api.gmo-aozora.com\")\n\npayload = \"{\n\\\"vaTypeCode\\\" : \\\"1\\\",\n\\\"issueRequestCount\\\" : \\\"5\\\",\n\\\"raId\\\" : \\\"301011000192\\\",\n\\\"vaContractAuthKey\\\" : null,\n\\\"vaHolderNameKana\\\" : \\\"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\\\",\n\\\"vaHolderNamePos\\\" : \\\"1\\\"\n}\n\"\n\nheaders = {\n    'x-access-token': \"your access token\",\n    'content-type': \"application/json\",\n    'accept': \"application/json;charset=UTF-8\"\n    }\n\nconn.request(\"POST\", \"/ganb/api/simulator/personal/v1/va/issue\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/issue\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\n\\\"vaTypeCode\\\" : \\\"1\\\",\n\\\"issueRequestCount\\\" : \\\"5\\\",\n\\\"raId\\\" : \\\"301011000192\\\",\n\\\"vaContractAuthKey\\\" : null,\n\\\"vaHolderNameKana\\\" : \\\"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\\\",\n\\\"vaHolderNamePos\\\" : \\\"1\\\"\n}\n\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json;charset=UTF-8\",\n    \"content-type: application/json\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\n\\\"vaTypeCode\\\" : \\\"1\\\",\n\\\"issueRequestCount\\\" : \\\"5\\\",\n\\\"raId\\\" : \\\"301011000192\\\",\n\\\"vaContractAuthKey\\\" : null,\n\\\"vaHolderNameKana\\\" : \\\"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\\\",\n\\\"vaHolderNamePos\\\" : \\\"1\\\"\n}\n\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/issue\")\n  .post(body)\n  .addHeader(\"x-access-token\", \"your access token\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"accept\", \"application/json;charset=UTF-8\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/issue',\n  headers: \n   { accept: 'application/json;charset=UTF-8',\n     'content-type': 'application/json',\n     'x-access-token': 'your access token' },\n  body: \n   { vaTypeCode: '1',\n     issueRequestCount: '5',\n     raId: '301011000192',\n     vaContractAuthKey: null,\n     vaHolderNameKana: 'ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ',\n     vaHolderNamePos: '1' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n  \"fmt\"\n  \"strings\"\n  \"net/http\"\n  \"io/ioutil\"\n)\n\nfunc main() {\n\n  url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/issue\"\n\n  payload := strings.NewReader(\"{\n\\\"vaTypeCode\\\" : \\\"1\\\",\n\\\"issueRequestCount\\\" : \\\"5\\\",\n\\\"raId\\\" : \\\"301011000192\\\",\n\\\"vaContractAuthKey\\\" : null,\n\\\"vaHolderNameKana\\\" : \\\"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\\\",\n\\\"vaHolderNamePos\\\" : \\\"1\\\"\n}\n\")\n\n  req, _ := http.NewRequest(\"POST\", url, payload)\n\n  req.Header.Add(\"x-access-token\", \"your access token\")\n  req.Header.Add(\"content-type\", \"application/json\")\n  req.Header.Add(\"accept\", \"application/json;charset=UTF-8\")\n\n  res, _ := http.DefaultClient.Do(req)\n\n  defer res.Body.Close()\n  body, _ := ioutil.ReadAll(res.Body)\n\n  fmt.Println(res)\n  fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"x-access-token\": \"your access token\",\n  \"content-type\": \"application/json\",\n  \"accept\": \"application/json;charset=UTF-8\"\n]\nlet parameters = [\n  \"vaTypeCode\": \"1\",\n  \"issueRequestCount\": \"5\",\n  \"raId\": \"301011000192\",\n  \"vaContractAuthKey\": \"\",\n  \"vaHolderNameKana\": \"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\",\n  \"vaHolderNamePos\": \"1\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/issue\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()\n"
  /va/status-change:
    post:
      tags:
        - "virtual-account"
      summary: "振込入金口座状態変更"
      description: "<p>振込入金口座の状態変更（停止・再開・削除）を行います</p>\n<p><font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font></p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>状態変更上限数</p>\n  <p style='padding-left:20px;'>1リクエスト　：　100口座まで</p>\n</div> <div style='margin-bottom:40px;' />\n"
      operationId: "statusChangeUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: false
          schema:
            $ref: "#/definitions/VaStatusChangeRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              vAccounts:
                - vaId: "5021099622"
                  vaBranchCode: "502"
                  vaBranchName: "あじさい支店"
                  vaAccountNumber: "1099622"
                  vaHolderNameKana: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
                  vaTypeCode: "1"
                  vaTypeName: "期限型"
                  vaStatusCode: "2"
                  vaStatusName: "停止中"
                  vaStatusChangePossibleCode: "2"
                  vaIssueDateTime: "2018-08-01T10:00:00+09:00"
                  vaChangeStatusDateTime: "2018-08-10T15:00:00+09:00"
                  expireDateTime: "2018-08-31T12:59:59+09:00"
                  latestDepositDate: "2018-08-02"
                  latestDepositAmount: "50000"
                  latestDepositCount: "3"
                  raId: "201011234567"
                  raBranchCode: "201"
                  raBranchNameKana: "ビジネス"
                  raAccountNumber: "1234567"
                  raHolderName: "ＧＭＯ　あおぞら　太郎"
          schema:
            $ref: "#/definitions/VaStatusChangeResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/status-change \\\n  -H 'accept: application/json;charset=UTF-8' \\\n  -H 'content-type: application/json' \\\n  -H 'x-access-token: your access token' \\\n  -d '{\n    \"vaContractAuthKey\" : null,\n    \"vaStatusChangeCode\" : \"1\",\n    \"vaIdList\" : [\n      {\n        \"vaId\" : \"5021099622\"\n      },\n      {\n        \"vaId\" : \"5021099636\"\n      },\n      {\n        \"vaId\" : \"5021099645\"\n      },\n      {\n        \"vaId\" : \"5021099657\"\n      },\n      {\n        \"vaId\" : \"5021099662\"\n      }\n    ]\n  }'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/status-change\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"x-access-token\"] = 'your access token'\nrequest[\"content-type\"] = 'application/json'\nrequest[\"accept\"] = 'application/json;charset=UTF-8'\nrequest.body = \"{\n\\\"vaContractAuthKey\\\" : null,\n\\\"vaStatusChangeCode\\\" : \\\"1\\\",\n\\\"vaIdList\\\" : [\n {\n  \\\"vaId\\\" : \\\"5021099622\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099636\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099645\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099657\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099662\\\"\n }\n]\n}\n\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPSConnection(\"api.gmo-aozora.com\")\n\npayload = \"{\n\\\"vaContractAuthKey\\\" : null,\n\\\"vaStatusChangeCode\\\" : \\\"1\\\",\n\\\"vaIdList\\\" : [\n {\n  \\\"vaId\\\" : \\\"5021099622\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099636\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099645\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099657\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099662\\\"\n }\n]\n}\n\"\n\nheaders = {\n    'x-access-token': \"your access token\",\n    'content-type': \"application/json\",\n    'accept': \"application/json;charset=UTF-8\"\n    }\n\nconn.request(\"POST\", \"/ganb/api/simulator/personal/v1/va/status-change\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/status-change\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\n\\\"vaContractAuthKey\\\" : null,\n\\\"vaStatusChangeCode\\\" : \\\"1\\\",\n\\\"vaIdList\\\" : [\n {\n  \\\"vaId\\\" : \\\"5021099622\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099636\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099645\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099657\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099662\\\"\n }\n]\n}\n\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json;charset=UTF-8\",\n    \"content-type: application/json\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\n\\\"vaContractAuthKey\\\" : null,\n\\\"vaStatusChangeCode\\\" : \\\"1\\\",\n\\\"vaIdList\\\" : [\n {\n  \\\"vaId\\\" : \\\"5021099622\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099636\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099645\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099657\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099662\\\"\n }\n]\n}\n\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/status-change\")\n  .post(body)\n  .addHeader(\"x-access-token\", \"your access token\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"accept\", \"application/json;charset=UTF-8\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/status-change',\n  headers: \n   { accept: 'application/json;charset=UTF-8',\n     'content-type': 'application/json',\n     'x-access-token': 'your access token' },\n  body: \n   { vaContractAuthKey: null,\n     vaStatusChangeCode: '1',\n     vaIdList: \n      [ { vaId: '5021099622' },\n        { vaId: '5021099636' },\n        { vaId: '5021099645' },\n        { vaId: '5021099657' },\n        { vaId: '5021099662' } ] },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n  \"fmt\"\n  \"strings\"\n  \"net/http\"\n  \"io/ioutil\"\n)\n\nfunc main() {\n\n  url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/status-change\"\n\n  payload := strings.NewReader(\"{\n\\\"vaContractAuthKey\\\" : null,\n\\\"vaStatusChangeCode\\\" : \\\"1\\\",\n\\\"vaIdList\\\" : [\n {\n  \\\"vaId\\\" : \\\"5021099622\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099636\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099645\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099657\\\"\n },\n {\n  \\\"vaId\\\" : \\\"5021099662\\\"\n }\n]\n}\n\")\n\n  req, _ := http.NewRequest(\"POST\", url, payload)\n\n  req.Header.Add(\"x-access-token\", \"your access token\")\n  req.Header.Add(\"content-type\", \"application/json\")\n  req.Header.Add(\"accept\", \"application/json;charset=UTF-8\")\n\n  res, _ := http.DefaultClient.Do(req)\n\n  defer res.Body.Close()\n  body, _ := ioutil.ReadAll(res.Body)\n\n  fmt.Println(res)\n  fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"x-access-token\": \"your access token\",\n  \"content-type\": \"application/json\",\n  \"accept\": \"application/json;charset=UTF-8\"\n]\nlet parameters = [\n  \"vaContractAuthKey\": \"\",\n  \"vaStatusChangeCode\": \"1\",\n  \"vaIdList\": [[\"vaId\": \"5021099622\"], [\"vaId\": \"5021099636\"], [\"vaId\": \"5021099645\"], [\"vaId\": \"5021099657\"], [\"vaId\": \"5021099662\"]]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/va/status-change\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()\n"
  /va/close-request:
    post:
      tags:
        - "virtual-account"
      summary: "振込入金口座解約申込"
      description: "振込入金口座契約の解約申込を行います\n解約は解約受付月の月末に行われます\n<font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font>\n"
      operationId: "vaCloseRequestUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: false
          schema:
            $ref: "#/definitions/VaCloseRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VaCloseRequestResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-access-token: your access token' \\\n  -d '{\"vaContractAuthKey\":null}'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"x-access-token\"] = 'your access token'\nrequest.body = \"{\\\"vaContractAuthKey\\\":null}\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\npayload = \"{\\\"vaContractAuthKey\\\":null}\"\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'Content-Type': \"application/json\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"POST\", \"ganb/api/simulator/corporation/v1/va/close-request\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"vaContractAuthKey\\\":null}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"Content-Type: application/json\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"vaContractAuthKey\\\":null}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request',\n  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type': 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n  body: { vaContractAuthKey: null },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"strings\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request\"\n\n payload := strings.NewReader(\"{\\\"vaContractAuthKey\\\":null}\")\n\n req, _ := http.NewRequest(\"POST\", url, payload)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"Content-Type\", \"application/json\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"Content-Type\": \"application/json\",\n  \"x-access-token\": \"your access token\"\n]\nlet parameters = [\"vaContractAuthKey\": \"\"] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /transfer/status:
    get:
      tags:
        - "transfer"
      summary: "振込状況照会"
      description: "<p>仕向の振込状況および履歴を照会します</p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取得上限件数</p>\n  <p style='padding-left:20px;'>500件</p>\n  <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>\n  <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ページング</p>\n  <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ソート順</p>\n  <p style='padding-left:20px;'>振込照会対象期間区分の指定により下記となります  </p>\n <p style='padding-left:20px;'>1：振込申請受付日　第1ソート：振込申請日昇順　第２ソート：振込申請番号昇順</p>\n <p style='padding-left:20px;'>2：振込指定日　　　第1ソート：振込指定日昇順　第２ソート：振込申請番号昇順</p>\n  <p style='padding-left:20px;'>※振込照会対象期間区分の指定がない場合は、1：振込申請受付日と同じとします</p>\n</div>\n<div style='width:600px; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>対象期間</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　当日分の明細を返却</li>\n    <li style='list-style-type:none;'>&#9313;の場合　対象期間From　～　当日までの明細を返却</li>\n    <li style='list-style-type:none;'>&#9314;の場合　取引初回　～　対象期間Toまでの明細を返却</li>\n    <li style='list-style-type:none;'>&#9315;の場合　対象期間From　～　対象期間Toまでの明細を返却</li>\n  </ul>\n</div> <div style='margin-bottom:40px;' />\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>照会対象ステータス</p>\n  <p style='padding-left:20px;'>申請中以降のステータスで照会が可能となります</p>\n  <p style='padding-left:20px;'>依頼中、作成中の状態は照会対象外です</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>照会対象となる明細</p>\n  <p style='padding-left:20px;'>振込・振替・およびその予約の履歴と状況が照会対象となります（APIからの依頼結果のみではありません）</p>\n  <p style='padding-left:20px;'>定額自動振込契約によって自動登録された振込は照会対象となります</p>\n  <p style='padding-left:20px;'>定額自動振込契約の申請状態と状況は対象外となります</p>\n</div>\n"
      operationId: "transferStatusUsingGET"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "accountId"
          in: "query"
          description: "口座ID\n半角数字\n口座を識別するID\n\nminLength: 12\nmaxLength: 29\n"
          required: true
          type: "string"
          allowEmptyValue: false
          x-example: "301011234567"
          x-exportParamName: "AccountId"
        - name: "queryKeyClass"
          in: "query"
          description: "照会対象キー区分\n半角数字\n照会対象のキー\n1：振込申請照会対象指定、2：振込一括照会対象指定\n\nminLength: 1\nmaxLength: 1\n"
          required: true
          type: "string"
          allowEmptyValue: false
          x-example: "1"
          x-exportParamName: "QueryKeyClass"
        - name: "applyNo"
          in: "query"
          description: "受付番号（振込申請番号）\n半角数字\n照会対象の番号を設定\n照会対象キー区分が、1のときは必須\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n\nminLength: 16\nmaxLength: 16\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018072902345678"
          x-exportParamName: "ApplyNo"
          x-optionalDataType: "String"
        - name: "dateFrom"
          in: "query"
          description: "対象期間From\n半角文字\nYYYY-MM-DD形式\n照会対象キー区分が、2のときは入力可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018-07-30"
          x-exportParamName: "DateFrom"
          x-optionalDataType: "String"
        - name: "dateTo"
          in: "query"
          description: "対象期間To\n半角文字\nYYYY-MM-DD形式\n照会対象キー区分が、2のときは入力可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却\n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018-08-10"
          x-exportParamName: "DateTo"
          x-optionalDataType: "String"
        - name: "nextItemKey"
          in: "query"
          description: "次明細キー\n半角数字\n照会対象キー区分が、2のときは入力可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）            \n\nminLength: 1\nmaxLength: 24\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "1234567890"
          x-exportParamName: "NextItemKey"
          x-optionalDataType: "String"
        - name: "requestTransferStatus"
          in: "query"
          description: "照会対象ステータス\n 半角数字\n 2:申請中、3:差戻、4:取下げ、5:期限切れ、8:承認取消/予約取消、\n 11:予約中、12:手続中、13:リトライ中、\n 20:手続済、22:資金返却、24:組戻手続中、25:組戻済、26:組戻不成立、\n 40:手続不成立\n 照会対象キー区分が、2のときは設定可\n それ以外は設定しません（値が設定されている場合は、「400 Bad Request」を返却）\n 配列のため、複数設定した場合は対象のステータスをOR条件で検索します\n 省略した場合は全てを設定したものとみなします\n\nminLength: 1\nmaxLength: 3\n"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
            maxLength: 3
          collectionFormat: "multi"
          x-example: "20"
          x-exportParamName: "RequestTransferStatus"
        - name: "requestTransferClass"
          in: "query"
          description: "振込照会対象取得区分\n半角数字\n1：ALL、2：振込申請のみ、3：振込受付情報のみ\nNULLを設定\n（値が設定されている場合は、「400 Bad Request」を返却）\n\nminLength: 1\nmaxLength: 1\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: ""
          x-exportParamName: "RequestTransferClass"
          x-optionalDataType: "String"
        - name: "requestTransferTerm"
          in: "query"
          description: "振込照会対象期間区分\n半角数字\n対象期間Fromと対象期間Toで指定する日付の区分\n1：振込申請受付日　2：振込指定日\n照会対象キー区分が2のときのみ入力可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n照会対象キー区分が、2のときに指定しない場合は1と扱います\n\nminLength: 1\nmaxLength: 1\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "1"
          x-exportParamName: "RequestTransferTerm"
          x-optionalDataType: "String"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              acceptanceKeyClass: "2"
              baseDate: "2018-08-10"
              baseTime: "10:00:00+09:00"
              count: 1
              transferQueryBulkResponses:
                - dateFrom: "2018-07-30"
                  dateTo: "2018-08-10"
                  requestNextItemKey: "1234567890"
                  requestTransferStatuses:
                    - requestTransferStatus: "20"
                  requestTransferTerm: "1"
                  hasNext: true
                  nextItemKey: "1234567890"
              transferDetails:
                - transferStatus: "20"
                  transferStatusName: "手続済"
                  transferTypeName: "振込振替"
                  isFeeFreeUse: true
                  isFeePointUse: true
                  pointName: "GMOポイント"
                  transferDetailFee: "345"
                  totalDebitAmount: "123456"
                  transferApplies:
                    - applyNo: "2018072902345678"
                      transferApplyDetails:
                        - applyDatetime: "2018-07-29T10:00:00+09:00"
                          applyStatus: "1"
                  transferAccepts:
                    - acceptNo: "2018072901234567"
                      acceptDatetime: "2018-07-29T10:00:00+09:00"
                  transferResponses:
                    - accountId: "301011234567"
                      remitterName: "ｱｵｿﾞﾗ ﾃｽﾄ"
                      transferDesignatedDate: "2018-07-30"
                      transferInfos:
                        - transferAmount: "1000"
                          ediInfo: "ｾｲｷﾖｳｼﾖﾊﾞﾝｺﾞｳ1234"
                          beneficiaryBankCode: "0398"
                          beneficiaryBankName: "ｱｵｿﾞﾗ"
                          beneficiaryBranchCode: "111"
                          beneficiaryBranchName: "ﾎﾝﾃﾝ"
                          accountTypeCode: "1"
                          accountNumber: "1234567"
                          beneficiaryName: "ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ"
                          transferDetailResponses:
                            - beneficiaryBankNameKanji: "あおぞら銀行"
                              beneficiaryBranchNameKanji: "本店"
                              usedPoint: "1000"
                              isFeeFreeUsed: false
                              transferFee: "1000"
                          unableDetailInfos:
                            - transferDetailStatus: "1"
          schema:
            $ref: "#/definitions/TransferStatusResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X GET \\\n  'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/status?accountId=301011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1' \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'x-access-token: your access token'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/status?accountId=301011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"x-access-token\"] = 'your access token'\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"stg-api,gmo-aozora,com\")\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"GET\", \"ganb/api/personal/v1,transfer/status?accountId=301011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/status?accountId=301011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/status?accountId=301011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\")\n  .get()\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/status',\n  qs: \n   { accountId: '301011234567',\n     queryKeyClass: '2',\n     dateFrom: '2018-07-30',\n     dateTo: '2018-08-10',\n     nextItemKey: '1234567890',\n     requestTransferStatus: '20',\n     requestTransferClass: '1',\n     requestTransferTerm: '1' },\n  headers: \n   { 'x-access-token': 'your access token',\n     Accept: 'application/json;charset=UTF-8' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/status?accountId=301011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\"\n\n req, _ := http.NewRequest(\"GET\", url, nil)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"x-access-token\": \"your access token\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/status?accountId=301011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()\n"
  /transfer/request-result:
    get:
      tags:
        - "transfer"
      summary: "振込依頼結果照会"
      description: "振込依頼、振込取消依頼の処理状態を照会します\n振込取消依頼をした場合は、最後の依頼の結果コードが照会対象となります\n"
      operationId: "transferRequestResultUsingGET"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "accountId"
          in: "query"
          description: "口座ID\n半角数字\n口座を識別するID\n\nminLength: 12\nmaxLength: 29\n"
          required: true
          type: "string"
          allowEmptyValue: false
          x-example: "301011234567"
          x-exportParamName: "AccountId"
        - name: "applyNo"
          in: "query"
          description: "受付番号（振込申請番号）\n半角数字\nすべての振込・総合振込で採番される、照会の基本単位となる番号\n\nminLength: 16\nmaxLength: 16\n"
          required: true
          type: "string"
          allowEmptyValue: false
          x-example: "2018072902345678"
          x-exportParamName: "ApplyNo"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TransferRequestResultResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X GET \\\n  'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request-result?accountId=301011234567&applyNo=2018072902345678' \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'x-access-token: your access token'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request-result?accountId=301011234567&applyNo=2018072902345678\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"x-access-token\"] = 'your access token'\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"GET\", \"ganb/api/simulator/personal/v1/transfer/request-result?accountId=301011234567&applyNo=2018072902345678\",  headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request-result?accountId=301011234567&applyNo=2018072902345678\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request-result?accountId=301011234567&applyNo=2018072902345678\")\n  .get()\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request-result',\n  qs: { accountId: '301011234567', applyNo: '2018072902345678' },\n  headers: \n   { 'x-access-token': 'your access token',\n     Accept: 'application/json;charset=UTF-8' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request-result?accountId=301011234567&applyNo=2018072902345678\"\n\n req, _ := http.NewRequest(\"GET\", url, nil)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"x-access-token\": \"your access token\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request-result?accountId=301011234567&applyNo=2018072902345678\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /transfer/transferfee:
    post:
      tags:
        - "transfer"
      summary: "振込手数料事前照会"
      description: "<p>振込・振込予約を行うための依頼内容の事前チェックと手数料を照会します</p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='padding-left:20px;'>最大99件まで登録可能</p>\n  <p style='padding-left:20px;'>1件の場合通常の振込扱いとなり、2件以上で一括振込扱いとなります</p>\n  <p style='padding-left:20px;'>振込無料回数とポイントについては、算出から振込実行までの間に変動する可能性があるため、手数料算出時の計算対象から除外しています</p>\n</div>\n"
      operationId: "transferFeeUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: true
          schema:
            $ref: "#/definitions/TransferRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              accountId: "301011234567"
              baseDate: "2018-07-30"
              baseTime: "10:00:00+09:00"
              totalFee: "200"
              transferFeeDetails:
                - itemId: "1"
                  transferFee: "150"
                - itemId: "2"
                  transferFee: "0"
                - itemId: "3"
                  transferFee: "50"
          schema:
            $ref: "#/definitions/TransferFeeResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/TransferError"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/transferfee \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-access-token: your access token' \\\n  -d '{\n  \"accountId\": \"301011234567\",\n  \"remitterName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/transferfee\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"x-access-token\"] = 'your access token'\nrequest[\"Content-Type\"] = 'application/json'\nrequest.body = \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",\\n  \\\"transfers\\\": [\\n    {\\n      \\\"itemId\\\": 1,\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 2,\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 3,\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\"\\n    }\\n  ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\npayload = \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",\\n  \\\"transfers\\\": [\\n    {\\n      \\\"itemId\\\": 1,\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 2,\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 3,\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\"\\n    }\\n  ]\\n}\"\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'x-access-token': \"your access token\",\n    'Content-Type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"ganb/api/simulator/personal/v1/transfer/transferfee\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/transferfee\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",\\n  \\\"transfers\\\": [\\n    {\\n      \\\"itemId\\\": 1,\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 2,\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 3,\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\"\\n    }\\n  ]\\n}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"Content-Type: application/json\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",\\n  \\\"transfers\\\": [\\n    {\\n      \\\"itemId\\\": 1,\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 2,\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 3,\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\"\\n    }\\n  ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/transferfee\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/transferfee',\n  headers: \n   { 'Content-Type': 'application/json',\n     'x-access-token': 'your access token',\n     Accept: 'application/json;charset=UTF-8' },\n  body: \n   { accountId: '301011234567',\n     remitterName: 'ｱｵｿﾞﾗ ﾃｽﾄ',\n     transferDesignatedDate: '2018-07-30',\n     transferDateHolidayCode: '1',\n     totalCount: '3',\n     totalAmount: '3000',\n     transfers: \n      [ { itemId: 1,\n          transferAmount: '1000',\n          beneficiaryBankCode: '0398',\n          beneficiaryBankName: 'ｱｵｿﾞﾗ',\n          beneficiaryBranchCode: '111',\n          beneficiaryBranchName: 'ﾎﾝﾃﾝ',\n          accountTypeCode: '1',\n          accountNumber: '1234567',\n          beneficiaryName: 'ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ' },\n        { itemId: 2,\n          transferAmount: '1500',\n          beneficiaryBankCode: '0310',\n          beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '301',\n          beneficiaryBranchName: 'ｳﾐ',\n          accountTypeCode: '1',\n          accountNumber: '2345678',\n          beneficiaryName: 'ｱｵｿﾞﾗ ﾃｽﾄ' },\n        { itemId: 3,\n          transferAmount: '500',\n          beneficiaryBankCode: '0310',\n          beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '101',\n          beneficiaryBranchName: 'ﾎｳｼﾞﾝ',\n          accountTypeCode: '1',\n          accountNumber: '3456789',\n          beneficiaryName: 'ｷｯｻｱｵｿﾞﾗ(ｶ' } ] },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"strings\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/transferfee\"\n\n payload := strings.NewReader(\"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",\\n  \\\"transfers\\\": [\\n    {\\n      \\\"itemId\\\": 1,\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 2,\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 3,\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\"\\n    }\\n  ]\\n}\")\n\n req, _ := http.NewRequest(\"POST\", url, payload)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n req.Header.Add(\"Content-Type\", \"application/json\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"x-access-token\": \"your access token\",\n  \"Content-Type\": \"application/json\"\n]\nlet parameters = [\n  \"accountId\": \"301011234567\",\n  \"remitterName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"transfers\": [\n    [\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    ],\n    [\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    ],\n    [\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    ]\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/transferfee\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /transfer/request:
    post:
      tags:
        - "transfer"
      summary: "振込依頼"
      description: "<p>振込・振込予約を行うための依頼をします</p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='padding-left:20px;'>最大99件まで登録可能</p>\n  <p style='padding-left:20px;'>1件の場合通常の振込扱いとなり、2件以上で一括振込扱いとなります</p>\n</div>\n"
      operationId: "transferRequestUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: true
          schema:
            $ref: "#/definitions/TransferRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/TransferRequestResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/TransferError"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-access-token: your access token' \\\n  -d '{\n  \"accountId\": \"301011234567\",\n  \"remitterName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"x-access-token\"] = 'your access token'\nrequest[\"Content-Type\"] = 'application/json'\nrequest.body = \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",\\n  \\\"transfers\\\": [\\n    {\\n      \\\"itemId\\\": 1,\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 2,\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 3,\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\"\\n    }\\n  ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\npayload = \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",\\n  \\\"transfers\\\": [\\n    {\\n      \\\"itemId\\\": 1,\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 2,\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 3,\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\"\\n    }\\n  ]\\n}\"\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'x-access-token': \"your access token\",\n    'Content-Type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"ganb/api/simulator/personal/v1/transfer/request\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",\\n  \\\"transfers\\\": [\\n    {\\n      \\\"itemId\\\": 1,\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 2,\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 3,\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\"\\n    }\\n  ]\\n}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"Content-Type: application/json\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",\\n  \\\"transfers\\\": [\\n    {\\n      \\\"itemId\\\": 1,\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 2,\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 3,\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\"\\n    }\\n  ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request',\n  headers: \n   { 'Content-Type': 'application/json',\n     'x-access-token': 'your access token',\n     Accept: 'application/json;charset=UTF-8' },\n  body: \n   { accountId: '301011234567',\n     remitterName: 'ｱｵｿﾞﾗ ﾃｽﾄ',\n     transferDesignatedDate: '2018-07-30',\n     transferDateHolidayCode: '1',\n     totalCount: '3',\n     totalAmount: '3000',\n     transfers: \n      [ { itemId: 1,\n          transferAmount: '1000',\n          beneficiaryBankCode: '0398',\n          beneficiaryBankName: 'ｱｵｿﾞﾗ',\n          beneficiaryBranchCode: '111',\n          beneficiaryBranchName: 'ﾎﾝﾃﾝ',\n          accountTypeCode: '1',\n          accountNumber: '1234567',\n          beneficiaryName: 'ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ' },\n        { itemId: 2,\n          transferAmount: '1500',\n          beneficiaryBankCode: '0310',\n          beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '301',\n          beneficiaryBranchName: 'ｳﾐ',\n          accountTypeCode: '1',\n          accountNumber: '2345678',\n          beneficiaryName: 'ｱｵｿﾞﾗ ﾃｽﾄ' },\n        { itemId: 3,\n          transferAmount: '500',\n          beneficiaryBankCode: '0310',\n          beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '101',\n          beneficiaryBranchName: 'ﾎｳｼﾞﾝ',\n          accountTypeCode: '1',\n          accountNumber: '3456789',\n          beneficiaryName: 'ｷｯｻｱｵｿﾞﾗ(ｶ' } ] },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"strings\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request\"\n\n payload := strings.NewReader(\"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",\\n  \\\"transfers\\\": [\\n    {\\n      \\\"itemId\\\": 1,\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 2,\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\"\\n    },\\n    {\\n      \\\"itemId\\\": 3,\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\"\\n    }\\n  ]\\n}\")\n\n req, _ := http.NewRequest(\"POST\", url, payload)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n req.Header.Add(\"Content-Type\", \"application/json\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"x-access-token\": \"your access token\",\n  \"Content-Type\": \"application/json\"\n]\nlet parameters = [\n  \"accountId\": \"301011234567\",\n  \"remitterName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"transfers\": [\n    [\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    ],\n    [\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    ],\n    [\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    ]\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/request\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /transfer/cancel:
    post:
      tags:
        - "transfer"
      summary: "振込取消依頼"
      description: "<p>振込・振込予約の取消を行うための依頼をします</p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取消対象ステータス</p>\n  <p style='padding-left:20px;'>申請中以降のステータスで取消が可能です</p>\n  <p style='padding-left:20px;'>依頼中、作成中の状態は取消対象外です</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取消対象キー区分</p>\n  <p style='padding-left:20px;'>取消対象の取引の内容について指定して下さい</p>\n  <p style='padding-left:20px;'>取消対象キー区分と、取消対象の振込申請番号の状態がマッチしない場合は、「400 Bad Request」を返却します</p>\n  <p style='padding-left:20px;'>振込・振替/一括振込の対象は2のみとなります</p>\n  <p style='padding-left:20px;'>1、3、4は指定不可となります</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>重複した依頼</p>\n  <p style='padding-left:20px;'>同一の受付番号（振込申請番号）への重複した依頼はできません</p>\n  <p style='padding-left:20px;'>なお、前回の振込取消依頼が期限切れとなれば依頼は可能となります</p>\n</div>\n"
      operationId: "transferCancelUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: true
          schema:
            $ref: "#/definitions/TransferCancelRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/TransferCancelResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/cancel \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-access-token: your access token' \\\n  -d '{\n  \"accountId\": \"301011234567\",\n  \"cancelTargetKeyClass\": \"2\",\n  \"applyNo\": \"2018072902345678\"\n}'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/cancel\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"x-access-token\"] = 'your access token'\nrequest.body = \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"cancelTargetKeyClass\\\": \\\"2\\\",\\n  \\\"applyNo\\\": \\\"2018072902345678\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\npayload = \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"cancelTargetKeyClass\\\": \\\"2\\\",\\n  \\\"applyNo\\\": \\\"2018072902345678\\\"\\n}\"\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'Content-Type': \"application/json\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"POST\", \"ganb/api/simulator/personal/v1/transfer/cancel\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/cancel\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"cancelTargetKeyClass\\\": \\\"2\\\",\\n  \\\"applyNo\\\": \\\"2018072902345678\\\"\\n}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"Content-Type: application/json\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"cancelTargetKeyClass\\\": \\\"2\\\",\\n  \\\"applyNo\\\": \\\"2018072902345678\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/cancel\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/cancel',\n  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type': 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n  body: \n   { accountId: '301011234567',\n     cancelTargetKeyClass: '2',\n     applyNo: '2018072902345678' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"strings\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/cancel\"\n\n payload := strings.NewReader(\"{\\n  \\\"accountId\\\": \\\"301011234567\\\",\\n  \\\"cancelTargetKeyClass\\\": \\\"2\\\",\\n  \\\"applyNo\\\": \\\"2018072902345678\\\"\\n}\")\n\n req, _ := http.NewRequest(\"POST\", url, payload)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"Content-Type\", \"application/json\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"Content-Type\": \"application/json\",\n  \"x-access-token\": \"your access token\"\n]\nlet parameters = [\n  \"accountId\": \"301011234567\",\n  \"cancelTargetKeyClass\": \"2\",\n  \"applyNo\": \"2018072902345678\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/cancel\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /transfer/spaccounts-transfer:
    post:
      tags:
        - "transfer"
      summary: "つかいわけ口座間振替"
      description: "つかいわけ口座間の振替を実行します\n振替の実行は即時となります\nつかいわけ口座間の明細移動は当APIの対象外です\n"
      operationId: "SpAccountTransferUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: true
          schema:
            $ref: "#/definitions/SpAccountTransferRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SpAccountTransferResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/spaccounts-transfer \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-access-token: your access token' \\\n  -d '{\n  \"depositSpAccountId\": \"SP301011234567\",\n  \"debitSpAccountId\": \"SP501012345678\",\n  \"currencyCode\": \"JPY\",\n  \"paymentAmount\": \"5000\"\n}'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/spaccounts-transfer\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"x-access-token\"] = 'your access token'\nrequest.body = \"{\\n  \\\"depositSpAccountId\\\": \\\"SP301011234567\\\",\\n  \\\"debitSpAccountId\\\": \\\"SP501012345678\\\",\\n  \\\"currencyCode\\\": \\\"JPY\\\",\\n  \\\"paymentAmount\\\": \\\"5000\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\npayload = \"{\\n  \\\"depositSpAccountId\\\": \\\"SP301011234567\\\",\\n  \\\"debitSpAccountId\\\": \\\"SP501012345678\\\",\\n  \\\"currencyCode\\\": \\\"JPY\\\",\\n  \\\"paymentAmount\\\": \\\"5000\\\"\\n}\"\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'Content-Type': \"application/json\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"POST\", \"ganb/api/simulator/personal/v1/transfer/spaccounts-transfer\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/spaccounts-transfer\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\n  \\\"depositSpAccountId\\\": \\\"SP301011234567\\\",\\n  \\\"debitSpAccountId\\\": \\\"SP501012345678\\\",\\n  \\\"currencyCode\\\": \\\"JPY\\\",\\n  \\\"paymentAmount\\\": \\\"5000\\\"\\n}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"Content-Type: application/json\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n  \\\"depositSpAccountId\\\": \\\"SP301011234567\\\",\\n  \\\"debitSpAccountId\\\": \\\"SP501012345678\\\",\\n  \\\"currencyCode\\\": \\\"JPY\\\",\\n  \\\"paymentAmount\\\": \\\"5000\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/spaccounts-transfer\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/spaccounts-transfer',\n  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type': 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n  body: \n   { depositSpAccountId: 'SP301011234567',\n     debitSpAccountId: 'SP501012345678',\n     currencyCode: 'JPY',\n     paymentAmount: '5000' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"strings\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/spaccounts-transfer\"\n\n payload := strings.NewReader(\"{\\n  \\\"depositSpAccountId\\\": \\\"SP301011234567\\\",\\n  \\\"debitSpAccountId\\\": \\\"SP501012345678\\\",\\n  \\\"currencyCode\\\": \\\"JPY\\\",\\n  \\\"paymentAmount\\\": \\\"5000\\\"\\n}\")\n\n req, _ := http.NewRequest(\"POST\", url, payload)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"Content-Type\", \"application/json\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"Content-Type\": \"application/json\",\n  \"x-access-token\": \"your access token\"\n]\nlet parameters = [\n  \"depositSpAccountId\": \"SP301011234567\",\n  \"debitSpAccountId\": \"SP501012345678\",\n  \"currencyCode\": \"JPY\",\n  \"paymentAmount\": \"5000\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/transfer/spaccounts-transfer\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /bulktransfer/status:
    get:
      tags:
        - "bulk-transfer"
      summary: "総合振込状況照会"
      description: "<p>仕向の総合振込状況および履歴を照会します</p>\n<p><font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font></p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取得上限件数</p>\n  <p style='padding-left:20px;'>総合振込照会明細情報 500件（明細情報取得フラグが「False:取得しない」の場合）</p>\n  <p style='padding-left:20px;'>総合振込明細情報 500件（明細情報取得フラグが「True：取得する」の場合）</p>\n  <p style='padding-left:20px;'>1回のリクエストで照会できる明細は、総合振込照会明細情報または総合振込明細情報のいずれか最大500件です</p>\n  <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>\n  <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ページング</p>\n  <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーまたは総合振込明細情報取得対象キーを追加してリクエストしてください</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ソート順</p>\n  <p style='padding-left:20px;'>明細情報取得フラグが、「False：取得しない」のとき</p>\n  <p style='padding-left:20px;'>　振込照会対象期間区分の指定により下記となります</p>\n  <p style='padding-left:50px;'>1：振込申請受付日　第1ソート：振込申請日昇順　第２ソート：振込申請番号昇順</p>\n  <p style='padding-left:50px;'>2：振込指定日　　　第1ソート：振込指定日昇順　第２ソート：振込申請番号昇順</p>\n  <p style='padding-left:50px;'>※振込照会対象期間区分の指定がない場合は、1：振込申請受付日と同じとします</p>\n <p style='padding-left:20px;'>明細情報取得フラグが、「True：取得する」のとき</p>\n  <p style='padding-left:20px;'>　明細番号の昇順</p>\n</div>\n<div style='width:600px; margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>対象期間</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　当日分の明細を返却</li>\n    <li style='list-style-type:none;'>&#9313;の場合　対象期間From　～　当日までの明細を返却</li>\n    <li style='list-style-type:none;'>&#9314;の場合　取引初回　～　対象期間Toまでの明細を返却</li>\n    <li style='list-style-type:none;'>&#9315;の場合　対象期間From　～　対象期間Toまでの明細を返却</li>\n <li style='list-style-type:none;margin-left:10px;'>※現在契約中の総合振込サービスのみ照会可能となります</li>\n  </ul>\n</div> <div style='margin-bottom:40px;' />\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>照会対象ステータス</p>\n  <p style='padding-left:20px;'>申請中以降のステータスで照会が可能となります</p>\n  <p style='padding-left:20px;'>依頼中、作成中の状態は照会対象外です</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>照会対象となる明細</p>\n  <p style='padding-left:20px;'>総合振込・およびその予約の履歴と状況が照会対象となります（APIからの依頼結果のみではありません）</p>\n</div>\n"
      operationId: "bulkTransferStatusUsingGET"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "accountId"
          in: "query"
          description: "口座ID\n半角数字\n口座を識別するID\n\nminLength: 12\nmaxLength: 29\n"
          required: true
          type: "string"
          allowEmptyValue: false
          x-example: "201011234567"
          x-exportParamName: "AccountId"
        - name: "queryKeyClass"
          in: "query"
          description: "照会対象キー区分\n半角数字\n照会対象のキー\n1：振込申請照会対象指定、2：振込一括照会対象指定\n\nminLength: 1\nmaxLength: 1\n"
          required: true
          type: "string"
          allowEmptyValue: false
          x-example: "1"
          x-exportParamName: "QueryKeyClass"
        - name: "detailInfoNecessity"
          in: "query"
          description: "明細情報取得フラグ\n総合振込明細情報の取得要否\n照会対象キー区分が、1のときは「True：取得する」を指定可\nそれ以外で「True：取得する」が設定されている場合は、「400 Bad Request」を返却\nTrue：取得する、False:取得しない　省略/NULLは　false扱い\n"
          required: false
          type: "boolean"
          allowEmptyValue: false
          x-example: true
          x-exportParamName: "DetailInfoNecessity"
          x-optionalDataType: "Bool"
        - name: "bulktransferItemKey"
          in: "query"
          description: "総合振込明細情報取得対象キー\n半角数字\n明細情報取得フラグが、「True：取得する」のとき指定可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n総合振込明細情報を取得するときに取得を開始する番号\n明細情報取得フラグが、「True：取得する」のときの省略/NULLは1扱い\n1500明細を取得する場合、は以下のように設定\n1電文目：1\n2電文目：501\n3電文目：1001\n\nminLength: 1\nmaxLength: 6\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "501"
          x-exportParamName: "BulktransferItemKey"
          x-optionalDataType: "String"
        - name: "applyNo"
          in: "query"
          description: "受付番号（振込申請番号）\n半角数字\n照会対象の番号を設定\n照会対象キー区分が、1のときは必須\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n\nminLength: 16\nmaxLength: 16\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018072902345678"
          x-exportParamName: "ApplyNo"
          x-optionalDataType: "String"
        - name: "dateFrom"
          in: "query"
          description: "対象期間From\n半角文字\nYYYY-MM-DD形式\n照会対象キー区分が、2のときは入力可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）            \n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018-07-30"
          x-exportParamName: "DateFrom"
          x-optionalDataType: "String"
        - name: "dateTo"
          in: "query"
          description: "対象期間To\n半角文字\nYYYY-MM-DD形式\n照会対象キー区分が、2のときは入力可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却\n\nminLength: 10\nmaxLength: 10\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "2018-08-10"
          x-exportParamName: "DateTo"
          x-optionalDataType: "String"
        - name: "nextItemKey"
          in: "query"
          description: "次明細キー\n半角数字\n照会対象キー区分が、2のときは入力可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）            \n\nminLength: 1\nmaxLength: 24\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "1234567890"
          x-exportParamName: "NextItemKey"
          x-optionalDataType: "String"
        - name: "requestTransferStatus"
          in: "query"
          description: "照会対象ステータス\n 半角数字\n 2:申請中、3:差戻、4:取下げ、5:期限切れ、8:承認取消/予約取消、\n 11:予約中、12:手続中、13:リトライ中、\n 20:手続済、30:不能・組戻あり、40:手続不成立\n\n 照会対象キー区分が、2のときは設定可\n それ以外は設定しません（値が設定されている場合は、「400 Bad Request」を返却）\n 配列のため、複数設定した場合は対象のステータスをOR条件で検索します\n 省略した場合は全てを設定したものとみなします\n\nminLength: 1\nmaxLength: 3\n"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
            maxLength: 3
          collectionFormat: "multi"
          x-example: "20"
          x-exportParamName: "RequestTransferStatus"
        - name: "requestTransferClass"
          in: "query"
          description: "振込照会対象取得区分\n半角数字\n1：ALL、2：振込申請のみ、3：振込受付情報のみ\nNULLを設定\n値が設定されている場合は、「400 Bad Request」を返却\n\nminLength: 1\nmaxLength: 1\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "1"
          x-exportParamName: "RequestTransferClass"
          x-optionalDataType: "String"
        - name: "requestTransferTerm"
          in: "query"
          description: "振込照会対象期間区分\n半角数字\n対象期間Fromと対象期間Toで指定する日付の区分\n1：振込申請受付日　2：振込指定日\n照会対象キー区分が2のときのみ入力可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n照会対象キー区分が、2のときに指定しない場合は1と扱います\n\nminLength: 1\nmaxLength: 1\n"
          required: false
          type: "string"
          allowEmptyValue: false
          x-example: "1"
          x-exportParamName: "RequestTransferTerm"
          x-optionalDataType: "String"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              acceptanceKeyClass: "1"
              detailInfoNecessity: true
              bulktransferItemKey: "501"
              baseDate: "2018-08-10"
              baseTime: "10:00:00+09:00"
              count: "1"
              detailInfoResult: true
              bulkTransferDetails:
                - transferStatus: "20"
                  transferStatusName: "手続済"
                  transferTypeName: "総合振込"
                  isFeeFreeUse: false
                  isFeePointUse: true
                  pointName: "GMOポイント"
                  totalFee: "345"
                  totalDebitAmount: "123456"
                  transferApplies:
                    - applyNo: "2018072902345678"
                      transferApplyDetails:
                        - applyDatetime: "2018-07-29T10:00:00+09:00"
                          applyStatus: "7"
                  transferAccepts:
                    - acceptNo: "2018072901234567"
                      acceptDatetime: "2018-07-29T10:00:00+09:00"
                  bulktransferResponses:
                    - accountId: "201011234567"
                      remitterName: "ｱｵｿﾞﾗ ﾃｽﾄ"
                      transferDesignatedDate: "2018-07-30"
                      transferDataName: "６月分請求"
                      totalCount: "501"
                      totalAmount: "123456"
                      bulkTransferInfos:
                        - itemId: "501"
                          beneficiaryBankCode: "0398"
                          beneficiaryBankName: "ｱｵｿﾞﾗ"
                          beneficiaryBranchCode: "111"
                          beneficiaryBranchName: "ﾎﾝﾃﾝ"
                          accountTypeCode: "1"
                          accountNumber: "1234567"
                          beneficiaryName: "ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ"
                          transferAmount: "1000"
                          ediInfo: "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234"
                          transferDesignatedType: "7"
                          identification: "Y"
                          transferDetailResponses:
                            - beneficiaryBankNameKanji: "あおぞら銀行"
                              beneficiaryBranchNameKanji: "本店"
                              usedPoint: "10"
                              isFeeFreeUsed: false
                              transferFee: "163"
                          unableDetailInfos:
                            - transferDetailStatus: "1"
          schema:
            $ref: "#/definitions/BulkTransferStatusResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X GET \\\n  'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/status?accountId=201011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1' \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'x-access-token: your access token'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/status?accountId=201011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"x-access-token\"] = 'your access token'\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"GET\", \"ganb/api/simulator/personal/v1/bulktransfer/status?accountId=201011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\",  headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/status?accountId=201011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/status?accountId=201011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\")\n  .get()\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/status',\n  qs: \n   { accountId: '201011234567',\n     queryKeyClass: '2',\n     dateFrom: '2018-07-30',\n     dateTo: '2018-08-10',\n     nextItemKey: '1234567890',\n     requestTransferStatus: '20',\n     requestTransferTerm: '1' },\n  headers: \n   { 'x-access-token': 'your access token',\n     Accept: 'application/json;charset=UTF-8' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/status?accountId=201011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\"\n\n req, _ := http.NewRequest(\"GET\", url, nil)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"x-access-token\": \"your access token\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/status?accountId=201011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferTerm=1\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /bulktransfer/request-result:
    get:
      tags:
        - "bulk-transfer"
      summary: "総合振込依頼結果照会"
      description: "総合振込依頼、総合振込取消依頼の処理状態を照会します\n総合振込取消依頼をした場合は、最後の依頼の結果コードが照会対象となります\n<p><font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font>\n"
      operationId: "bulkTransferRequestResultUsingGET"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "accountId"
          in: "query"
          description: "口座ID\n半角数字\n口座を識別するID\n\nminLength: 12\nmaxLength: 29\n"
          required: true
          type: "string"
          allowEmptyValue: false
          x-example: "301011234567"
          x-exportParamName: "AccountId"
        - name: "applyNo"
          in: "query"
          description: "受付番号（振込申請番号）\n半角数字\nすべての振込・総合振込で採番される、照会の基本単位となる番号\n\nminLength: 16\nmaxLength: 16\n"
          required: true
          type: "string"
          allowEmptyValue: false
          x-example: "2018072902345678"
          x-exportParamName: "ApplyNo"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TransferRequestResultResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X GET \\\n  'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request-result?accountId=301011234567&applyNo=2018072902345678' \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'x-access-token: your access token'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request-result?accountId=301011234567&applyNo=2018072902345678\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"x-access-token\"] = 'your access token'\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"GET\", \"ganb/api/simulator/personal/v1/bulktransfer/request-result?accountId=301011234567&applyNo=2018072902345678\",  headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request-result?accountId=301011234567&applyNo=2018072902345678\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request-result?accountId=301011234567&applyNo=2018072902345678\")\n  .get()\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request-result',\n  qs: { accountId: '301011234567', applyNo: '2018072902345678' },\n  headers: \n   { 'x-access-token': 'your access token',\n     Accept: 'application/json;charset=UTF-8' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request-result?accountId=301011234567&applyNo=2018072902345678\"\n\n req, _ := http.NewRequest(\"GET\", url, nil)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"x-access-token\": \"your access token\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request-result?accountId=301011234567&applyNo=2018072902345678\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /bulktransfer/transferfee:
    post:
      tags:
        - "bulk-transfer"
      summary: "総合振込手数料事前照会"
      description: "<p>総合振込・総合振込予約を行うための依頼内容の事前チェックと手数料を照会します</p>\n<font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='padding-left:20px;'>ポイントについては、算出から振込実行までの間に変動する可能性があるため、手数料算出時の計算対象から除外しています</p>\n</div>\n"
      operationId: "bulkTransferFeeUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: true
          schema:
            $ref: "#/definitions/BulkTransferRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        200:
          description: "OK"
          examples:
            application/json:
              accountId: "301011234567"
              baseDate: "2018-07-30"
              baseTime: "10:00:00+09:00"
              totalFee: "200"
              transferFeeDetails:
                - itemId: "1"
                  transferFee: "150"
                - itemId: "2"
                  transferFee: "0"
                - itemId: "3"
                  transferFee: "50"
          schema:
            $ref: "#/definitions/TransferFeeResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/TransferError"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/transferfee \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-access-token: your access token' \\\n  -d '{\n  \"accountId\": \"201011234567\",\n  \"remitterName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/transferfee\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"x-access-token\"] = 'your access token'\nrequest.body = \"{\\n  \\\"accountId\\\": \\\"201011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"transferDataName\\\": \\\"8月定例振込データ\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",,\\n  \\\"bulkTransfers\\\": [\\n    {\\n      \\\"itemId\\\": \\\"1\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"0000\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\",\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\\\",\\n      \\\"transferDesignatedType\\\": \\\"7\\\",\\n      \\\"identification\\\": \\\"Y\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"2\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"3\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\",\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    }\\n  ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\npayload = \"{\\n  \\\"accountId\\\": \\\"201011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"transferDataName\\\": \\\"8月定例振込データ\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",,\\n  \\\"bulkTransfers\\\": [\\n    {\\n      \\\"itemId\\\": \\\"1\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"0000\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\",\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\\\",\\n      \\\"transferDesignatedType\\\": \\\"7\\\",\\n      \\\"identification\\\": \\\"Y\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"2\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"3\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\",\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    }\\n  ]\\n}\"\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'Content-Type': \"application/json\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"POST\", \"ganb/api/simulator/personal/v1/bulktransfer/transferfee\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/transferfee\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\n  \\\"accountId\\\": \\\"201011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"transferDataName\\\": \\\"8月定例振込データ\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",,\\n  \\\"bulkTransfers\\\": [\\n    {\\n      \\\"itemId\\\": \\\"1\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"0000\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\",\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\\\",\\n      \\\"transferDesignatedType\\\": \\\"7\\\",\\n      \\\"identification\\\": \\\"Y\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"2\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"3\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\",\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    }\\n  ]\\n}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"Content-Type: application/json\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n  \\\"accountId\\\": \\\"201011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"transferDataName\\\": \\\"8月定例振込データ\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",,\\n  \\\"bulkTransfers\\\": [\\n    {\\n      \\\"itemId\\\": \\\"1\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"0000\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\",\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\\\",\\n      \\\"transferDesignatedType\\\": \\\"7\\\",\\n      \\\"identification\\\": \\\"Y\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"2\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"3\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\",\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    }\\n  ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/transferfee\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/transferfee',\n  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type': 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n  body: \n   { accountId: '201011234567',\n     remitterName: 'ｱｵｿﾞﾗ ﾃｽﾄ',\n     transferDesignatedDate: '2018-07-30',\n     transferDateHolidayCode: '1',\n     transferDataName: '8月定例振込データ',\n     totalCount: '3',\n     totalAmount: '3000',\n     bulkTransfers: \n      [ { itemId: '1',\n          beneficiaryBankCode: '0398',\n          beneficiaryBankName: 'ｱｵｿﾞﾗ',\n          beneficiaryBranchCode: '111',\n          beneficiaryBranchName: 'ﾎﾝﾃﾝ',\n          clearingHouseName: '0000',\n          accountTypeCode: '1',\n          accountNumber: '1234567',\n          beneficiaryName: 'ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ',\n          transferAmount: '1000',\n          newCode: '1',\n          ediInfo: 'ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234',\n          transferDesignatedType: '7',\n          identification: 'Y' },\n        { itemId: '2',\n          beneficiaryBankCode: '0310',\n          beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '301',\n          beneficiaryBranchName: 'ｳﾐ',\n          clearingHouseName: '',\n          accountTypeCode: '1',\n          accountNumber: '2345678',\n          beneficiaryName: 'ｱｵｿﾞﾗ ﾃｽﾄ',\n          transferAmount: '500',\n          newCode: '1',\n          ediInfo: '',\n          transferDesignatedType: '',\n          identification: '' },\n        { itemId: '3',\n          beneficiaryBankCode: '0310',\n          beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '101',\n          beneficiaryBranchName: 'ﾎｳｼﾞﾝ',\n          clearingHouseName: '',\n          accountTypeCode: '1',\n          accountNumber: '3456789',\n          beneficiaryName: 'ｷｯｻｱｵｿﾞﾗ(ｶ',\n          transferAmount: '1500',\n          newCode: '1',\n          ediInfo: '',\n          transferDesignatedType: '',\n          identification: '' } ] },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"strings\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/transferfee\"\n\n payload := strings.NewReader(\"{\\n  \\\"accountId\\\": \\\"201011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"transferDataName\\\": \\\"8月定例振込データ\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",,\\n  \\\"bulkTransfers\\\": [\\n    {\\n      \\\"itemId\\\": \\\"1\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"0000\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\",\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\\\",\\n      \\\"transferDesignatedType\\\": \\\"7\\\",\\n      \\\"identification\\\": \\\"Y\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"2\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"3\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\",\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    }\\n  ]\\n}\")\n\n req, _ := http.NewRequest(\"POST\", url, payload)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"Content-Type\", \"application/json\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"Content-Type\": \"application/json\",\n  \"x-access-token\": \"your access token\"\n]\nlet parameters = [\n  \"accountId\": \"201011234567\",\n  \"remitterName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"bulkTransfers\": [\n    [\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    ],\n    [\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    ],\n    [\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    ]\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/transferfee\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /bulktransfer/request:
    post:
      tags:
        - "bulk-transfer"
      summary: "総合振込依頼"
      description: "<p>総合振込・総合振込予約を行うための依頼をします</p>\n<font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font>\n"
      operationId: "bulkTransferRequestUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: true
          schema:
            $ref: "#/definitions/BulkTransferRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/BulkTransferRequestResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/TransferError"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-access-token: your access token' \\\n  -d '{\n  \"accountId\": \"201011234567\",\n  \"remitterName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"x-access-token\"] = 'your access token'\nrequest.body = \"{\\n  \\\"accountId\\\": \\\"201011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"transferDataName\\\": \\\"8月定例振込データ\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",,\\n  \\\"bulkTransfers\\\": [\\n    {\\n      \\\"itemId\\\": \\\"1\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"0000\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\",\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\\\",\\n      \\\"transferDesignatedType\\\": \\\"7\\\",\\n      \\\"identification\\\": \\\"Y\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"2\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"3\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\",\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    }\\n  ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\npayload = \"{\\n  \\\"accountId\\\": \\\"201011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"transferDataName\\\": \\\"8月定例振込データ\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",,\\n  \\\"bulkTransfers\\\": [\\n    {\\n      \\\"itemId\\\": \\\"1\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"0000\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\",\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\\\",\\n      \\\"transferDesignatedType\\\": \\\"7\\\",\\n      \\\"identification\\\": \\\"Y\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"2\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"3\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\",\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    }\\n  ]\\n}\"\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'Content-Type': \"application/json\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"POST\", \"ganb/api/simulator/personal/v1/bulktransfer/request\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\n  \\\"accountId\\\": \\\"201011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"transferDataName\\\": \\\"8月定例振込データ\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",,\\n  \\\"bulkTransfers\\\": [\\n    {\\n      \\\"itemId\\\": \\\"1\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"0000\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\",\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\\\",\\n      \\\"transferDesignatedType\\\": \\\"7\\\",\\n      \\\"identification\\\": \\\"Y\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"2\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"3\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\",\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    }\\n  ]\\n}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"Content-Type: application/json\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n  \\\"accountId\\\": \\\"201011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"transferDataName\\\": \\\"8月定例振込データ\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",,\\n  \\\"bulkTransfers\\\": [\\n    {\\n      \\\"itemId\\\": \\\"1\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"0000\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\",\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\\\",\\n      \\\"transferDesignatedType\\\": \\\"7\\\",\\n      \\\"identification\\\": \\\"Y\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"2\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"3\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\",\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    }\\n  ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request',\n  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type': 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n  body: \n   { accountId: '201011234567',\n     remitterName: 'ｱｵｿﾞﾗ ﾃｽﾄ',\n     transferDesignatedDate: '2018-07-30',\n     transferDateHolidayCode: '1',\n     transferDataName: '8月定例振込データ',\n     totalCount: '3',\n     totalAmount: '3000',\n     bulkTransfers: \n      [ { itemId: '1',\n          beneficiaryBankCode: '0398',\n          beneficiaryBankName: 'ｱｵｿﾞﾗ',\n          beneficiaryBranchCode: '111',\n          beneficiaryBranchName: 'ﾎﾝﾃﾝ',\n          clearingHouseName: '0000',\n          accountTypeCode: '1',\n          accountNumber: '1234567',\n          beneficiaryName: 'ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ',\n          transferAmount: '1000',\n          newCode: '1',\n          ediInfo: 'ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234',\n          transferDesignatedType: '7',\n          identification: 'Y' },\n        { itemId: '2',\n          beneficiaryBankCode: '0310',\n          beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '301',\n          beneficiaryBranchName: 'ｳﾐ',\n          clearingHouseName: '',\n          accountTypeCode: '1',\n          accountNumber: '2345678',\n          beneficiaryName: 'ｱｵｿﾞﾗ ﾃｽﾄ',\n          transferAmount: '500',\n          newCode: '1',\n          ediInfo: '',\n          transferDesignatedType: '',\n          identification: '' },\n        { itemId: '3',\n          beneficiaryBankCode: '0310',\n          beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '101',\n          beneficiaryBranchName: 'ﾎｳｼﾞﾝ',\n          clearingHouseName: '',\n          accountTypeCode: '1',\n          accountNumber: '3456789',\n          beneficiaryName: 'ｷｯｻｱｵｿﾞﾗ(ｶ',\n          transferAmount: '1500',\n          newCode: '1',\n          ediInfo: '',\n          transferDesignatedType: '',\n          identification: '' } ] },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"strings\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request\"\n\n payload := strings.NewReader(\"{\\n  \\\"accountId\\\": \\\"201011234567\\\",\\n  \\\"remitterName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n  \\\"transferDesignatedDate\\\": \\\"2018-07-30\\\",\\n  \\\"transferDateHolidayCode\\\": \\\"1\\\",\\n  \\\"transferDataName\\\": \\\"8月定例振込データ\\\",\\n  \\\"totalCount\\\": \\\"3\\\",\\n  \\\"totalAmount\\\": \\\"3000\\\",,\\n  \\\"bulkTransfers\\\": [\\n    {\\n      \\\"itemId\\\": \\\"1\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0398\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｱｵｿﾞﾗ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"111\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎﾝﾃﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"0000\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"1234567\\\",\\n      \\\"beneficiaryName\\\": \\\"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\\\",\\n      \\\"transferAmount\\\": \\\"1000\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\\\",\\n      \\\"transferDesignatedType\\\": \\\"7\\\",\\n      \\\"identification\\\": \\\"Y\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"2\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"301\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ｳﾐ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"2345678\\\",\\n      \\\"beneficiaryName\\\": \\\"ｱｵｿﾞﾗ ﾃｽﾄ\\\",\\n      \\\"transferAmount\\\": \\\"500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    },\\n    {\\n      \\\"itemId\\\": \\\"3\\\",\\n      \\\"beneficiaryBankCode\\\": \\\"0310\\\",\\n      \\\"beneficiaryBankName\\\": \\\"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\\\",\\n      \\\"beneficiaryBranchCode\\\": \\\"101\\\",\\n      \\\"beneficiaryBranchName\\\": \\\"ﾎｳｼﾞﾝ\\\",\\n      \\\"clearingHouseName\\\": \\\"\\\",\\n      \\\"accountTypeCode\\\": \\\"1\\\",\\n      \\\"accountNumber\\\": \\\"3456789\\\",\\n      \\\"beneficiaryName\\\": \\\"ｷｯｻｱｵｿﾞﾗ(ｶ\\\",\\n      \\\"transferAmount\\\": \\\"1500\\\",\\n      \\\"newCode\\\": \\\"1\\\",\\n      \\\"ediInfo\\\": \\\"\\\",\\n      \\\"transferDesignatedType\\\": \\\"\\\",\\n      \\\"identification\\\": \\\"\\\"\\n    }\\n  ]\\n}\")\n\n req, _ := http.NewRequest(\"POST\", url, payload)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"Content-Type\", \"application/json\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"Content-Type\": \"application/json\",\n  \"x-access-token\": \"your access token\"\n]\nlet parameters = [\n  \"accountId\": \"201011234567\",\n  \"remitterName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"bulkTransfers\": [\n    [\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    ],\n    [\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    ],\n    [\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    ]\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/personal/v1/bulktransfer/request\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
  /bulktransfer/cancel:
    post:
      tags:
        - "bulk-transfer"
      summary: "総合振込取消依頼"
      description: "<p>総合振込の取消を行うための依頼をします</p>\n<p><font color=\"red\">※個人事業主のみ対象となり、個人は対象外となります</font></p>\n<h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取消対象ステータス</p>\n  <p style='padding-left:20px;'>申請中以降のステータスで取消が可能です</p>\n  <p style='padding-left:20px;'>依頼中、作成中の状態は取消対象外です</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取消対象キー区分</p>\n  <p style='padding-left:20px;'>取消対象の取引の内容について指定して下さい</p>\n  <p style='padding-left:20px;'>取消対象キー区分と、取消対象の振込申請番号の状態がマッチしない場合は、「400 Bad Request」を返却します</p>\n  <p style='padding-left:20px;'>総合振込の対象は4のみとなります</p>\n  <p style='padding-left:20px;'>1、2、3は指定不可となります</p>\n</div>\n<div style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>重複した依頼</p>\n  <p style='padding-left:20px;'>同一の受付番号（振込申請番号）への重複した依頼はできません</p>\n  <p style='padding-left:20px;'>なお、前回の総合振込取消依頼が期限切れとなれば依頼は可能となります</p>\n</div>\n"
      operationId: "bulkTransferCancelUsingPOST"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "body"
          description: "HTTPリクエストボディ"
          required: true
          schema:
            $ref: "#/definitions/TransferCancelRequest"
          x-exportParamName: "Body"
        - name: "x-access-token"
          in: "header"
          description: "アクセストークン\n\nminLength: 1\nmaxLength: 128\n"
          required: true
          type: "string"
          x-exportParamName: "XAccessToken"
      responses:
        201:
          description: "Created"
          examples:
            application/json:
              accountId: "301011234567"
              cancelTargetKeyClass: "4"
              resultCode: "1"
              applyNo: "2018072902345678"
              applyEndDatetime: "2018-07-29T10:00:00+09:00"
          schema:
            $ref: "#/definitions/TransferCancelResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        405:
          description: "Method Not Allowed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        406:
          description: "Not Acceptable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        411:
          description: "Length Required"
          schema:
            $ref: "#/definitions/ErrorResponse"
        412:
          description: "Precondition Failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
        415:
          description: "Unsupported media type"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
        503:
          description: "Service Unavailable"
          schema:
            $ref: "#/definitions/ErrorResponse"
        504:
          description: "Gateway Timeout"
          schema:
            $ref: "#/definitions/ErrorResponse"
      deprecated: false
      x-code-samples:
        - lang: "cURL"
          source: "curl -X POST \\\n  https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel \\\n  -H 'Accept: application/json;charset=UTF-8' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-access-token: your access token' \\\n  -d '{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"4\",\n  \"applyNo\": \"2018072902345678\"\n}'\n"
        - lang: "Ruby"
          source: "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json;charset=UTF-8'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"x-access-token\"] = 'your access token'\nrequest.body = \"{\\n  \\\"accountId\\\": \\\"101011234567\\\",\\n  \\\"cancelTargetKeyClass\\\": \\\"4\\\",\\n  \\\"applyNo\\\": \\\"2018072902345678\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body\n"
        - lang: "Python"
          source: "import http.client\n\nconn = http.client.HTTPConnection(\"api,gmo-aozora,com\")\n\npayload = \"{\\n  \\\"accountId\\\": \\\"101011234567\\\",\\n  \\\"cancelTargetKeyClass\\\": \\\"4\\\",\\n  \\\"applyNo\\\": \\\"2018072902345678\\\"\\n}\"\n\nheaders = {\n    'Accept': \"application/json;charset=UTF-8\",\n    'Content-Type': \"application/json\",\n    'x-access-token': \"your access token\"\n    }\n\nconn.request(\"POST\", \"ganb/api/simulator/corporation/v1/bulktransfer/cancel\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))\n"
        - lang: "PHP"
          source: "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\n  \\\"accountId\\\": \\\"101011234567\\\",\\n  \\\"cancelTargetKeyClass\\\": \\\"4\\\",\\n  \\\"applyNo\\\": \\\"2018072902345678\\\"\\n}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json;charset=UTF-8\",\n    \"Content-Type: application/json\",\n    \"x-access-token: your access token\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}\n"
        - lang: "Java"
          source: "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n  \\\"accountId\\\": \\\"101011234567\\\",\\n  \\\"cancelTargetKeyClass\\\": \\\"4\\\",\\n  \\\"applyNo\\\": \\\"2018072902345678\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json;charset=UTF-8\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"x-access-token\", \"your access token\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n"
        - lang: "Node"
          source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel',\n  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type': 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n  body: \n   { accountId: '101011234567',\n     cancelTargetKeyClass: '4',\n     applyNo: '2018072902345678' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
        - lang: "Go"
          source: "package main\n\nimport (\n \"fmt\"\n \"strings\"\n \"net/http\"\n \"io/ioutil\"\n)\n\nfunc main() {\n\n url := \"https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel\"\n\n payload := strings.NewReader(\"{\\n  \\\"accountId\\\": \\\"101011234567\\\",\\n  \\\"cancelTargetKeyClass\\\": \\\"4\\\",\\n  \\\"applyNo\\\": \\\"2018072902345678\\\"\\n}\")\n\n req, _ := http.NewRequest(\"POST\", url, payload)\n\n req.Header.Add(\"Accept\", \"application/json;charset=UTF-8\")\n req.Header.Add(\"Content-Type\", \"application/json\")\n req.Header.Add(\"x-access-token\", \"your access token\")\n\n res, _ := http.DefaultClient.Do(req)\n\n defer res.Body.Close()\n body, _ := ioutil.ReadAll(res.Body)\n\n fmt.Println(res)\n fmt.Println(string(body))\n\n}\n"
        - lang: "Swift"
          source: "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json;charset=UTF-8\",\n  \"Content-Type\": \"application/json\",\n  \"x-access-token\": \"your access token\"\n]\nlet parameters = [\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"4\",\n  \"applyNo\": \"2018072902345678\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
definitions:
  Account:
    type: "object"
    required:
      - "accountId"
      - "accountTypeCode"
      - "accountTypeName"
      - "currencyCode"
      - "currencyName"
    properties:
      accountId:
        type: "string"
        example: "301011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      branchCode:
        type: "string"
        example: "301"
        description: "支店コード\n半角数字\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 3
        maxLength: 3
      branchName:
        type: "string"
        example: "うみ"
        description: "支店名\n全角文字\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 1
        maxLength: 30
      accountTypeCode:
        type: "string"
        example: "01"
        description: "科目コード\n半角数字\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n・11=円定期預金\n・51=外貨普通預金\n・81=証券コネクト口座\n"
        minLength: 2
        maxLength: 2
      accountTypeName:
        type: "string"
        example: "普通預金（有利息）"
        description: "科目名\n全角文字\n科目コードの名称\n"
        minLength: 1
        maxLength: 10
      accountNumber:
        type: "string"
        example: "1234567"
        description: "口座番号\n半角数字\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 7
        maxLength: 7
      primaryAccountCode:
        type: "string"
        example: "1"
        description: "代表口座コード\n半角数字\n・1=代表口座\n・2=追加口座\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 1
        maxLength: 1
      primaryAccountCodeName:
        type: "string"
        example: "代表口座"
        description: "代表口座コード名\n全角文字\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 1
        maxLength: 4
      accountName:
        type: "string"
        example: "あおぞら　太郎"
        description: "口座名義\n全角文字\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 1
        maxLength: 48
      accountNameKana:
        type: "string"
        example: "ｱｵｿﾞﾗ ﾀﾛｳ"
        description: "口座名義カナ\n半角文字\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 1
        maxLength: 48
      currencyCode:
        type: "string"
        example: "JPY"
        description: "通貨コード\n半角文字\nISO4217に準拠した通貨コード\n"
        minLength: 3
        maxLength: 3
      currencyName:
        type: "string"
        example: "日本円"
        description: "通貨名\n全角文字\nISO4217に準拠した通貨コードの当行での名称\n"
        minLength: 1
        maxLength: 10
      transferLimitAmount:
        type: "string"
        example: "5000000"
        description: "振込限度額\n半角数字\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 1
        maxLength: 12
    title: "Account"
  AccountsResponse:
    type: "object"
    required:
      - "accounts"
      - "baseDate"
      - "baseTime"
    properties:
      baseDate:
        type: "string"
        example: "2018-08-10"
        description: "基準日\n半角文字\n一覧照会の基準日を示します\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      baseTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "基準時刻\n半角文字\n一覧照会の基準時刻を示します\nHH:MM:SS+09:00形式\n"
        minLength: 14
        maxLength: 14
      accounts:
        type: "array"
        description: "口座情報リスト\n"
        items:
          $ref: "#/definitions/Account"
      spAccounts:
        type: "array"
        description: "つかいわけ口座情報リスト\n該当する情報が無い場合は、項目自体を設定しません\n"
        items:
          $ref: "#/definitions/SpAccount"
    title: "AccountsResponse"
  Balance:
    type: "object"
    required:
      - "accountId"
      - "accountTypeCode"
      - "accountTypeName"
      - "baseDate"
      - "baseTime"
      - "currencyCode"
      - "currencyName"
    properties:
      accountId:
        type: "string"
        example: "301011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      accountTypeCode:
        type: "string"
        example: "01"
        description: "科目コード\n半角数字\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n・11=円定期預金\n・51=外貨普通預金\n・81=証券コネクト口座\n"
        minLength: 2
        maxLength: 2
      accountTypeName:
        type: "string"
        example: "普通預金（有利息）"
        description: "科目名\n全角文字\n科目コードの名称\n"
        minLength: 1
        maxLength: 10
      balance:
        type: "string"
        example: "50000000"
        description: "現在残高\n半角数字　マイナス含む\n基準日時における現在残高\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n・11=円定期預金\n・81=証券コネクト口座\n"
        minLength: 1
        maxLength: 20
      baseDate:
        type: "string"
        example: "2018-08-10"
        description: "基準日\n半角文字\n残高および引出可能額を照会した基準日を示します\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      baseTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "基準時刻\n半角文字\n残高および引出可能額を照会した基準時刻を示します\nHH:MM:SS+09:00形式\n"
        minLength: 14
        maxLength: 14
      withdrawableAmount:
        type: "string"
        example: "50000000"
        description: "支払可能残高\n半角数字　マイナス含む\n応答時点での引出可能額を示します\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 1
        maxLength: 20
      previousDayBalance:
        type: "string"
        example: "49500000"
        description: "前日残高\n半角数字　マイナス含む\n日付が変わった直後は、銀行の締め処理が終わるまでは前々日の残高となります\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 1
        maxLength: 20
      previousMonthBalance:
        type: "string"
        example: "45000000"
        description: "前月末残高\n半角数字　マイナス含む\n月が変わった直後は、銀行の締め処理が終わるまでは前々月の残高となります\n 科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 1
        maxLength: 20
      currencyCode:
        type: "string"
        example: "JPY"
        description: "通貨コード\n半角文字\nISO4217に準拠した通貨コード\n"
        minLength: 3
        maxLength: 3
      currencyName:
        type: "string"
        example: "日本円"
        description: "通貨名\n全角文字\nISO4217に準拠した通貨コードの当行での名称\n"
        minLength: 1
        maxLength: 10
      fcyTotalBalance:
        type: "string"
        example: "350.48"
        description: "外貨残高\n半角数字　少数点および小数部最大3桁　マイナス含む\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・51=外貨普通預金\n"
        minLength: 3
        maxLength: 20
      ttb:
        type: "string"
        example: "110.5"
        description: "外貨レート\n半角数字　少数点および小数部最大3桁　マイナス含む\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・51=外貨普通預金\n"
        minLength: 3
        maxLength: 20
      baseRateDate:
        type: "string"
        example: "2018-08-10"
        description: "外貨レート基準日\n半角文字\n外貨レートの基準日を示します\nYYYY-MM-DD形式\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・51=外貨普通預金\n"
        minLength: 10
        maxLength: 10
      baseRateTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "外貨レート基準時刻\n半角文字\n外貨レートの基準時刻を示します\nHH:MM:SS+09:00形式\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・51=外貨普通預金\n"
        minLength: 14
        maxLength: 14
      yenEquivalent:
        type: "string"
        example: "38728"
        description: "外貨円換算額\n半角数字　マイナス含む\n外貨残高を円に換算した額\n科目コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・51=外貨普通預金\n"
        minLength: 1
        maxLength: 20
    title: "Balance"
    example:
      baseDate: "2018-08-10"
      ttb: "110.5"
      accountTypeCode: "01"
      accountTypeName: "普通預金（有利息）"
      yenEquivalent: "38728"
      previousDayBalance: "49500000"
      previousMonthBalance: "45000000"
      withdrawableAmount: "50000000"
      accountId: "301011234567"
      baseRateTime: "10:00:00+09:00"
      balance: "50000000"
      currencyName: "日本円"
      baseRateDate: "2018-08-10"
      fcyTotalBalance: "350.48"
      baseTime: "10:00:00+09:00"
      currencyCode: "JPY"
  BalancesResponse:
    type: "object"
    properties:
      balances:
        type: "array"
        description: "残高情報リスト\n該当する情報が無い場合は、空のリストを返却します\n"
        items:
          $ref: "#/definitions/Balance"
      spAccountBalances:
        type: "array"
        description: "つかいわけ口座残高情報リスト\n該当する情報が無い場合は、項目自体を設定しません\n"
        items:
          $ref: "#/definitions/SpAccountBalance"
    title: "BalancesResponse"
    example:
      balances:
        - baseDate: "2018-08-10"
          ttb: "110.5"
          accountTypeCode: "01"
          accountTypeName: "普通預金（有利息）"
          yenEquivalent: "38728"
          previousDayBalance: "49500000"
          previousMonthBalance: "45000000"
          withdrawableAmount: "50000000"
          accountId: "301011234567"
          baseRateTime: "10:00:00+09:00"
          balance: "50000000"
          currencyName: "日本円"
          baseRateDate: "2018-08-10"
          fcyTotalBalance: "350.48"
          baseTime: "10:00:00+09:00"
          currencyCode: "JPY"
        - baseDate: "2018-08-10"
          ttb: "110.5"
          accountTypeCode: "01"
          accountTypeName: "普通預金（有利息）"
          yenEquivalent: "38728"
          previousDayBalance: "49500000"
          previousMonthBalance: "45000000"
          withdrawableAmount: "50000000"
          accountId: "301011234567"
          baseRateTime: "10:00:00+09:00"
          balance: "50000000"
          currencyName: "日本円"
          baseRateDate: "2018-08-10"
          fcyTotalBalance: "350.48"
          baseTime: "10:00:00+09:00"
          currencyCode: "JPY"
      spAccountBalances:
        - accountId: "SP101011234567"
          odBalance: "1500000"
          spAccountFcyBalances:
            - baseRateTime: "10:00:00+09:00"
              ttb: "110.5"
              currencyName: "米ドル"
              baseRateDate: "2018-08-10"
              yenEquivalent: "38728"
              fcyTotalBalance: "350.48"
              currencyCode: "USD"
            - baseRateTime: "10:00:00+09:00"
              ttb: "110.5"
              currencyName: "米ドル"
              baseRateDate: "2018-08-10"
              yenEquivalent: "38728"
              fcyTotalBalance: "350.48"
              currencyCode: "USD"
          fodTotalBalanceYenEquivalent: "921834"
          tdTotalBalance: "10000000"
        - accountId: "SP101011234567"
          odBalance: "1500000"
          spAccountFcyBalances:
            - baseRateTime: "10:00:00+09:00"
              ttb: "110.5"
              currencyName: "米ドル"
              baseRateDate: "2018-08-10"
              yenEquivalent: "38728"
              fcyTotalBalance: "350.48"
              currencyCode: "USD"
            - baseRateTime: "10:00:00+09:00"
              ttb: "110.5"
              currencyName: "米ドル"
              baseRateDate: "2018-08-10"
              yenEquivalent: "38728"
              fcyTotalBalance: "350.48"
              currencyCode: "USD"
          fodTotalBalanceYenEquivalent: "921834"
          tdTotalBalance: "10000000"
  BulkTransfer:
    type: "object"
    required:
      - "accountNumber"
      - "accountTypeCode"
      - "beneficiaryBankCode"
      - "beneficiaryBranchCode"
      - "beneficiaryName"
      - "itemId"
      - "transferAmount"
    properties:
      itemId:
        type: "string"
        example: "4"
        description: "明細番号\n半角数字\n重複/0はエラー　1～9999とします\n"
        minLength: 1
        maxLength: 6
      beneficiaryBankCode:
        type: "string"
        example: "0398"
        description: "被仕向金融機関番号\n半角数字\n"
        minLength: 4
        maxLength: 4
      beneficiaryBankName:
        type: "string"
        example: "ｱｵｿﾞﾗ"
        description: "被仕向金融機関名カナ\n半角文字\n参考値、処理に利用しません\n"
        minLength: 1
        maxLength: 30
      beneficiaryBranchCode:
        type: "string"
        example: "111"
        description: "被仕向支店番号\n半角数字\n"
        minLength: 3
        maxLength: 3
      beneficiaryBranchName:
        type: "string"
        example: "ﾎﾝﾃﾝ"
        description: "被仕向支店名カナ\n半角文字\n参考値、処理に利用しません\n"
        minLength: 1
        maxLength: 15
      clearingHouseName:
        type: "string"
        example: "0000"
        description: "手形交換所番号\n半角文字\n入力する場合は、ALL０,ALLスペースであること\n参考値、処理に利用しません\n"
        minLength: 4
        maxLength: 4
      accountTypeCode:
        type: "string"
        example: "1"
        description: "科目コード（預金種別コード）\n半角数字\n1：普通、2：当座、4：貯蓄、9：その他\n"
        minLength: 1
        maxLength: 1
      accountNumber:
        type: "string"
        example: "1234567"
        description: "口座番号\n半角数字\n7桁未満の番号は右詰で、前ゼロで埋めること\n"
        minLength: 7
        maxLength: 7
      beneficiaryName:
        type: "string"
        example: "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ"
        description: "受取人名\n半角文字\n振込許容文字を指定可\nただし、一部の非許容文字は、許容文字に変換を行います\n30文字目まで有効（31文字目以降は切り捨てます）\n"
        minLength: 1
        maxLength: 48
      transferAmount:
        type: "string"
        example: "1000"
        description: "振込金額\n半角数字\n1以上9,999,999,999円以下　数値のみでカンマ、マイナス不可\n"
        minLength: 1
        maxLength: 20
      newCode:
        type: "string"
        example: "1"
        description: "新規コード\n半角文字\n入力する場合は、数値またはスペースであること\n参考値、処理に利用しません\n"
        minLength: 1
        maxLength: 1
      ediInfo:
        type: "string"
        example: "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234"
        description: "EDI情報\n半角文字\n振込許容文字を指定可\n"
        minLength: 1
        maxLength: 20
      transferDesignatedType:
        type: "string"
        example: "7"
        description: "振込指定区分\n半角文字\n入力する場合は、7：電信のみ　またはスペースであること\n参考値、処理に利用しません（入力にかかわらず、すべて7：電信扱いとなります）\n"
        minLength: 1
        maxLength: 1
      identification:
        type: "string"
        example: "Y"
        description: "識別表示\n半角文字\n本項目が「Y」であればEDI情報は振込先に通知、または省略/NULL/スペースであれば振込先には通知しません\n"
        minLength: 1
        maxLength: 1
    title: "BulkTransfer"
  BulkTransferDetail:
    type: "object"
    properties:
      transferStatus:
        type: "string"
        example: "20"
        description: "振込ステータス\n半角数字\n2:申請中、3:差戻、4:取下げ、5:期限切れ、8:承認取消/予約取消、\n11:予約中、12:手続中、13:リトライ中、\n20:手続済、30:不能・組戻あり、40:手続不成立\n"
        minLength: 1
        maxLength: 3
      transferStatusName:
        type: "string"
        example: "手続済"
        description: "振込ステータス名\n全角文字\n"
        minLength: 1
        maxLength: 10
      transferTypeName:
        type: "string"
        example: "総合振込"
        description: "種類\n全角文字\n総合振込　を表示\n"
        minLength: 4
        maxLength: 6
      remitterCode:
        type: "string"
        example: "1234567890"
        description: "会社コード(振込依頼人コード)\n銀行側で番号を付与している場合のみ表示\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 10
        maxLength: 10
      isFeeFreeUse:
        type: "boolean"
        example: false
        description: "振込無料回数利用可否\n振込利用回数の利用可否（無料回数の利用可否の設定であり、実際の利用有無ではありません）\n総合振込では無料回数は利用できないため、常にfalse\n"
      isFeePointUse:
        type: "boolean"
        example: true
        description: "ポイント利用可否\nポイント会社の利用可否\n"
      pointName:
        type: "string"
        example: "GMOポイント"
        description: "ポイント会社名\n全角文字\n"
        minLength: 1
        maxLength: 32
      feeLaterPaymentFlg:
        type: "boolean"
        example: true
        description: "手数料後払区分\n「true=後払い」以外の場合は項目自体を設定しません\n"
      totalFee:
        type: "string"
        example: "345"
        description: "合計手数料\n半角数字\n振り込み完了時以外は、予定の手数料\n"
        minLength: 1
        maxLength: 20
      totalDebitAmount:
        type: "string"
        example: "123456"
        description: "合計出金金額\n半角数字\n手数料+振込金額　ただし、振込完了時以外は、予定の手数料\n"
        minLength: 1
        maxLength: 20
      transferApplies:
        type: "array"
        description: "振込申請情報\n振込申請情報のリスト\n"
        items:
          $ref: "#/definitions/TransferApply"
      transferAccepts:
        type: "array"
        description: "振込受付情報\n振込受付情報のリスト\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/TransferAccept"
      bulktransferResponses:
        type: "array"
        description: "総合振込レスポンス情報\n総合振込レスポンス情報のリスト\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/BulkTransferResponse"
    title: "BulkTransferDetail"
  BulkTransferInfo:
    type: "object"
    properties:
      itemId:
        type: "string"
        example: "4"
        description: "明細番号\n半角数字\n重複/0はエラー　1～9999とします\n"
        minLength: 1
        maxLength: 6
      beneficiaryBankCode:
        type: "string"
        example: "0398"
        description: "被仕向金融機関番号\n半角数字\n"
        minLength: 4
        maxLength: 4
      beneficiaryBankName:
        type: "string"
        example: "ｱｵｿﾞﾗ"
        description: "被仕向金融機関名カナ\n半角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 30
      beneficiaryBranchCode:
        type: "string"
        example: "111"
        description: "被仕向支店番号\n半角数字\n"
        minLength: 3
        maxLength: 3
      beneficiaryBranchName:
        type: "string"
        example: "ﾎﾝﾃﾝ"
        description: "被仕向支店名カナ\n半角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 15
      clearingHouseName:
        type: "string"
        example: "0000"
        description: "手形交換所番号\n半角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 4
        maxLength: 4
      accountTypeCode:
        type: "string"
        example: "1"
        description: "科目コード（預金種別コード）\n半角数字\n1：普通、2：当座、4：貯蓄、9：その他\n"
        minLength: 1
        maxLength: 1
      accountNumber:
        type: "string"
        example: "1234567"
        description: "口座番号\n半角数字\n7桁未満の番号は右詰で、前ゼロで埋めること\n"
        minLength: 7
        maxLength: 7
      beneficiaryName:
        type: "string"
        example: "ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ"
        description: "受取人名\n半角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 48
      transferAmount:
        type: "string"
        example: "1000"
        description: "振込金額\n半角数字\n1以上9,999,999,999円以下　数値のみでカンマ、マイナス不可\n"
        minLength: 1
        maxLength: 20
      newCode:
        type: "string"
        example: "1"
        description: "新規コード\n半角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 1
      ediInfo:
        type: "string"
        example: "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234"
        description: "EDI情報\n半角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
      transferDesignatedType:
        type: "string"
        example: "7"
        description: "振込指定区分\n半角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 1
      identification:
        type: "string"
        example: "Y"
        description: "識別表示\n半角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 1
      transferDetailResponses:
        type: "array"
        description: "振込明細結果\n振込明細結果のリスト\n正常時のみ応答\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/TransferDetailResponse"
      unableDetailInfos:
        type: "array"
        description: "不能明細情報\n不能明細情報のリスト\n該当する情報が無い場合は項目自体を設定しません\n"
        items:
          $ref: "#/definitions/UnableDetailInfo"
    title: "BulkTransferInfo"
  BulkTransferRequest:
    type: "object"
    required:
      - "accountId"
      - "bulkTransfers"
      - "totalAmount"
      - "totalCount"
      - "transferDesignatedDate"
    properties:
      accountId:
        type: "string"
        example: "201011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      remitterName:
        type: "string"
        example: "ｱｵｿﾞﾗ ﾃｽﾄ"
        description: "振込依頼人名\n半角文字\n指定しない場合は口座名義がデフォルト値となります\n振込許容文字を指定可\nただし、一部の非許容文字は、許容文字に変換を行います\n40文字目まで有効（41文字目以降は切り捨てます）\n"
        minLength: 1
        maxLength: 48
      transferDesignatedDate:
        type: "string"
        example: "2018-07-30"
        description: "振込指定日\n半角文字\nYYYY-MM-DD形式\n振込対象の指定日\nただし、振込指定日が非営業日で、非営業日に実施できない振込（他行宛振込み）が振込情報に1件以上存在する場合、以下のとおりとなります\n・「振込指定日休日コード」が1または省略の場合、振込指定日の翌営業日を振込対象の指定日となります\n・「振込指定日休日コード」が2の場合、振込指定日の前営業日を振込対象の指定日となります\n・「振込指定日休日コード」が3の場合、エラーとなり「400 Bad Request」を返却します\n"
        minLength: 10
        maxLength: 10
      transferDateHolidayCode:
        type: "string"
        example: "1"
        description: "振込指定日休日コード\n半角数字\n1：翌営業日、2：前営業日、3：エラー返却\n省略可（省略した場合は1とみなします）\n"
        minLength: 1
        maxLength: 1
      transferDataName:
        type: "string"
        example: "8月定例振込データ"
        description: "振込データ名\n全半角文字\n作成した総合振込のデータを区別するためのメモ\n"
        minLength: 1
        maxLength: 10
      totalCount:
        type: "string"
        example: "5"
        description: "合計件数\n半角数字\n1以上9,999件まで指定可能（0はエラー）\n"
        minLength: 1
        maxLength: 6
      totalAmount:
        type: "string"
        example: "1234500"
        description: "合計金額\n半角数字\n1以上999,999,999,999円以下　数値のみで0、カンマ、マイナス不可\n"
        minLength: 1
        maxLength: 20
      applyComment:
        type: "string"
        example: ""
        description: "振込申請メモ（申請コメント）\n全半角文字\n項目自体の設定が不要\n値を設定しても銀行で読み捨て\n"
        minLength: 1
        maxLength: 20
      bulkTransfers:
        type: "array"
        description: "総合振込明細情報\n総合振込明細のリスト"
        items:
          $ref: "#/definitions/BulkTransfer"
    title: "BulkTransferRequest"
    example:
      accountId: "201011234567"
      remitterName: "ｱｵｿﾞﾗ ﾃｽﾄ"
      transferDesignatedDate: "2018-07-30"
      transferDateHolidayCode: "1"
      transferDataName: "8月定例振込データ"
      totalCount: "3"
      totalAmount: "3000"
      bulkTransfers:
        - itemId: "1"
          beneficiaryBankCode: "0398"
          beneficiaryBankName: "ｱｵｿﾞﾗ"
          beneficiaryBranchCode: "111"
          beneficiaryBranchName: "ﾎﾝﾃﾝ"
          clearingHouseName: "0000"
          accountTypeCode: "1"
          accountNumber: "1234567"
          beneficiaryName: "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ"
          transferAmount: "1000"
          newCode: "1"
          ediInfo: "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234"
          transferDesignatedType: "7"
          identification: "Y"
        - itemId: "2"
          beneficiaryBankCode: "0310"
          beneficiaryBankName: "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ"
          beneficiaryBranchCode: "301"
          beneficiaryBranchName: "ｳﾐ"
          clearingHouseName: ""
          accountTypeCode: "1"
          accountNumber: "2345678"
          beneficiaryName: "ｱｵｿﾞﾗ ﾃｽﾄ"
          transferAmount: "500"
          newCode: "1"
          ediInfo: ""
          transferDesignatedType: ""
          identification: ""
        - itemId: "3"
          beneficiaryBankCode: "0310"
          beneficiaryBankName: "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ"
          beneficiaryBranchCode: "101"
          beneficiaryBranchName: "ﾎｳｼﾞﾝ"
          clearingHouseName: ""
          accountTypeCode: "1"
          accountNumber: "3456789"
          beneficiaryName: "ｷｯｻｱｵｿﾞﾗ(ｶ"
          transferAmount: "1500"
          newCode: "1"
          ediInfo: ""
          transferDesignatedType: ""
          identification: ""
  BulkTransferResponse:
    type: "object"
    properties:
      accountId:
        type: "string"
        example: "201011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      remitterName:
        type: "string"
        example: "ｱｵｿﾞﾗ ﾃｽﾄ"
        description: "振込依頼人名\n半角文字\n"
        minLength: 1
        maxLength: 48
      transferDesignatedDate:
        type: "string"
        example: "2018-07-30"
        description: "振込指定日\n半角文字\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      transferDataName:
        type: "string"
        example: "６月分請求"
        description: "振込データ名\n全半角文字\n作成した総合振込のデータを区別するためのメモ\n"
        minLength: 1
        maxLength: 10
      totalCount:
        type: "string"
        example: "5"
        description: "合計件数\n半角数字\n"
        minLength: 1
        maxLength: 6
      totalAmount:
        type: "string"
        example: "1234500"
        description: "合計金額\n半角数字\n"
        minLength: 1
        maxLength: 20
      bulkTransferInfos:
        type: "array"
        description: "総合振込明細情報\n総合振込明細のリスト\n明細情報取得フラグが「True：取得する」、かつ明細情報取得結果フラグが「True：取得可」のときのみ設定します\nそれ以外は項目自体を設定しません\n"
        items:
          $ref: "#/definitions/BulkTransferInfo"
    title: "BulkTransferResponse"
  BulkTransferRequestResponse:
    type: "object"
    required:
      - "accountId"
      - "applyNo"
      - "resultCode"
    properties:
      accountId:
        type: "string"
        example: "201011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      resultCode:
        type: "string"
        example: "1"
        description: "結果コード\n半角数字\n1:完了　2：未完了\n"
        minLength: 1
        maxLength: 1
      applyNo:
        type: "string"
        example: "2018072902345678"
        description: "受付番号（振込申請番号）\n半角数字\nすべての振込・総合振込で採番される、照会の基本単位となる番号\n"
        minLength: 16
        maxLength: 16
      applyEndDatetime:
        type: "string"
        example: "2018-07-29T10:00:00+09:00"
        description: "振込依頼完了日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\n結果コードが、1:完了のときのみセット\nそれ以外は項目自体を設定しません\n"
        minLength: 25
        maxLength: 25
    title: "BulkTransferRequestResponse"
    example:
      accountId: "201011234567"
      applyEndDatetime: "2018-07-29T10:00:00+09:00"
      applyNo: "2018072902345678"
      resultCode: "1"
  BulkTransferStatusResponse:
    type: "object"
    required:
      - "acceptanceKeyClass"
      - "baseDate"
      - "baseTime"
      - "count"
    properties:
      acceptanceKeyClass:
        type: "string"
        example: "1"
        description: "照会対象キー区分\n半角数字\nリクエストしたときと同じ内容\n照会対象のキー\n1：振込申請照会対象指定、2：振込一括照会対象指定\n"
        minLength: 1
        maxLength: 1
      detailInfoNecessity:
        type: "boolean"
        example: true
        description: "明細情報取得フラグ\n総合振込明細情報の取得要否\nリクエストしたときと同じ内容\n該当する情報が無い場合は項目自体を設定しません\n"
      bulktransferItemKey:
        type: "string"
        example: "501"
        description: "総合振込明細情報取得対象キー\n半角数字\nリクエストしたときと同じ内容\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 6
      baseDate:
        type: "string"
        example: "2018-08-10"
        description: "基準日\n半角文字\n総合振込照会明細情報を照会した基準日を示します\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      baseTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "基準時刻\n半角文字\n総合振込照会明細情報を照会した基準時刻を示します\nHH:MM:SS+09:00形式\n"
        minLength: 14
        maxLength: 14
      count:
        type: "string"
        example: "500"
        description: "明細取得件数\n半角数字\n振込明細の件数\n"
        minLength: 1
        maxLength: 7
      detailInfoResult:
        type: "boolean"
        example: true
        description: "明細情報取得結果フラグ\n総合振込明細情報の取得結果\nTrue：取得可、False:取得不可\n明細情報取得フラグが「True：取得する」のときに、明細情報が取得できたかを設定します\n総合振込の依頼完了直後は「False:取得不可」となります\n総合振込の依頼完了後１０分程度すると「True：取得可」となります\n「False:取得不可」の場合、総合振込明細情報は項目自体が設定されません\n明細情報取得フラグが「True：取得する」の場合以外は項目自体を設定しません\n"
      transferQueryBulkResponses:
        type: "array"
        description: "振込一括照会対象指定レスポンス\n該当する情報が無い場合は項目自体を設定しません\n"
        items:
          $ref: "#/definitions/TransferQueryBulkResponse"
      bulkTransferDetails:
        type: "array"
        description: "総合振込照会明細情報\n振込照会明細情報のリスト\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/BulkTransferDetail"
    title: "BulkTransferStatusResponse"
  DepositTransactionsResponse:
    type: "object"
    required:
      - "accountId"
      - "baseDate"
      - "baseTime"
      - "count"
      - "dateFrom"
      - "dateTo"
      - "hasNext"
    properties:
      accountId:
        type: "string"
        example: "201011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      dateFrom:
        type: "string"
        example: "2018-07-30"
        description: "対象期間From\n半角文字\nYYYY-MM-DD形式\nリクエストに対象期間From、Toが設定されていない場合当日日付が設定されます\n"
        minLength: 10
        maxLength: 10
      dateTo:
        type: "string"
        example: "2018-08-10"
        description: "対象期間To\n半角文字\nYYYY-MM-DD形式\nリクエストに対象期間From、Toが設定されていない場合当日日付が設定されます\n"
        minLength: 10
        maxLength: 10
      baseDate:
        type: "string"
        example: "2018-08-10"
        description: "基準日\n半角文字\nYYYY-MM-DD形式\n振込入金明細を照会した基準日を示します\n"
        minLength: 10
        maxLength: 10
      baseTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "基準時刻\nHH:MM:SS+09:00形式\n振込入金明細を照会した基準時刻を示します\n"
        minLength: 14
        maxLength: 14
      hasNext:
        type: "boolean"
        example: true
        description: "次明細フラグ\n・true=次明細あり\n・false=次明細なし\n"
      nextItemKey:
        type: "string"
        example: "20181012090520113000"
        description: "次明細キー\n半角数字\n次明細フラグがfalseの場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 24
      count:
        type: "string"
        example: "500"
        description: "明細取得件数\n半角数字\n"
        minLength: 1
        maxLength: 7
      paymentArrivals:
        type: "array"
        description: "振込入金明細情報\n該当する情報が無い場合は、空のリストを返却します\n"
        items:
          $ref: "#/definitions/PaymentArrival"
    title: "DepositTransactionsResponse"
  ErrorDetail:
    type: "object"
    properties:
      errorDetailsCode:
        type: "string"
        example: "0023456"
        description: "エラー詳細コード\n半角英数文字\nエラーの詳細コード内容\n"
        minLength: 1
        maxLength: 10
      errorDetailsMessage:
        type: "string"
        example: "金融機関情報エラー"
        description: "エラー詳細内容\n全半角英数記号文字\nエラー詳細コードに紐付くメッセージ\n"
        minLength: 1
        maxLength: 255
    title: "ErrorDetail"
  ErrorResponse:
    type: "object"
    required:
      - "errorCode"
      - "errorMessage"
    properties:
      errorCode:
        type: "string"
        example: "ERROR12345"
        description: "エラーコード\n半角英数文字\n"
        minLength: 1
        maxLength: 10
      errorMessage:
        type: "string"
        example: "エラーメッセージ"
        description: "エラーメッセージ\n全半角英数記号文字\n"
        minLength: 1
        maxLength: 255
    title: "ErrorResponse"
  PaymentArrival:
    type: "object"
    required:
      - "amount"
      - "itemKey"
      - "transactionDate"
      - "transactionType"
      - "valueDate"
    properties:
      transactionDate:
        type: "string"
        example: "2018-07-30"
        description: "取引日\n半角文字\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      valueDate:
        type: "string"
        example: "2018-07-30"
        description: "起算日\n半角文字\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      transactionType:
        type: "string"
        example: "1"
        description: "入払コード\n半角数字\n・1=入金\n・2=出金\n常に1=入金のみ\n"
        minLength: 1
        maxLength: 1
      remarks:
        type: "string"
        example: "振込 ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123 アオゾラショウジ（カ"
        description: "摘要内容\n全半角文字\n該当データがない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 255
      amount:
        type: "string"
        example: "50000"
        description: "取引金額\n半角数字　マイナス含む\n"
        minLength: 1
        maxLength: 20
      applicantName:
        type: "string"
        example: "ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ"
        description: "依頼人名\n半角文字\n該当データがない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 48
      paymentBankName:
        type: "string"
        example: "ｱｵｿﾞﾗｷﾞﾝｺｳ"
        description: "仕向金融機関名カナ\n半角文字\n"
        minLength: 1
        maxLength: 30
      paymentBranchName:
        type: "string"
        example: "ﾎﾝﾃﾝ"
        description: "仕向支店名カナ\n半角文字\n"
        minLength: 1
        maxLength: 15
      ediInfo:
        type: "string"
        example: "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123"
        description: "EDI情報\n半角文字\n該当データがない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
      itemKey:
        type: "string"
        example: "20181012090520113000"
        description: "明細キー\n半角数字\n口座ID毎に設定される明細キー（明細データtimestamp（μs））\n"
        minLength: 1
        maxLength: 24
    title: "PaymentArrival"
  RequestTransferStatus:
    type: "object"
    properties:
      requestTransferStatus:
        type: "string"
        example: "20"
        description: "照会対象ステータス\n半角数字\n2:申請中、3:差戻、4:取下げ、5:期限切れ、8:承認取消/予約取消、\n11:予約中、12:手続中、13:リトライ中、\n20:手続済、22:資金返却、24:組戻手続中、25:組戻済、26:組戻不成立、\n30:不能・組戻あり、\n40:手続不成立\n配列のため、複数設定した場合は対象のステータスをOR条件で検索します\n省略した場合は全てを設定したものとみなします\n22、24、25、26は振込状況照会でのみ指定可\n30は総合振込状況照会でのみ指定可\nレスポンスの場合はリクエストしたときと同じ内容となります\n"
        minLength: 1
        maxLength: 3
    title: "RequestTransferStatus"
  SpAccount:
    type: "object"
    required:
      - "accountId"
      - "spAccountName"
      - "spAccountTypeCode"
      - "spAccountTypeCodeName"
    properties:
      accountId:
        type: "string"
        example: "SP101011234567"
        description: "口座ID\n半角英数字\nつかいわけ口座を識別するID\n"
        minLength: 12
        maxLength: 29
      spAccountTypeCode:
        type: "string"
        example: "2"
        description: "つかいわけ口座種別コード\n半角数字\n・1=親口座\n・2=子口座\n"
        minLength: 1
        maxLength: 1
      spAccountTypeCodeName:
        type: "string"
        example: "子口座"
        description: "つかいわけ口座種別コード名称\n全角文字\nつかいわけ口座種別コードの名称\n"
        minLength: 3
        maxLength: 3
      spAccountName:
        type: "string"
        example: "貯蓄専用"
        description: "つかいわけ口座名\n全半角英数記号文字\n"
        minLength: 1
        maxLength: 10
      spAccountBranchCode:
        type: "string"
        example: "502"
        description: "支店コード\n半角数字\nつかいわけ口座種別コードが「2=子口座」の場合のみ設定\n該当しない場合は項目自体を設定しません\n"
        minLength: 3
        maxLength: 3
      spAccountBranchName:
        type: "string"
        example: "あじさい支店"
        description: "支店名\n全角文字\nつかいわけ口座種別コードが「2=子口座」の場合のみ設定\n該当しない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 30
      spAccountNumber:
        type: "string"
        example: "1047569"
        description: "口座番号\n半角数字\nつかいわけ口座種別コードが「2=子口座」の場合のみ設定\n該当しない場合は項目自体を設定しません\n"
        minLength: 7
        maxLength: 7
    title: "SpAccount"
  SpAccountBalance:
    type: "object"
    required:
      - "accountId"
    properties:
      accountId:
        type: "string"
        example: "SP101011234567"
        description: "口座ID\n半角英数字\nつかいわけ口座を識別するID\n"
        minLength: 12
        maxLength: 29
      odBalance:
        type: "string"
        example: "1500000"
        description: "円普通預金残高\n半角数字　マイナス含む\n該当しない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
      tdTotalBalance:
        type: "string"
        example: "10000000"
        description: "円定期預金（総額）\n半角数字　マイナス含む\nつかいわけ口座に紐付いた、円定期預金の総残高\n該当しない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
      fodTotalBalanceYenEquivalent:
        type: "string"
        example: "921834"
        description: "外貨普通預金（総評価額）\n半角数字　マイナス含む\nつかいわけ口座に紐付いた、外貨普通預金の総残高を円に換算した額\n該当しない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
      spAccountFcyBalances:
        type: "array"
        description: "つかわけ口座外貨残高情報リスト\n該当する情報が無い場合は、空のリストを返却します\n"
        items:
          $ref: "#/definitions/SpAccountFcyBalance"
    title: "SpAccountBalance"
    example:
      accountId: "SP101011234567"
      odBalance: "1500000"
      spAccountFcyBalances:
        - baseRateTime: "10:00:00+09:00"
          ttb: "110.5"
          currencyName: "米ドル"
          baseRateDate: "2018-08-10"
          yenEquivalent: "38728"
          fcyTotalBalance: "350.48"
          currencyCode: "USD"
        - baseRateTime: "10:00:00+09:00"
          ttb: "110.5"
          currencyName: "米ドル"
          baseRateDate: "2018-08-10"
          yenEquivalent: "38728"
          fcyTotalBalance: "350.48"
          currencyCode: "USD"
      fodTotalBalanceYenEquivalent: "921834"
      tdTotalBalance: "10000000"
  SpAccountFcyBalance:
    type: "object"
    required:
      - "baseRateDate"
      - "baseRateTime"
      - "currencyCode"
      - "currencyName"
      - "fcyTotalBalance"
      - "ttb"
      - "yenEquivalent"
    properties:
      currencyCode:
        type: "string"
        example: "USD"
        description: "通貨コード\n半角文字\nISO4217に準拠した通貨コード\n"
        minLength: 3
        maxLength: 3
      currencyName:
        type: "string"
        example: "米ドル"
        description: "通貨名\n全角文字\nISO4217に準拠した通貨コードの当行での名称\n"
        minLength: 1
        maxLength: 10
      fcyTotalBalance:
        type: "string"
        example: "350.48"
        description: "外貨残高\n半角数字　少数点および小数部最大3桁　マイナス含む\n"
        minLength: 3
        maxLength: 20
      ttb:
        type: "string"
        example: "110.5"
        description: "外貨レート\n半角数字　少数点および小数部最大3桁　マイナス含む\n"
        minLength: 3
        maxLength: 20
      baseRateDate:
        type: "string"
        example: "2018-08-10"
        description: "外貨レート基準日\n半角文字\n外貨レートの基準日を示します\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      baseRateTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "外貨レート基準時刻\n半角文字\n外貨レートの基準時刻を示します\nHH:MM:SS+09:00形式\n"
        minLength: 14
        maxLength: 14
      yenEquivalent:
        type: "string"
        example: "38728"
        description: "外貨円換算額\n半角数字　マイナス含む\n外貨残高を円に換算した額\n"
        minLength: 1
        maxLength: 20
    title: "SpAccountFcyBalance"
    example:
      baseRateTime: "10:00:00+09:00"
      ttb: "110.5"
      currencyName: "米ドル"
      baseRateDate: "2018-08-10"
      yenEquivalent: "38728"
      fcyTotalBalance: "350.48"
      currencyCode: "USD"
  SpAccountTransferRequest:
    type: "object"
    required:
      - "debitSpAccountId"
      - "depositSpAccountId"
      - "paymentAmount"
    properties:
      depositSpAccountId:
        type: "string"
        example: "SP301011234567"
        description: "つかいわけ口座_入金口座ID\n半角数字\n口座を識別するID　入金先となる口座情報\n"
        minLength: 12
        maxLength: 29
      debitSpAccountId:
        type: "string"
        example: "SP501012345678"
        description: "つかいわけ口座_出金口座ID\n半角数字\n口座を識別するID　引き落とし元となる口座情報\n"
        minLength: 12
        maxLength: 29
      currencyCode:
        type: "string"
        example: "JPY"
        description: "通貨コード\n半角文字\nISO4217準拠した通貨コード\n省略時はJPYとみなします\n"
        minLength: 3
        maxLength: 3
      paymentAmount:
        type: "string"
        example: "5000"
        description: "支払金額\n数値のみでカンマ、マイナス不可\n円(JPY)の場合１以上であること\n外貨の場合当該通貨の補助通貨単位以上であること\n"
        minLength: 1
        maxLength: 20
    title: "SpAccountTransferRequest"
    example:
      depositSpAccountId: "SP301011234567"
      debitSpAccountId: "SP501012345678"
      currencyCode: "JPY"
      paymentAmount: "5000"
  SpAccountTransferResponse:
    type: "object"
    required:
      - "debitSpAccountId"
      - "depositSpAccountId"
    properties:
      acceptDatetime:
        type: "string"
        example: "2018-08-01T10:00:00+09:00"
        description: "更新受付日時\n更新を受付した銀行側の日時\n"
        minLength: 25
        maxLength: 25
      depositSpAccountId:
        type: "string"
        example: "SP301011234567"
        description: "つかいわけ口座_入金口座ID\n半角数字\n口座を識別するID　入金先となる口座情報\n"
        minLength: 12
        maxLength: 29
      debitSpAccountId:
        type: "string"
        example: "SP501012345678"
        description: "つかいわけ口座_出金口座ID\n半角数字\n口座を識別するID　引き落とし元となる口座情報\n"
        minLength: 12
        maxLength: 29
      currencyCode:
        type: "string"
        example: "JPY"
        description: "通貨コード\n半角文字\nISO4217準拠した通貨コード\n"
        minLength: 3
        maxLength: 3
      currencyName:
        type: "string"
        example: "日本円"
        description: "通貨名\n全角文字\nISO4217準拠した通貨コードの当行での名称\n"
        minLength: 1
        maxLength: 10
      paymentAmount:
        type: "string"
        example: "5000"
        description: "支払金額\n数値のみでカンマ、マイナス不可\n円貨(JPY)の場合１以上であること\n外貨の場合当該通貨の補助通貨単位以上であること\n"
        minLength: 1
        maxLength: 10
    title: "SpAccountTransferResponse"
    example:
      currencyName: "日本円"
      acceptDatetime: "2018-08-01T10:00:00+09:00"
      depositSpAccountId: "SP301011234567"
      debitSpAccountId: "SP501012345678"
      currencyCode: "JPY"
      paymentAmount: "5000"
  Transaction:
    type: "object"
    required:
      - "amount"
      - "balance"
      - "transactionDate"
      - "transactionType"
      - "valueDate"
    properties:
      transactionDate:
        type: "string"
        example: "2018-07-30"
        description: "取引日\n半角文字\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      valueDate:
        type: "string"
        example: "2018-07-30"
        description: "起算日\n半角文字\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      transactionType:
        type: "string"
        example: "2"
        description: "入払コード\n半角数字\n・1=入金\n・2=出金\n"
        minLength: 1
        maxLength: 1
      amount:
        type: "string"
        example: "50000"
        description: "取引金額\n半角数字　マイナス含む\n"
        minLength: 1
        maxLength: 20
      remarks:
        type: "string"
        example: "振込 アオゾラ タロウ"
        description: "摘要内容\n全半角文字\n該当データがない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 255
      balance:
        type: "string"
        example: "1200000"
        description: "取引後残高\n半角数字　マイナス含む\n"
        minLength: 1
        maxLength: 20
      itemKey:
        type: "string"
        example: "20181012090520112541"
        description: "明細キー\n半角数字\n口座の科目が01=普通預金（有利息）または02=普通預金（決済用）の場合は口座ID毎に設定される明細キー（明細データtimestamp（μs））\n該当データがない場合または、つかいわけ口座の場合は項目自体を設定しません"
        minLength: 1
        maxLength: 24
    title: "Transaction"
    example:
      transactionType: "2"
      amount: "50000"
      balance: "1200000"
      valueDate: "2018-07-30"
      transactionDate: "2018-07-30"
      remarks: "振込 アオゾラ タロウ"
      itemKey: "20181012090520112541"
  TransactionsResponse:
    type: "object"
    required:
      - "accountId"
      - "baseDate"
      - "baseTime"
      - "count"
      - "currencyCode"
      - "currencyName"
      - "dateFrom"
      - "dateTo"
      - "hasNext"
    properties:
      accountId:
        type: "string"
        example: "301011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      currencyCode:
        type: "string"
        example: "JPY"
        description: "通貨コード\n半角文字\nISO4217に準拠した通貨コード\n"
        minLength: 3
        maxLength: 3
      currencyName:
        type: "string"
        example: "日本円"
        description: "通貨名\n全角文字\nISO4217に準拠した通貨コードの当行での名称\n"
        minLength: 1
        maxLength: 10
      dateFrom:
        type: "string"
        example: "2018-07-30"
        description: "対象期間From\n半角文字\nYYYY-MM-DD形式\nリクエストに対象期間From、Toが設定されていない場合は当日日付が設定されます\n"
        minLength: 10
        maxLength: 10
      dateTo:
        type: "string"
        example: "2018-08-10"
        description: "対象期間To\n半角文字\nYYYY-MM-DD形式\nリクエストに対象期間From、Toが設定されていない場合は当日日付が設定されます\n"
        minLength: 10
        maxLength: 10
      baseDate:
        type: "string"
        example: "2018-08-10"
        description: "基準日\n入出金明細を照会した基準日を示します\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      baseTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "基準時刻\n入出金明細を照会した基準時刻を示します\nHH:MM:SS+09:00形式\n"
        minLength: 14
        maxLength: 14
      hasNext:
        type: "boolean"
        example: true
        description: "次明細フラグ\n・true=次明細あり\n・false=次明細なし\n"
      nextItemKey:
        type: "string"
        example: "20181012090520112541"
        description: "次明細キー\n半角数字\n次明細フラグがfalseの場合は、項目自体を設定しません\n"
        minLength: 1
        maxLength: 24
      count:
        type: "string"
        example: "500"
        description: "明細取得件数\n半角数字\n"
        minLength: 1
        maxLength: 7
      transactions:
        type: "array"
        description: "入出金明細情報リスト\n該当する情報が無い場合は、空のリストを返却します\n"
        items:
          $ref: "#/definitions/Transaction"
    title: "TransactionsResponse"
    example:
      accountId: "301011234567"
      baseDate: "2018-08-10"
      currencyName: "日本円"
      dateTo: "2018-08-10"
      count: "500"
      hasNext: true
      dateFrom: "2018-07-30"
      nextItemKey: "20181012090520112541"
      transactions:
        - transactionType: "2"
          amount: "50000"
          balance: "1200000"
          valueDate: "2018-07-30"
          transactionDate: "2018-07-30"
          remarks: "振込 アオゾラ タロウ"
          itemKey: "20181012090520112541"
        - transactionType: "2"
          amount: "50000"
          balance: "1200000"
          valueDate: "2018-07-30"
          transactionDate: "2018-07-30"
          remarks: "振込 アオゾラ タロウ"
          itemKey: "20181012090520112541"
      currencyCode: "JPY"
      baseTime: "10:00:00+09:00"
  Transfer:
    type: "object"
    required:
      - "accountNumber"
      - "accountTypeCode"
      - "beneficiaryBankCode"
      - "beneficiaryBranchCode"
      - "beneficiaryName"
      - "transferAmount"
    properties:
      itemId:
        type: "string"
        example: "4"
        description: "明細番号\n半角数字\n重複/0はエラー　1～99の範囲で１からの連番とします\n1件のみの場合は省略可（項目自体の設定が不要です）\n"
        minLength: 1
        maxLength: 6
      transferAmount:
        type: "string"
        example: "1000"
        description: "振込金額\n半角数字\n1以上、整数のみ\n"
        minLength: 1
        maxLength: 20
      ediInfo:
        type: "string"
        example: "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234"
        description: "EDI情報\n半角文字\n振込許容文字を指定可\n・個人事業主のみ対象の項目のため、個人は対象外となります\n・個人の場合は設定しても無効となり、処理に利用しません\n"
        minLength: 1
        maxLength: 20
      beneficiaryBankCode:
        type: "string"
        example: "0398"
        description: "被仕向金融機関番号\n半角数字\n"
        minLength: 4
        maxLength: 4
      beneficiaryBankName:
        type: "string"
        example: "ｱｵｿﾞﾗ"
        description: "被仕向金融機関名カナ\n半角文字\n参考値、処理に利用しません\n"
        minLength: 1
        maxLength: 30
      beneficiaryBranchCode:
        type: "string"
        example: "111"
        description: "被仕向支店番号\n半角数字\n"
        minLength: 3
        maxLength: 3
      beneficiaryBranchName:
        type: "string"
        example: "ﾎﾝﾃﾝ"
        description: "被仕向支店名カナ\n半角文字\n参考値、処理に利用しません\n"
        minLength: 1
        maxLength: 15
      accountTypeCode:
        type: "string"
        example: "1"
        description: "科目コード（預金種別コード）\n半角数字\n1：普通、2：当座、4：貯蓄、9：その他\n"
        minLength: 1
        maxLength: 1
      accountNumber:
        type: "string"
        example: "1234567"
        description: "口座番号\n半角数字\n7桁未満の番号は右詰で、前ゼロで埋めること\n"
        minLength: 7
        maxLength: 7
      beneficiaryName:
        type: "string"
        example: "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ"
        description: "受取人名\n半角文字\n振込許容文字を指定可\nただし、一部の非許容文字は、許容文字に変換を行います\n"
        minLength: 1
        maxLength: 48
    title: "Transfer"
  TransferAccept:
    type: "object"
    properties:
      acceptNo:
        type: "string"
        example: "2018072901234567"
        description: "受付番号（振込　受付番号）\n半角数字\n振込で取引が成立/予約中になると採番（振込、総合振込、定額自動振込で共通）\n"
        minLength: 16
        maxLength: 16
      acceptDatetime:
        type: "string"
        example: "2018-07-29T10:00:00+09:00"
        description: "振込受付日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\nこの申請の受付日時\n"
        minLength: 25
        maxLength: 25
    title: "TransferAccept"
  TransferApply:
    type: "object"
    properties:
      applyNo:
        type: "string"
        example: "2018072902345678"
        description: "受付番号（振込申請番号）\n半角数字\nすべての振込・総合振込で採番される、照会の基本単位となる番号\n"
        minLength: 16
        maxLength: 16
      transferApplyDetails:
        type: "array"
        description: "振込申請詳細情報\n振込申請詳細情報のリスト\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/TransferApplyDetail"
    title: "TransferApply"
  TransferApplyDetail:
    type: "object"
    properties:
      applyDatetime:
        type: "string"
        example: "null"
        description: "振込申請受付日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\nこの申請の受付日時\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 25
        maxLength: 25
      applyStatus:
        type: "string"
        example: "null"
        description: "振込申請ステータス\n半角数字\n0：未申請、1：申請中、2：差戻、3：取下げ、4：期限切れ、5：承認済、6：承認取消、7：自動承認\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 1
      applyUser:
        type: "string"
        example: "null"
        description: "申請者\n全半角文字\n申請をしたユーザ名\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 45
      applyComment:
        type: "string"
        example: "null"
        description: "申請者コメント\n全半角文字\n申請したユーザのコメント\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
      approvalUser:
        type: "string"
        example: "null"
        description: "決裁者\n全半角文字\n承認をしたユーザ名\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 45
      approvalComment:
        type: "string"
        example: "null"
        description: "決裁者コメント\n全半角文字\n承認をしたユーザのコメント\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
    title: "TransferApplyDetail"
  TransferCancelRequest:
    type: "object"
    required:
      - "accountId"
      - "applyNo"
      - "cancelTargetKeyClass"
    properties:
      accountId:
        type: "string"
        example: "301011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      cancelTargetKeyClass:
        type: "string"
        example: "2"
        description: "取消対象キー区分\n半角英数値\n取消対象の取引の内容について指定します\n1:振込申請取消　2:振込受付取消　3:総合振込申請取消　4:総合振込受付取消\n・2、4のみの指定可能\n取消対象キー区分と、取消対象の振込申請番号の状態がマッチしない場合は、「400 Bad Request」を返却\n"
        minLength: 1
        maxLength: 1
      applyNo:
        type: "string"
        example: "2018072902345678"
        description: "受付番号（振込申請番号）\n半角数字\n取り消し対象の番号を設定\n"
        minLength: 16
        maxLength: 16
    title: "TransferCancelRequest"
    example:
      cancelTargetKeyClass: "2"
      accountId: "301011234567"
      applyNo: "2018072902345678"
  TransferCancelResponse:
    type: "object"
    required:
      - "accountId"
      - "applyNo"
      - "cancelTargetKeyClass"
      - "resultCode"
    properties:
      accountId:
        type: "string"
        example: "301011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      cancelTargetKeyClass:
        type: "string"
        example: "2"
        description: "取消対象キー区分\n半角英数値\n1:振込申請取消　2:振込受付取消　3:総合振込申請取消　4:総合振込受付取消\n"
        minLength: 1
        maxLength: 1
      resultCode:
        type: "string"
        example: "1"
        description: "結果コード\n半角数字\n1:完了　2：未完了\n"
        minLength: 1
        maxLength: 1
      applyNo:
        type: "string"
        example: "2018072902345678"
        description: "受付番号（振込申請番号）\n半角数字\n取り消し対象の番号\n"
        minLength: 16
        maxLength: 16
      applyEndDatetime:
        type: "string"
        example: "2018-07-29T10:00:00+09:00"
        description: "振込依頼完了日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\n結果コードが、1:完了のときのみセット\nこのリクエストの依頼が完了した日時を返却\nそれ以外は項目自体を設定しません\n"
        minLength: 25
        maxLength: 25
    title: "TransferCancelResponse"
    example:
      cancelTargetKeyClass: "2"
      accountId: "301011234567"
      applyEndDatetime: "2018-07-29T10:00:00+09:00"
      applyNo: "2018072902345678"
      resultCode: "1"
  TransferDetail:
    type: "object"
    properties:
      transferStatus:
        type: "string"
        example: "20"
        description: "振込ステータス\n半角数字\n2:申請中、3:差戻、4:取下げ、5:期限切れ、8:承認取消/予約取消、\n11:予約中、12:手続中、13:リトライ中、\n20:手続済、22:資金返却、24:組戻手続中、25:組戻済、26:組戻不成立、\n40:手続不成立\n"
        minLength: 1
        maxLength: 3
      transferStatusName:
        type: "string"
        example: "手続済"
        description: "振込ステータス名\n全角文字\n"
        minLength: 1
        maxLength: 10
      transferTypeName:
        type: "string"
        example: "振込振替"
        description: "種類\n全角文字\n振込振替　または　定額自動振込　を表示\n"
        minLength: 4
        maxLength: 6
      isFeeFreeUse:
        type: "boolean"
        example: true
        description: "振込無料回数利用可否\n振込利用回数の利用可否（無料回数の利用可否の設定であり、実際の利用有無ではありません）\n"
      isFeePointUse:
        type: "boolean"
        example: true
        description: "ポイント利用可否\nポイント会社の利用可否\n"
      pointName:
        type: "string"
        example: "GMOポイント"
        description: "ポイント会社名\n全角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 32
      feeLaterPaymentFlg:
        type: "boolean"
        example: true
        description: "手数料後払区分\n「true=後払い」以外の場合は項目自体を設定しません\n"
      transferDetailFee:
        type: "string"
        example: "345"
        description: "明細手数料\n半角数字\n振り込み完了時以外は、予定の手数料\n"
        minLength: 1
        maxLength: 20
      totalDebitAmount:
        type: "string"
        example: "123456"
        description: "合計出金金額\n半角数字\n手数料+振込金額　ただし、振込完了時以外は、予定の手数料\n"
        minLength: 1
        maxLength: 20
      transferApplies:
        type: "array"
        description: "振込申請情報\n振込申請情報のリスト\n"
        items:
          $ref: "#/definitions/TransferApply"
      transferAccepts:
        type: "array"
        description: "振込受付情報\n振込受付情報のリスト\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/TransferAccept"
      transferResponses:
        type: "array"
        description: "振込レスポンス情報\n振込レスポンス情報のリスト\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/TransferResponse"
    title: "TransferDetail"
  TransferDetailResponse:
    type: "object"
    properties:
      beneficiaryBankNameKanji:
        type: "string"
        example: "あおぞら銀行"
        description: "被仕向金融機関名漢字\n全角文字\n被仕向金融機関番号に該当する金融機関名漢字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 30
      beneficiaryBranchNameKanji:
        type: "string"
        example: "本店"
        description: "被仕向支店名漢字\n全角文字\n被仕向支店番号に該当する支店名漢字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 30
      usedPoint:
        type: "string"
        example: "1000"
        description: "利用ポイント\n半角数字\n実際に利用したポイント\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
      isFeeFreeUsed:
        type: "boolean"
        example: false
        description: "振込無料回数利用有無\n振込無料回数の実際の利用有無\n総合振込では無料回数は利用できないため、常にfalse\n"
      transferFee:
        type: "string"
        example: "1000"
        description: "手数料\n半角数字\n個別明細単位の手数料\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
    title: "TransferDetailResponse"
  TransferError:
    type: "object"
    required:
      - "errorCode"
      - "errorMessage"
    properties:
      errorCode:
        type: "string"
        example: "ERROR12345"
        description: "エラーコード\n半角英数文字\n"
        minLength: 1
        maxLength: 10
      errorMessage:
        type: "string"
        example: "エラーメッセージ"
        description: "エラーメッセージ\n全半角英数記号文字\n"
        minLength: 1
        maxLength: 255
      errorDetails:
        type: "array"
        description: "エラー詳細情報\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/ErrorDetail"
      transferErrorDetails:
        type: "array"
        description: "振込明細エラー情報\n個別明細がエラーの場合のみ応答\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/TransferErrorDetail"
    title: "TransferError"
  TransferErrorDetail:
    type: "object"
    properties:
      itemId:
        type: "string"
        example: "3"
        description: "明細番号\n半角数字\nエラーとなった明細番号を表示\n"
        minLength: 1
        maxLength: 6
      errorDetails:
        type: "array"
        description: "エラー詳細情報\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/ErrorDetail"
    title: "TransferErrorDetail"
  TransferFeeDetail:
    type: "object"
    required:
      - "itemId"
      - "transferFee"
    properties:
      itemId:
        type: "string"
        example: "3"
        description: "明細番号\n半角数字\n明細番号を表示\n"
        minLength: 1
        maxLength: 6
      transferFee:
        type: "string"
        example: "150"
        description: "個別振込手数料\n半角数字\n該当明細番号の手数料を表示\n"
        minLength: 1
        maxLength: 20
    title: "TransferFeeDetail"
  TransferFeeResponse:
    type: "object"
    required:
      - "accountId"
      - "baseDate"
      - "baseTime"
      - "totalFee"
      - "transferFeeDetails"
    properties:
      accountId:
        type: "string"
        example: "301011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      baseDate:
        type: "string"
        example: "2018-07-30"
        description: "基準日\n振込の手数料を照会した基準日を示します\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      baseTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "基準時刻\n振込の手数料を照会した基準時刻を示します\nHH:MM:SS+09:00形式\n"
        minLength: 14
        maxLength: 14
      totalFee:
        type: "string"
        example: "20000"
        description: "合計振込手数料\n半角数字\n手数料の合計額を表示\n"
        minLength: 1
        maxLength: 255
      transferFeeDetails:
        type: "array"
        description: "振込手数料明細情報\n個別明細を設定\n"
        items:
          $ref: "#/definitions/TransferFeeDetail"
    title: "TransferFeeResponse"
  TransferInfo:
    type: "object"
    properties:
      transferAmount:
        type: "string"
        example: "1000"
        description: "振込金額\n半角数字\n1以上,整数のみ\n"
        minLength: 1
        maxLength: 20
      ediInfo:
        type: "string"
        example: "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234"
        description: "EDI情報\n半角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
      beneficiaryBankCode:
        type: "string"
        example: "0398"
        description: "被仕向金融機関番号\n半角数字\n"
        minLength: 4
        maxLength: 4
      beneficiaryBankName:
        type: "string"
        example: "ｱｵｿﾞﾗ"
        description: "被仕向金融機関名カナ\n半角文字\n"
        minLength: 1
        maxLength: 30
      beneficiaryBranchCode:
        type: "string"
        example: "111"
        description: "被仕向支店番号\n半角数字\n"
        minLength: 3
        maxLength: 3
      beneficiaryBranchName:
        type: "string"
        example: "ﾎﾝﾃﾝ"
        description: "被仕向支店名カナ\n半角文字\n"
        minLength: 1
        maxLength: 15
      accountTypeCode:
        type: "string"
        example: "1"
        description: "科目コード（預金種別コード）\n半角数字\n1：普通、2：当座、4：貯蓄、9：その他\n"
        minLength: 1
        maxLength: 1
      accountNumber:
        type: "string"
        example: "1234567"
        description: "口座番号\n半角数字\n7桁未満の番号は右詰で、前ゼロで埋めること\n"
        minLength: 7
        maxLength: 7
      beneficiaryName:
        type: "string"
        example: "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ"
        description: "受取人名\n半角文字\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 48
      transferDetailResponses:
        type: "array"
        description: "振込明細結果\n振込明細結果のリスト\n正常時のみ応答\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/TransferDetailResponse"
      unableDetailInfos:
        type: "array"
        description: "不能明細情報\n不能明細情報のリスト\n該当する情報が無い場合は項目自体を設定しません\n"
        items:
          $ref: "#/definitions/UnableDetailInfo"
    title: "TransferInfo"
  TransferQueryBulkResponse:
    type: "object"
    properties:
      dateFrom:
        type: "string"
        example: "2018-07-30"
        description: "対象期間From\n半角文字\nリクエストしたときと同じ内容\n対象期間（From）をYYYY-MM-DD形式で設定\n"
        minLength: 10
        maxLength: 10
      dateTo:
        type: "string"
        example: "2018-08-10"
        description: "対象期間To\n半角文字\nリクエストしたときと同じ内容\n対象期間（To）をYYYY-MM-DD形式で設定\n"
        minLength: 10
        maxLength: 10
      requestNextItemKey:
        type: "string"
        example: "1234567890"
        description: "リクエスト時次明細キー\n半角数字\nリクエストしたときと同じ内容\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 24
      requestTransferStatuses:
        type: "array"
        description: "振込一括照会対象ステータス\n該当する情報が無い場合は項目自体を設定しません\n"
        items:
          $ref: "#/definitions/RequestTransferStatus"
      requestTransferClass:
        type: "string"
        example: "null"
        description: "照会対象取得区分\n半角数字\nリクエストしたときと同じ内容\n1：ALL、2：振込申請のみ、3：振込受付情報のみ\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 1
      requestTransferTerm:
        type: "string"
        example: "1"
        description: "振込照会対象期間区分\n半角数字\nリクエストしたときと同じ内容\n1：振込申請受付日　2：振込指定日\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 1
      hasNext:
        type: "boolean"
        example: true
        description: "次明細フラグ\n・true=次明細あり\n・false=次明細なし\n"
      nextItemKey:
        type: "string"
        example: "1234567890"
        description: "次明細キー\n半角数字\n次明細フラグがfalseの場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 24
    title: "TransferQueryBulkResponse"
  TransferRequest:
    type: "object"
    required:
      - "accountId"
      - "transferDesignatedDate"
      - "transfers"
    properties:
      accountId:
        type: "string"
        example: "301011234567"
        description: "口座ID\n半角英数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      remitterName:
        type: "string"
        example: "ｱｵｿﾞﾗ ﾃｽﾄ"
        description: "振込依頼人名\n半角文字\n指定しない場合は口座名義がデフォルト値となります\n振込許容文字を指定可\nただし、一部の非許容文字は、許容文字に変換を行います\n"
        minLength: 1
        maxLength: 48
      transferDesignatedDate:
        type: "string"
        example: "2018-07-30"
        description: "振込指定日\n半角文字\nYYYY-MM-DD形式\n振込対象の指定日\nただし、振込指定日が非営業日で、非営業日に実施できない振込（他行宛振込み）が振込情報に1件以上存在する場合、以下のとおりとなります\n・「振込指定日休日コード」が1または省略の場合、振込指定日の翌営業日を振込対象の指定日となります\n・「振込指定日休日コード」が2の場合、振込指定日の前営業日を振込対象の指定日となります\n・「振込指定日休日コード」が3の場合、エラーとなり「400 Bad Request」を返却します\n"
        minLength: 10
        maxLength: 10
      transferDateHolidayCode:
        type: "string"
        example: "1"
        description: "振込指定日休日コード\n半角数字\n1：翌営業日、2：前営業日、3：エラー返却\n省略可（省略した場合は1とみなします）\n"
        minLength: 1
        maxLength: 1
      totalCount:
        type: "string"
        example: "5"
        description: "合計件数\n半角数字\n1以上99件まで指定可能（0はエラー）\n1件のみの場合は省略可（項目自体の設定が不要です）\n"
        minLength: 1
        maxLength: 6
      totalAmount:
        type: "string"
        example: "1234500"
        description: "合計金額\n半角数字\n1以上999,999,999,999円以下　数値のみで0、カンマ、マイナス不可\n1件のみの場合は省略可（項目自体の設定が不要です）\n"
        minLength: 1
        maxLength: 20
      applyComment:
        type: "string"
        example: ""
        description: "振込申請メモ（申請コメント）\n全半角文字\n項目自体の設定が不要\n値を設定しても銀行で読み捨て\n"
        minLength: 1
        maxLength: 20
      transfers:
        type: "array"
        description: "振込情報\n振込情報のリスト\n"
        items:
          $ref: "#/definitions/Transfer"
    title: "TransferRequest"
    example:
      accountId: "301011234567"
      remitterName: "ｱｵｿﾞﾗ ﾃｽﾄ"
      transferDesignatedDate: "2018-07-30"
      transferDateHolidayCode: "1"
      totalCount: "3"
      totalAmount: "3000"
      transfers:
        - itemId: 1
          transferAmount: "1000"
          beneficiaryBankCode: "0398"
          beneficiaryBankName: "ｱｵｿﾞﾗ"
          beneficiaryBranchCode: "111"
          beneficiaryBranchName: "ﾎﾝﾃﾝ"
          accountTypeCode: "1"
          accountNumber: "1234567"
          beneficiaryName: "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ"
        - itemId: 2
          transferAmount: "1500"
          beneficiaryBankCode: "0310"
          beneficiaryBankName: "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ"
          beneficiaryBranchCode: "301"
          beneficiaryBranchName: "ｳﾐ"
          accountTypeCode: "1"
          accountNumber: "2345678"
          beneficiaryName: "ｱｵｿﾞﾗ ﾃｽﾄ"
        - itemId: 3
          transferAmount: "500"
          beneficiaryBankCode: "0310"
          beneficiaryBankName: "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ"
          beneficiaryBranchCode: "101"
          beneficiaryBranchName: "ﾎｳｼﾞﾝ"
          accountTypeCode: "1"
          accountNumber: "3456789"
          beneficiaryName: "ｷｯｻｱｵｿﾞﾗ(ｶ"
  TransferRequestResponse:
    type: "object"
    required:
      - "accountId"
      - "applyNo"
      - "resultCode"
    properties:
      accountId:
        type: "string"
        example: "301011234567"
        description: "口座ID\n半角数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      resultCode:
        type: "string"
        example: "1"
        description: "結果コード\n半角数字\n1:完了　2：未完了\n"
        minLength: 1
        maxLength: 1
      applyNo:
        type: "string"
        example: "2018072902345678"
        description: "受付番号（振込申請番号）\n半角数字\nすべての振込・総合振込で採番される、照会の基本単位となる番号\n"
        minLength: 16
        maxLength: 16
      applyEndDatetime:
        type: "string"
        example: "2018-07-29T10:00:00+09:00"
        description: "振込依頼完了日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\n結果コードが、1:完了のときのみセット\nそれ以外は項目自体を設定しません\n"
        minLength: 25
        maxLength: 25
    title: "TransferRequestResponse"
    example:
      accountId: "301011234567"
      applyEndDatetime: "2018-07-29T10:00:00+09:00"
      applyNo: "2018072902345678"
      resultCode: "1"
  TransferRequestResultResponse:
    type: "object"
    required:
      - "accountId"
      - "applyNo"
      - "resultCode"
    properties:
      accountId:
        type: "string"
        example: "301011234567"
        description: "口座ID\n半角数字\n口座を識別するID\n"
        minLength: 12
        maxLength: 29
      resultCode:
        type: "string"
        example: "1"
        description: "結果コード\n半角数字\n1:完了　2：未完了　8：期限切\n"
        minLength: 1
        maxLength: 1
      applyNo:
        type: "string"
        example: "2018072902345678"
        description: "受付番号（振込申請番号）\n半角数字\nすべての振込・総合振込で採番される、照会の基本単位となる番号\n"
        minLength: 16
        maxLength: 16
      applyEndDatetime:
        type: "string"
        example: "2018-07-29T10:00:00+09:00"
        description: "振込依頼完了日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\n結果コードが、1:完了のときのみセット\n振込申請番号の最も直近の依頼の完了日時を返却\nそれ以外は項目自体を設定しません\n"
        minLength: 25
        maxLength: 25
    title: "TransferRequestResultResponse"
    example:
      accountId: "301011234567"
      applyEndDatetime: "2018-07-29T10:00:00+09:00"
      applyNo: "2018072902345678"
      resultCode: "1"
  TransferResponse:
    type: "object"
    properties:
      accountId:
        type: "string"
        example: "301011234567"
        description: "口座ID\n半角数字\n口座を識別するID\n引き落とし元となる口座情報\n"
        minLength: 12
        maxLength: 29
      remitterName:
        type: "string"
        example: "ｱｵｿﾞﾗ ﾃｽﾄ"
        description: "振込依頼人名\n半角文字\n"
        minLength: 1
        maxLength: 48
      transferDesignatedDate:
        type: "string"
        example: "2018-07-30"
        description: "振込指定日\n半角文字\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      transferInfos:
        type: "array"
        description: "振込情報\n振込情報のリスト\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/TransferInfo"
    title: "TransferResponse"
  TransferStatusResponse:
    type: "object"
    required:
      - "acceptanceKeyClass"
      - "baseDate"
      - "baseTime"
      - "count"
    properties:
      acceptanceKeyClass:
        type: "string"
        example: "1"
        description: "照会対象キー区分\n半角数字\nリクエストしたときと同じ内容\n照会対象のキー\n1：振込申請照会対象指定、2：振込一括照会対象指定\n"
        minLength: 1
        maxLength: 1
      baseDate:
        type: "string"
        example: "2018-08-10"
        description: "基準日\n半角文字\n振込照会明細情報を照会した基準日を示します\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      baseTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "基準時刻\n半角文字\n振込照会明細情報を照会した基準時刻を示します\nHH:MM:SS+09:00形式\n"
        minLength: 14
        maxLength: 14
      count:
        type: "string"
        example: "500"
        description: "明細取得件数\n半角数字\n振込明細の件数\n"
        minLength: 1
        maxLength: 7
      transferQueryBulkResponses:
        type: "array"
        description: "振込一括照会対象指定レスポンス\n該当する情報が無い場合は項目自体を設定しません\n"
        items:
          $ref: "#/definitions/TransferQueryBulkResponse"
      transferDetails:
        type: "array"
        description: "振込照会明細情報\n振込照会明細情報のリスト\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/TransferDetail"
    title: "TransferStatusResponse"
  UnableDetailInfo:
    type: "object"
    properties:
      transferDetailStatus:
        type: "string"
        example: "1"
        description: "振込詳細ステータス\n半角数字\n1：手続済、2：手続不成立\n手続中より前は該当する情報無しとみなし項目自体を設定しません\n"
        minLength: 1
        maxLength: 1
      refundStatus:
        type: "string"
        example: "1"
        description: "組戻ステータス\n半角数字\n1：組戻手続中、2：組戻済、3：組戻不成立\n組み戻しなし、および該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 1
      isRepayment:
        type: "boolean"
        example: true
        description: "資金返却フラグ\ntrue=あり\n無し、および該当する情報が無い場合は項目自体を設定しません\n"
      repaymentDate:
        type: "string"
        example: "2018-07-30"
        description: "資金返却日\n半角文字\nYYYY-MM-DD形式\n総合振込のみ表示\n該当する情報が無い場合は項目自体を設定しません\n"
        minLength: 10
        maxLength: 10
    title: "UnableDetailInfo"
  VAccount:
    type: "object"
    required:
      - "raAccountNumber"
      - "raBranchCode"
      - "raBranchName"
      - "raHolderName"
      - "raId"
      - "vaAccountNumber"
      - "vaBranchCode"
      - "vaBranchName"
      - "vaBranchNameKana"
      - "vaHolderNameKana"
      - "vaId"
      - "vaIssueDateTime"
      - "vaStatusChangePossibleCode"
      - "vaStatusCode"
      - "vaStatusName"
      - "vaTypeCode"
      - "vaTypeName"
    properties:
      vaId:
        type: "string"
        example: "5021099622"
        description: "振込入金口座ID\n半角数字\n振込入金口座を識別するID\n"
        minLength: 10
        maxLength: 10
      vaBranchCode:
        type: "string"
        example: "502"
        description: "支店コード\n半角数字\n"
        minLength: 3
        maxLength: 3
      vaBranchName:
        type: "string"
        example: "あじさい支店"
        description: "支店名\n全角文字\n"
        minLength: 1
        maxLength: 30
      vaBranchNameKana:
        type: "string"
        example: "ｱｼﾞｻｲ"
        description: "支店名カナ\n半角文字\n"
        minLength: 1
        maxLength: 15
      vaAccountNumber:
        type: "string"
        example: "1099622"
        description: "口座番号\n半角数字\n"
        minLength: 7
        maxLength: 7
      vaHolderNameKana:
        type: "string"
        example: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
        description: "口座名義カナ\n半角文字\n"
        minLength: 1
        maxLength: 40
      vaTypeCode:
        type: "string"
        example: "1"
        description: "振込入金口座　種類コード\n半角数字\n・1=期限型\n・2=継続型\n"
        minLength: 1
        maxLength: 1
      vaTypeName:
        type: "string"
        example: "期限型"
        description: "振込入金口座　種類名\n全角文字\n振込入金口座　種類コードの名称\n"
        minLength: 1
        maxLength: 10
      vaStatusCode:
        type: "string"
        example: "2"
        description: "振込入金口座　状態コード\n半角数字\n・1=利用可能\n・2=停止中\n・3=削除済\n"
        minLength: 1
        maxLength: 1
      vaStatusName:
        type: "string"
        example: "停止中"
        description: "振込入金口座　状態名\n全角文字\n振込入金口座　状態コードの名称\n"
        minLength: 1
        maxLength: 4
      vaStatusChangePossibleCode:
        type: "string"
        example: "2"
        description: "振込入金口座　状態変更可能コード\n半角数字\n現在の口座状態から変更可能な口座状態を表したコード値\n・1=停止・削除\n・2=再開・削除\n・3=該当なし\n"
        minLength: 1
        maxLength: 1
      vaIssueDateTime:
        type: "string"
        example: "2018-08-01T10:00:00+09:00"
        description: "発行日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\n"
        minLength: 25
        maxLength: 25
      vaChangeStatusDateTime:
        type: "string"
        example: "2018-08-10T15:00:00+09:00"
        description: "状態変更日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\n状態が変更されている場合のみ設定されます\n該当しない場合は項目自体を設定しません\n"
        minLength: 25
        maxLength: 25
      vaCloseDateTime:
        type: "string"
        example: "2018-08-29T16:00:00+09:00"
        description: "削除日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\n状態コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・3=削除済\n"
        minLength: 25
        maxLength: 25
      expireDateTime:
        type: "string"
        example: "2018-08-31T12:59:59+09:00"
        description: "有効期限日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\n種類コードが以下の場合のみ設定されます\n該当しない場合は項目自体を設定しません\n・2=期限型\n"
        minLength: 25
        maxLength: 25
      latestDepositDate:
        type: "string"
        example: "2018-08-02"
        description: "最終入金日\n半角文字\nYYYY-MM-DD形式\n入金がない場合は項目自体を設定しません\n"
        minLength: 10
        maxLength: 10
      latestDepositAmount:
        type: "string"
        example: "50000"
        description: "最終入金金額\n半角数字\n入金がない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 20
      latestDepositCount:
        type: "string"
        example: "3"
        description: "最終入金日入金回数\n半角数字\n入金がない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 10
      raId:
        type: "string"
        example: "201011234567"
        description: "入金口座ID\n半角数字\n入金先の口座を識別するID\n"
        minLength: 12
        maxLength: 29
      raBranchCode:
        type: "string"
        example: "201"
        description: "入金口座　支店コード\n半角数字\n"
        minLength: 3
        maxLength: 3
      raBranchName:
        type: "string"
        example: "ビジネス"
        description: "入金口座　支店名\n全角文字\n"
        minLength: 1
        maxLength: 30
      raAccountNumber:
        type: "string"
        example: "1234567"
        description: "入金口座　口座番号\n半角数字\n"
        minLength: 7
        maxLength: 7
      raHolderName:
        type: "string"
        example: "ＧＭＯ　あおぞら　太郎"
        description: "入金口座名義\n全角文字\n"
        minLength: 1
        maxLength: 48
    title: "VAccount"
    example:
      vaBranchCode: "502"
      expireDateTime: "2018-08-31T12:59:59+09:00"
      vaChangeStatusDateTime: "2018-08-10T15:00:00+09:00"
      raBranchName: "ビジネス"
      vaStatusName: "停止中"
      raBranchCode: "201"
      raHolderName: "ＧＭＯ　あおぞら　太郎"
      vaCloseDateTime: "2018-08-29T16:00:00+09:00"
      vaAccountNumber: "1099622"
      latestDepositCount: "3"
      vaId: "5021099622"
      vaIssueDateTime: "2018-08-01T10:00:00+09:00"
      vaStatusCode: "2"
      vaStatusChangePossibleCode: "2"
      vaBranchName: "あじさい支店"
      vaBranchNameKana: "ｱｼﾞｻｲ"
      vaTypeCode: "1"
      latestDepositDate: "2018-08-02"
      latestDepositAmount: "50000"
      vaHolderNameKana: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
      vaTypeName: "期限型"
      raId: "201011234567"
      raAccountNumber: "1234567"
  Va:
    type: "object"
    required:
      - "vaAccountNumber"
      - "vaBranchCode"
      - "vaBranchNameKana"
      - "vaId"
    properties:
      vaId:
        type: "string"
        example: "5021099622"
        description: "振込入金口座ID\n半角数字\n振込入金口座を識別するID\n"
        minLength: 10
        maxLength: 10
      vaBranchCode:
        type: "string"
        example: "502"
        description: "支店コード\n半角数字\n"
        minLength: 3
        maxLength: 3
      vaBranchNameKana:
        type: "string"
        example: "ｱｼﾞｻｲ"
        description: "支店名カナ\n半角文字\n"
        minLength: 1
        maxLength: 15
      vaAccountNumber:
        type: "string"
        example: "1099622"
        description: "口座番号\n半角数字\n"
        minLength: 7
        maxLength: 7
    title: "Va"
    example:
      vaId: "5021099622"
      vaBranchCode: "502"
      vaBranchNameKana: "ｱｼﾞｻｲ"
      vaAccountNumber: "1099622"
  VaCloseRequest:
    type: "object"
    properties:
      vaContractAuthKey:
        type: "string"
        example: "null"
        description: "振込入金口座API認証情報\n半角英数字\nNULLを設定\n値が設定されている場合は「400 Bad Request」を返却\n"
        minLength: 1
        maxLength: 400
    title: "VaCloseRequest"
    example:
      vaContractAuthKey: "null"
  VaCloseRequestResponse:
    type: "object"
    required:
      - "acceptDate"
    properties:
      acceptDate:
        type: "string"
        example: "2018-08-15"
        description: "解約申込受付日\n解約申込を受け付けた日付を示します\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
    example:
      acceptDate: "2018-08-15"
  VaDepositTransactionsResponse:
    type: "object"
    required:
      - "baseDate"
      - "baseTime"
      - "count"
      - "dateFrom"
      - "dateTo"
      - "hasNext"
      - "raAccountNumber"
      - "raBranchCode"
      - "raBranchNameKana"
      - "raHolderName"
      - "raId"
    properties:
      raId:
        type: "string"
        example: "201011234567"
        description: "入金口座ID\n半角数字\n入金先の口座を識別するID\n"
        minLength: 12
        maxLength: 29
      raBranchCode:
        type: "string"
        example: "201"
        description: "入金口座　支店コード\n半角数字\n"
        minLength: 3
        maxLength: 3
      raBranchNameKana:
        type: "string"
        example: "ﾋﾞｼﾞﾈｽ"
        description: "入金口座　支店名カナ\n半角文字\n"
        minLength: 1
        maxLength: 15
      raAccountNumber:
        type: "string"
        example: "1234567"
        description: "入金口座　口座番号\n半角数字\n"
        minLength: 7
        maxLength: 7
      raHolderName:
        type: "string"
        example: "ＧＭＯ　あおぞら　太郎"
        description: "入金口座　口座名義（漢字）\n全角文字\n"
        minLength: 1
        maxLength: 48
      dateFrom:
        type: "string"
        example: "2018-08-01"
        description: "対象期間From\n半角文字\nYYYY-MM-DD形式\nリクエストに対象期間From、Toが設定されていない場合は当日日付が設定されます\n"
        minLength: 10
        maxLength: 10
      dateTo:
        type: "string"
        example: "2018-08-02"
        description: "対象期間To\n半角文字\nYYYY-MM-DD形式\nリクエストに対象期間From、Toが設定されていない場合は当日日付が設定されます\n"
        minLength: 10
        maxLength: 10
      baseDate:
        type: "string"
        example: "2018-08-10"
        description: "基準日\n半角文字\n入金明細を照会した基準日を示します\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      baseTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "基準時刻\n半角文字\n入金明細を照会した基準時刻を示します\nHH:MM:SS+09:00形式\n"
        minLength: 14
        maxLength: 14
      hasNext:
        type: "boolean"
        example: true
        description: "次明細フラグ\n・true=次明細あり\n・false=次明細なし\n"
      nextItemKey:
        type: "string"
        example: "20181012090520112541"
        description: "次明細キー\n半角数字\n次明細フラグがfalseの場合は、項目自体を設定しません\n"
        minLength: 1
        maxLength: 24
      count:
        type: "string"
        example: "500"
        description: "明細取得件数\n半角数字\n"
        minLength: 1
        maxLength: 7
      vaTransactions:
        type: "array"
        description: "振込入金口座入金明細情報リスト\n該当する情報が無い場合は、空のリストを返却します\n"
        items:
          $ref: "#/definitions/VaTransaction"
    title: "VaDepositTransactionsResponse"
    example:
      baseDate: "2018-08-10"
      vaTransactions:
        - depositAmount: "10000"
          remitterNameKana: "ﾃｽﾄ ﾀﾛｳ"
          vaBranchCode: "502"
          paymentBankName: "ｱｵｿﾞﾗｷﾞﾝｺｳ"
          partnerName: "GMOあおぞらネット銀行"
          valueDate: "2018-08-02"
          paymentBranchName: "ﾎﾝﾃﾝ"
          transactionDate: "2018-08-02"
          vaAccountNumber: "1099622"
          itemKey: "20181012090520112541"
          vaId: "5021099622"
          vaAccountNameKana: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
          vaBranchNameKana: "ｱｼﾞｻｲ"
          remarks: "振込 ｲ-ﾃﾞｲ-ｱｲ テスト　タロウ あじさい支店 1036971"
        - depositAmount: "10000"
          remitterNameKana: "ﾃｽﾄ ﾀﾛｳ"
          vaBranchCode: "502"
          paymentBankName: "ｱｵｿﾞﾗｷﾞﾝｺｳ"
          partnerName: "GMOあおぞらネット銀行"
          valueDate: "2018-08-02"
          paymentBranchName: "ﾎﾝﾃﾝ"
          transactionDate: "2018-08-02"
          vaAccountNumber: "1099622"
          itemKey: "20181012090520112541"
          vaId: "5021099622"
          vaAccountNameKana: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
          vaBranchNameKana: "ｱｼﾞｻｲ"
          remarks: "振込 ｲ-ﾃﾞｲ-ｱｲ テスト　タロウ あじさい支店 1036971"
      count: "500"
      raBranchCode: "201"
      hasNext: true
      raHolderName: "ＧＭＯ　あおぞら　太郎"
      dateFrom: "2018-08-01"
      nextItemKey: "20181012090520112541"
      raBranchNameKana: "ﾋﾞｼﾞﾈｽ"
      dateTo: "2018-08-02"
      baseTime: "10:00:00+09:00"
      raId: "201011234567"
      raAccountNumber: "1234567"
  VaId:
    type: "object"
    required:
      - "vaId"
    properties:
      vaId:
        type: "string"
        example: "5021099622"
        description: "振込入金口座ID\n半角数字\n振込入金口座を識別するID\n"
        minLength: 10
        maxLength: 10
    title: "VaId"
    example:
      vaId: "5021099622"
  VaIssueRequest:
    type: "object"
    required:
      - "issueRequestCount"
      - "vaTypeCode"
    properties:
      vaTypeCode:
        type: "string"
        example: "1"
        description: "振込入金口座　種類コード\n半角数字\n・1=期限型\n・2=継続型\n"
        minLength: 1
        maxLength: 1
      issueRequestCount:
        type: "string"
        example: "1000"
        description: "発行口座数\n半角数字\n1回のリクエストで1,000口座まで発行可能\n"
        minLength: 1
        maxLength: 4
      raId:
        type: "string"
        example: "201011234567"
        description: "入金口座ID\n半角数字\n科目コードが以下の口座IDのみ受け付けます\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n必須\n"
        minLength: 12
        maxLength: 29
      vaContractAuthKey:
        type: "string"
        example: "null"
        description: "振込入金口座API認証情報\n半角英数字\nNULLを設定\n値が設定されている場合は「400 Bad Request」を返却\n"
        minLength: 1
        maxLength: 400
      vaHolderNameKana:
        type: "string"
        example: "ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
        description: "追加名義カナ\n半角文字\n振込入金口座名義（※）に任意の文字を追加する場合、指定\n※ご登録されている「姓カナ + 半角スペース1文字 + 名カナ」\n（屋号カナは含みません）\n\n追加名義カナで指定できる文字数 = 40 - 振込入金口座名義の文字数\n合計が40文字を超える場合は追加名義カナの後部から文字が削られます\n\n・使用可能な記号は「/」、「(」、「)」、「.」、「,」、「-」\n・一部の非許容文字は、許容文字に変換を行います\n・濁点、半濁点は１文字として数えます\n・追加名義カナを前につける場合、半角スペースは追加名義カナの右側に1文字のみ許容します\n・追加名義カナを前につける場合、追加名義カナの左側に半角スペースは許容しません\n・追加名義カナを前につける場合、追加名義カナの中に半角の連続スペースは許容しません"
        minLength: 1
        maxLength: 40
      vaHolderNamePos:
        type: "string"
        example: "1"
        description: "追加名義位置\n半角数字\n追加名義カナを口座名義の前につけるか後ろにつけるかの指定\n・1=通常（後ろにつける）\n・2=前につける\n指定が無い場合は後ろにつけます\n"
        minLength: 1
        maxLength: 1
    title: "VaIssueRequest"
    example:
      vaContractAuthKey: "null"
      issueRequestCount: "1000"
      vaTypeCode: "1"
      vaHolderNamePos: "1"
      vaHolderNameKana: "ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
      raId: "201011234567"
  VaIssueResponse:
    type: "object"
    required:
      - "vaHolderNameKana"
      - "vaList"
      - "vaTypeCode"
      - "vaTypeName"
    properties:
      vaTypeCode:
        type: "string"
        example: "1"
        description: "振込入金口座　種類コード\n半角数字\n・1=期限型\n・2=継続型\n"
        minLength: 1
        maxLength: 1
      vaTypeName:
        type: "string"
        example: "期限型"
        description: "振込入金口座　種類名\n全角文字\n振込入金口座　種類コードの名称\n"
        minLength: 1
        maxLength: 10
      expireDateTime:
        type: "string"
        example: "2018-08-31T12:59:59+09:00"
        description: "有効期限日時\n半角文字\nYYYY-MM-DDTHH:MM:SS+09:00形式\n振込入金口座種別コードが「2=継続型」の場合は、項目自体を設定しません\n"
        minLength: 25
        maxLength: 25
      vaHolderNameKana:
        type: "string"
        example: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
        description: "振込入金口座名義カナ\n半角文字\n"
        minLength: 1
        maxLength: 40
      vaList:
        type: "array"
        description: "振込入金口座リスト"
        items:
          $ref: "#/definitions/Va"
    title: "VaIssueResponse"
    example:
      expireDateTime: "2018-08-31T12:59:59+09:00"
      vaTypeCode: "1"
      vaHolderNameKana: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
      vaTypeName: "期限型"
      vaList:
        - vaId: "5021099622"
          vaBranchCode: "502"
          vaBranchNameKana: "ｱｼﾞｻｲ"
          vaAccountNumber: "1099622"
        - vaId: "5021099622"
          vaBranchCode: "502"
          vaBranchNameKana: "ｱｼﾞｻｲ"
          vaAccountNumber: "1099622"
  VaListRequest:
    type: "object"
    properties:
      vaContractAuthKey:
        type: "string"
        example: "null"
        description: "振込入金口座API認証情報\n半角英数字\nNULLを設定\n値が設定されている場合は「400 Bad Request」を返却\n"
        minLength: 1
        maxLength: 400
      vaTypeCode:
        type: "string"
        example: "1"
        description: "振込入金口座　種類コード\n半角数字\n・1=期限型\n・2=継続型\n"
        minLength: 1
        maxLength: 1
      depositAmountExistCode:
        type: "string"
        example: "1"
        description: "入金有無コード\n半角数字\n・1=入金あり\n・2=入金なし\n"
        minLength: 1
        maxLength: 1
      vaHolderNameKana:
        type: "string"
        example: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
        description: "振込入金口座名義カナ\n半角文字\n振込許容文字を指定可\nただし、一部の非許容文字は、許容文字に変換を行います\n"
        minLength: 1
        maxLength: 40
      vaStatusCodeList:
        type: "array"
        description: "振込入金口座IDリスト\n照会したい振込入金口座状態コードのリスト\n上限3件まで設定可能\n"
        items:
          $ref: "#/definitions/VaStatusCode"
      latestDepositDateFrom:
        type: "string"
        example: "2018-08-10"
        description: "最終入金日From\n半角文字\nYYYY-MM-DD形式\n入金有無コードが未設定もしくは、「1=入金あり」が設定されている場合は指定可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n"
        minLength: 10
        maxLength: 10
      latestDepositDateTo:
        type: "string"
        example: "2018-08-10"
        description: "最終入金日To\n半角文字\nYYYY-MM-DD形式\n入金有無コードが未設定もしくは、「1=入金あり」が設定されている場合は指定可\nそれ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n最終入金日Fromと最終入金日Toを指定する場合は、最終入金日From≦最終入金日Toとし、それ以外は「400 Bad Request」を返却\n"
        minLength: 10
        maxLength: 10
      vaIssueDateFrom:
        type: "string"
        example: "2018-07-31"
        description: "振込入金口座発行日From\n半角文字\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      vaIssueDateTo:
        type: "string"
        example: "2018-08-01"
        description: "振込入金口座発行日To\n半角文字\nYYYY-MM-DD形式\n振込入金口座発行Fromと振込入金口座発行Toを指定する場合は、振込入金口座発行From≦振込入金口座発行Toとし、それ以外は「400 Bad Request」を返却\n"
        minLength: 10
        maxLength: 10
      expireDateFrom:
        type: "string"
        example: "2018-08-31"
        description: "有効期限From\n半角文字\nYYYY-MM-DD形式\n振込入金口座 種類コードが未設定もしくは、「1＝期限型」が設定されている場合は指定可　それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n"
        minLength: 10
        maxLength: 10
      expireDateTo:
        type: "string"
        example: "2018-09-01"
        description: "有効期限To\n半角文字\nYYYY-MM-DD形式\n振込入金口座 種類コードが未設定もしくは、「1＝期限型」が設定されている場合は指定可　それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）\n"
        minLength: 10
        maxLength: 10
      raId:
        type: "string"
        example: "201011234567"
        description: "入金口座ID\n半角数字\n口座一覧照会APIで取得できる口座IDを設定\n科目コードが以下の口座IDのみ受け付けます\n・01=普通預金（有利息）\n・02=普通預金（決済用）\n"
        minLength: 12
        maxLength: 29
      nextItemKey:
        type: "string"
        example: "AABA0515651"
        description: "次一覧キー\n半角英数字\n"
        minLength: 1
        maxLength: 24
      sortItemCode:
        type: "string"
        example: "2"
        description: "ソート項目コード\n半角数字\n・1=有効期限日時\n・2=最終入金日\n・3=発行日時\n・4=最終入金金額\n有効期限日時、最終入金日、最終入金金額など、レスポンスで返却されない場合がある項目をソート項目に指定した場合、ソートは効きません\n"
        minLength: 1
        maxLength: 1
      sortOrderCode:
        type: "string"
        example: "2"
        description: "ソート順コード\n半角数字\nソート項目コードのソート順を指定するコード値\n・1=昇順\n・2=降順\n"
        minLength: 1
        maxLength: 1
      vaIdList:
        type: "array"
        description: "振込入金口座IDリスト\n照会したい振込入金口座IDのリスト\n上限500件まで設定可能\n"
        items:
          $ref: "#/definitions/VaId"
    title: "VaListRequest"
    example:
      depositAmountExistCode: "1"
      expireDateFrom: "2018-08-31"
      expireDateTo: "2018-09-01"
      vaStatusCodeList:
        - vaStatusCode: "1"
        - vaStatusCode: "1"
      sortOrderCode: "2"
      latestDepositDateTo: "2018-08-10"
      vaIssueDateTo: "2018-08-01"
      nextItemKey: "AABA0515651"
      sortItemCode: "2"
      vaContractAuthKey: "null"
      vaIssueDateFrom: "2018-07-31"
      vaTypeCode: "1"
      vaIdList:
        - vaId: "5021099622"
        - vaId: "5021099622"
      latestDepositDateFrom: "2018-08-10"
      vaHolderNameKana: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
      raId: "201011234567"
  VaListResponse:
    type: "object"
    required:
      - "baseDate"
      - "baseTime"
      - "count"
      - "hasNext"
    properties:
      baseDate:
        type: "string"
        example: "2018-08-10"
        description: "基準日\n半角文字\n一覧照会の基準日を示します\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      baseTime:
        type: "string"
        example: "10:00:00+09:00"
        description: "基準時刻\n半角文字\n一覧照会の基準時刻を示します\nHH:MM:SS+09:00形式\n"
        minLength: 14
        maxLength: 14
      hasNext:
        type: "boolean"
        example: true
        description: "次一覧フラグ\n・true=次一覧あり\n・false=次一覧なし\n"
      nextItemKey:
        type: "string"
        example: "AABA0515651"
        description: "次一覧キー\n半角英数字\n次一覧フラグがfalseの場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 24
      count:
        type: "string"
        example: "1"
        description: "口座取得件数\n半角数字\n"
        minLength: 1
        maxLength: 7
      vAccounts:
        type: "array"
        description: "振込入金口座情報\n振込入金口座情報のリスト\n該当する情報が無い場合は空のリストを返却\n"
        items:
          $ref: "#/definitions/VAccount"
    title: "VaListResponse"
    example:
      baseDate: "2018-08-10"
      count: "1"
      hasNext: true
      nextItemKey: "AABA0515651"
      baseTime: "10:00:00+09:00"
      vAccounts:
        - vaBranchCode: "502"
          expireDateTime: "2018-08-31T12:59:59+09:00"
          vaChangeStatusDateTime: "2018-08-10T15:00:00+09:00"
          raBranchName: "ビジネス"
          vaStatusName: "停止中"
          raBranchCode: "201"
          raHolderName: "ＧＭＯ　あおぞら　太郎"
          vaCloseDateTime: "2018-08-29T16:00:00+09:00"
          vaAccountNumber: "1099622"
          latestDepositCount: "3"
          vaId: "5021099622"
          vaIssueDateTime: "2018-08-01T10:00:00+09:00"
          vaStatusCode: "2"
          vaStatusChangePossibleCode: "2"
          vaBranchName: "あじさい支店"
          vaBranchNameKana: "ｱｼﾞｻｲ"
          vaTypeCode: "1"
          latestDepositDate: "2018-08-02"
          latestDepositAmount: "50000"
          vaHolderNameKana: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
          vaTypeName: "期限型"
          raId: "201011234567"
          raAccountNumber: "1234567"
        - vaBranchCode: "502"
          expireDateTime: "2018-08-31T12:59:59+09:00"
          vaChangeStatusDateTime: "2018-08-10T15:00:00+09:00"
          raBranchName: "ビジネス"
          vaStatusName: "停止中"
          raBranchCode: "201"
          raHolderName: "ＧＭＯ　あおぞら　太郎"
          vaCloseDateTime: "2018-08-29T16:00:00+09:00"
          vaAccountNumber: "1099622"
          latestDepositCount: "3"
          vaId: "5021099622"
          vaIssueDateTime: "2018-08-01T10:00:00+09:00"
          vaStatusCode: "2"
          vaStatusChangePossibleCode: "2"
          vaBranchName: "あじさい支店"
          vaBranchNameKana: "ｱｼﾞｻｲ"
          vaTypeCode: "1"
          latestDepositDate: "2018-08-02"
          latestDepositAmount: "50000"
          vaHolderNameKana: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
          vaTypeName: "期限型"
          raId: "201011234567"
          raAccountNumber: "1234567"
  VaStatusChangeRequest:
    type: "object"
    required:
      - "vaIdList"
      - "vaStatusChangeCode"
    properties:
      vaContractAuthKey:
        type: "string"
        example: "null"
        description: "振込入金口座API認証情報\n半角英数字\nNULLを設定\n値が設定されている場合は「400 Bad Request」を返却\n"
        minLength: 1
        maxLength: 400
      vaStatusChangeCode:
        type: "string"
        example: "1"
        description: "振込入金口座状態変更依頼コード\n半角数字\n以下の変更したコード値を設定\n・1=停止\n・2=再開\n・3=削除\n"
        minLength: 1
        maxLength: 1
      vaIdList:
        type: "array"
        description: "振込入金口座IDリスト\n上限は100件\n"
        items:
          $ref: "#/definitions/VaId"
    title: "VaStatusChangeRequest"
    example:
      vaContractAuthKey: "null"
      vaStatusChangeCode: "1"
      vaIdList:
        - vaId: "5021099622"
        - vaId: "5021099622"
  VaStatusChangeResponse:
    type: "object"
    required:
      - "vAccounts"
    properties:
      vAccounts:
        type: "array"
        description: "振込入金口座情報\n振込入金口座情報のリスト"
        items:
          $ref: "#/definitions/VAccount"
    title: "VaStatusChangeResponse"
  VaStatusCode:
    type: "object"
    properties:
      vaStatusCode:
        type: "string"
        example: "1"
        description: "振込入金口座　状態コード\n半角数字\n・1=利用可能\n・2=停止中\n・3=削除済\n"
        minLength: 1
        maxLength: 1
    title: "VaStatusCode"
    example:
      vaStatusCode: "1"
  VaTransaction:
    type: "object"
    required:
      - "depositAmount"
      - "itemKey"
      - "partnerName"
      - "paymentBankName"
      - "paymentBranchName"
      - "remitterNameKana"
      - "transactionDate"
      - "vaAccountNameKana"
      - "vaAccountNumber"
      - "vaBranchCode"
      - "vaBranchNameKana"
      - "vaId"
      - "valueDate"
    properties:
      vaId:
        type: "string"
        example: "5021099622"
        description: "振込入金口座ID\n半角数字\n振込入金口座を識別するID\n"
        minLength: 10
        maxLength: 10
      transactionDate:
        type: "string"
        example: "2018-08-02"
        description: "取引日\n半角文字\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      valueDate:
        type: "string"
        example: "2018-08-02"
        description: "起算日\n半角文字\nYYYY-MM-DD形式\n"
        minLength: 10
        maxLength: 10
      vaBranchCode:
        type: "string"
        example: "502"
        description: "支店コード\n半角数字\n"
        minLength: 3
        maxLength: 3
      vaBranchNameKana:
        type: "string"
        example: "ｱｼﾞｻｲ"
        description: "支店名カナ\n半角文字\n"
        minLength: 1
        maxLength: 15
      vaAccountNumber:
        type: "string"
        example: "1099622"
        description: "口座番号\n半角数字\n"
        minLength: 7
        maxLength: 7
      vaAccountNameKana:
        type: "string"
        example: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
        description: "口座名義カナ\n半角文字\n"
        minLength: 1
        maxLength: 40
      depositAmount:
        type: "string"
        example: "10000"
        description: "入金金額\n半角数字\n"
        minLength: 1
        maxLength: 20
      remitterNameKana:
        type: "string"
        example: "ﾃｽﾄ ﾀﾛｳ"
        description: "振込依頼人名カナ\n半角文字\n"
        minLength: 1
        maxLength: 48
      paymentBankName:
        type: "string"
        example: "ｱｵｿﾞﾗｷﾞﾝｺｳ"
        description: "仕向金融機関名カナ\n半角文字\n"
        minLength: 1
        maxLength: 30
      paymentBranchName:
        type: "string"
        example: "ﾎﾝﾃﾝ"
        description: "仕向支店名カナ\n半角文字\n"
        minLength: 1
        maxLength: 15
      partnerName:
        type: "string"
        example: "GMOあおぞらネット銀行"
        description: "サービス企業名\n全角文字\n振込入金口座契約サービス企業名\n"
        minLength: 1
        maxLength: 10
      remarks:
        type: "string"
        example: "振込 ｲ-ﾃﾞｲ-ｱｲ テスト　タロウ あじさい支店 1036971"
        description: "摘要内容\n全半角文字\n該当データがない場合は項目自体を設定しません\n"
        minLength: 1
        maxLength: 255
      itemKey:
        type: "string"
        example: "20181012090520112541"
        description: "明細キー\n半角数字\n口座ID毎に設定される明細キー（明細データtimestamp（μs））"
        minLength: 1
        maxLength: 24
    title: "VaTransaction"
    example:
      depositAmount: "10000"
      remitterNameKana: "ﾃｽﾄ ﾀﾛｳ"
      vaBranchCode: "502"
      paymentBankName: "ｱｵｿﾞﾗｷﾞﾝｺｳ"
      partnerName: "GMOあおぞらネット銀行"
      valueDate: "2018-08-02"
      paymentBranchName: "ﾎﾝﾃﾝ"
      transactionDate: "2018-08-02"
      vaAccountNumber: "1099622"
      itemKey: "20181012090520112541"
      vaId: "5021099622"
      vaAccountNameKana: "ｱｵｿﾞﾗ ﾀﾛｳﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ"
      vaBranchNameKana: "ｱｼﾞｻｲ"
      remarks: "振込 ｲ-ﾃﾞｲ-ｱｲ テスト　タロウ あじさい支店 1036971"
