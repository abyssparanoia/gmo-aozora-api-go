openapi: 3.0.1
info:
  title: GMO Aozora Net Bank Open API
  description: |
    <p>オープンAPI仕様書（PDF版）は下記リンクをご参照ください</p>
    <div>
      <div style='display:inline-block;'><a style='text-decoration:none; font-weight:bold; color:#00b8d4;' href='https://gmo-aozora.com/business/service/api-specification.html' target='_blank'>オープンAPI仕様書</a></div><div style='display:inline-block; margin-left:2px; left:2px; width:10px; height:10px; border-top:2px solid #00b8d4; border-right:2px solid #00b8d4; transparent;-webkit-transform:rotate(45deg); transform: rotate(45deg);'></div>
    </div>
    <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>共通仕様</h4>
    <div style='width:100%; margin:10px;'>
      <p style='font-weight:bold; color:#616161;'>＜HTTPリクエストヘッダ＞</p>
      <div style='display:table; margin-left:10px; background-color:#29659b;'>
        <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff;'>項目</div>
        <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; color:#fff;'>仕様</div>
      </div>
      <div style='display:table; margin-left:10px;'>
        <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>プロトコル</div>
        <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>HTTP1.1/HTTPS</div>
      </div>
      <div style='display:table; margin-left:10px;'>
        <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>charset</div>
        <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>UTF-8</div>
      </div>
      <div style='display:table; margin-left:10px;'>
        <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>content-type</div>
        <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>application/json</div>
      </div>
      <div style='display:table; margin-left:10px;'>
        <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>domain_name</div>
        <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>
          本番環境：api.gmo-aozora.com</br>
          開発環境：stg-api.gmo-aozora.com
        </div>
      </div>
      <div style='display:table; margin-left:10px;'>
        <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>メインURL</div>
        <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>
          https://{domain_name}/ganb/api/corporation/{version}</br>
          <span style='border-bottom:solid 1px;'>Version:1.x.x</span> の場合</br>
          　https://api.gmo-aozora.com/ganb/api/corporation/<span style='border-bottom:solid 1px;'>v1</span>
        </div>
      </div>
    </div>
    <div style='margin:20px 10px;'>
      <p style='font-weight:bold; color:#616161;'>＜リクエスト共通仕様＞</p>
      <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>
      <p style='padding-left:40px;'>パラメータの値が空の場合、またはパラメータ自体が設定されていない場合、どちらもNULLとして扱います</p>
    </div>
    <div style='margin:20px 10px;'>
      <p style='font-weight:bold; color:#616161;'>＜レスポンス共通仕様＞</p>
      <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>
      <ul>
        <li>レスポンスデータ</li>
          <ul>
            <li style='list-style-type:none;'>レスポンスデータの値が空の場合または、レスポンスデータ自体が設定されない場合は「項目自体を設定しません」と記載</li>
          </ul>
        <li>配列</li>
          <ul>
            <li style='list-style-type:none;'>配列の要素の値が空の場合は「空のリスト」と記載</li>
            <li style='list-style-type:none;'>配列自体が設定されない場合は「項目自体を設定しません」と記載</li>
          </ul>
      </ul>
    </div>
    <div style='margin:20px 10px;'>
      <p style='font-weight:bold; color:#616161;'>＜更新系APIに関する注意事項＞</p>
      <ul>
        <li style='list-style-type:none;'>更新系処理がタイムアウトとなった場合、処理自体は実行されている可能性がありますので、</li>
        <li style='list-style-type:none;'>再実行を行う必要がある場合は必ず照会系の処理で実行状況を確認してから再実行を行ってください</li>
      </ul>
    </div>
  version: 1.1.12
servers:
- url: https://stg-api.gmo-aozora.com/ganb/api/corporation/v1
tags:
- name: account
  description: 口座
- name: transfer
  description: 振込・振替
- name: bulk-transfer
  description: 総合振込
- name: virtual-account
  description: 振込入金口座
paths:
  /accounts:
    get:
      tags:
      - account
      summary: 口座一覧照会
      description: 保有する全ての口座情報一覧を照会します
      operationId: accountsUsingGET
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AccountsResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X GET \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts \
            -H 'accept: application/json;charset=UTF-8' \
            -H 'x-access-token: your access token'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["x-access-token"] = 'your access token'
          request["accept"] = 'application/json;charset=UTF-8'

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPSConnection("api.gmo-aozora.com")

          headers = {
              'x-access-token': "your access token",
              'accept': "application/json;charset=UTF-8"
              }

          conn.request("GET", "/ganb/api/simulator/corporation/v1/accounts", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
              "accept: application/json;charset=UTF-8",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts")
            .get()
            .addHeader("x-access-token", "your access token")
            .addHeader("accept", "application/json;charset=UTF-8")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts',\n\
          \  headers: \n   { accept: 'application/json;charset=UTF-8',\n     'x-access-token':\
          \ 'your access token' } };\n\nrequest(options, function (error, response,\
          \ body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: Go
        source: |
          package main

          import (
            "fmt"
            "net/http"
            "io/ioutil"
          )

          func main() {

            url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts"

            req, _ := http.NewRequest("GET", url, nil)

            req.Header.Add("x-access-token", "your access token")
            req.Header.Add("accept", "application/json;charset=UTF-8")

            res, _ := http.DefaultClient.Do(req)

            defer res.Body.Close()
            body, _ := ioutil.ReadAll(res.Body)

            fmt.Println(res)
            fmt.Println(string(body))

          }
      - lang: Swift
        source: |
          import Foundation

          let headers = [
            "x-access-token": "your access token",
            "accept": "application/json;charset=UTF-8"
          ]

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "GET"
          request.allHTTPHeaderFields = headers

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response,error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
  /accounts/balances:
    get:
      tags:
      - account
      summary: 残高照会
      description: |
        保有する口座の残高情報を照会します
        口座IDを指定した場合、該当する口座の残高情報を照会します
        口座IDを指定しない場合、保有する口座全ての残高情報を照会します
      operationId: balancesUsingGET
      parameters:
      - name: accountId
        in: query
        description: |
          口座ID
          口座を識別するID

          minLength: 12
          maxLength: 29
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: AccountId
          x-optionalDataType: String
        example: "101011234567"
        x-exportParamName: AccountId
        x-optionalDataType: String
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/BalancesResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X GET \
            'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/balances?accountId=301011000192' \
            -H 'accept: application/json;charset=UTF-8' \
            -H 'x-access-token: your access token'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/balances?accountId=301011000192")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["x-access-token"] = 'your access token'
          request["accept"] = 'application/json;charset=UTF-8'

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPSConnection("api.gmo-aozora.com")

          headers = {
              'x-access-token': "your access token",
              'accept': "application/json;charset=UTF-8"
              }

          conn.request("GET", "/ganb/api/simulator/corporation/v1/accounts/balances?accountId=301011000192", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/balances?accountId=301011000192",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
              "accept: application/json;charset=UTF-8",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/balances?accountId=301011000192")
            .get()
            .addHeader("x-access-token", "your access token")
            .addHeader("accept", "application/json;charset=UTF-8")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/balances',\n\
          \  qs: { accountId: '301011000192' },\n  headers: \n   { accept: 'application/json;charset=UTF-8',\n\
          \     'x-access-token': 'your access token' } };\n\nrequest(options, function\
          \ (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: Go
        source: |
          package main

          import (
            "fmt"
            "net/http"
            "io/ioutil"
          )

          func main() {

            url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/balances?accountId=301011000192"

            req, _ := http.NewRequest("GET", url, nil)

            req.Header.Add("x-access-token", "your access token")
            req.Header.Add("accept", "application/json;charset=UTF-8")

            res, _ := http.DefaultClient.Do(req)

            defer res.Body.Close()
            body, _ := ioutil.ReadAll(res.Body)

            fmt.Println(res)
            fmt.Println(string(body))

          }
      - lang: Swift
        source: |
          import Foundation

          let headers = [
            "x-access-token": "your access token",
            "accept": "application/json;charset=UTF-8"
          ]

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/balances?accountId=301011000192")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "GET"
          request.allHTTPHeaderFields = headers

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
  /accounts/transactions:
    get:
      tags:
      - account
      summary: 入出金明細照会
      description: |
        <p>指定した円普通預金口座の入出金明細情報を照会します</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>対象科目</p>
          <p style='padding-left:20px;'>円普通預金口座</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>取得上限件数</p>
          <p style='padding-left:20px;'>500件</p>
          <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>
          <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>ページング</p>
          <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>ソート順</p>
          <p style='padding-left:20px;'>取引の昇順</p>
        </div>
        <div style='width:600px; margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>対象期間</p>
          <div style='display:table; margin-left:20px; background-color:#29659b;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
        </div>
        <div style='margin:10px;'>
          <ul>
            <li style='list-style-type:none;'>&#9312;の場合　当日分の入出金明細を返却</li>
            <li style='list-style-type:none;'>&#9313;の場合　対象期間From　～　当日までの入出金明細を返却</li>
            <li style='list-style-type:none;'>&#9314;の場合　取引初回　～　対象期間Toまでの入出金明細を返却</li>
            <li style='list-style-type:none;'>&#9315;の場合　対象期間From　～　対象期間Toまでの入出金明細を返却</li>
          </ul>
        </div> <div style='margin-bottom:40px;' />
      operationId: transactionsUsingGET
      parameters:
      - name: accountId
        in: query
        description: |
          口座ID
          半角英数字
          口座を識別するID
          科目コードが以下の場合のみ受け付けます
          ・01=普通預金（有利息）
          ・02=普通預金（決済用）

          minLength: 12
          maxLength: 29
        required: true
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: AccountId
        example: "101011234567"
        x-exportParamName: AccountId
      - name: dateFrom
        in: query
        description: |
          対象期間From
          半角文字
          YYYY-MM-DD形式

          minLength: 10
          maxLength: 10
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: DateFrom
          x-optionalDataType: String
        example: 2018-07-30
        x-exportParamName: DateFrom
        x-optionalDataType: String
      - name: dateTo
        in: query
        description: |
          対象期間To
          半角文字
          YYYY-MM-DD形式
          対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却

          minLength: 10
          maxLength: 10
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: DateTo
          x-optionalDataType: String
        example: 2018-08-10
        x-exportParamName: DateTo
        x-optionalDataType: String
      - name: nextItemKey
        in: query
        description: |
          次明細キー
          半角数字
          初回要求時は未設定
          初回応答で次明細キーが「true」の場合、返却された同項目を2回目以降に設定

          minLength: 1
          maxLength: 24
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: NextItemKey
          x-optionalDataType: String
        example: "20181012090520112541"
        x-exportParamName: NextItemKey
        x-optionalDataType: String
      - name: x-access-token
        in: header
        description: "アクセストークン\n\nminLength: 1\nmaxLength: 128           \n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X GET \
            'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31' \
            -H 'accept: application/json;charset=UTF-8' \
            -H 'x-access-token: your access token'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["x-access-token"] = 'your access token'
          request["accept"] = 'application/json;charset=UTF-8'

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPSConnection("api.gmo-aozora.com")

          headers = {
              'x-access-token': "your access token",
              'accept': "application/json;charset=UTF-8"
              }

          conn.request("GET", "/ganb/api/simulator/corporation/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
              "accept: application/json;charset=UTF-8",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31")
            .get()
            .addHeader("x-access-token", "your access token")
            .addHeader("accept", "application/json;charset=UTF-8")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/transactions',\n\
          \  qs: \n   { accountId: '301011000192',\n     dateFrom: '2018-07-30',\n\
          \     dateTo: '2018-12-31' },\n  headers: \n   { accept: 'application/json;charset=UTF-8',\n\
          \     'x-access-token': 'your access token' } };\n\nrequest(options, function\
          \ (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: Go
        source: |
          package main

          import (
            "fmt"
            "net/http"
            "io/ioutil"
          )

          func main() {

            url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31"

            req, _ := http.NewRequest("GET", url, nil)

            req.Header.Add("x-access-token", "your access token")
            req.Header.Add("accept", "application/json;charset=UTF-8")

            res, _ := http.DefaultClient.Do(req)

            defer res.Body.Close()
            body, _ := ioutil.ReadAll(res.Body)

            fmt.Println(res)
            fmt.Println(string(body))

          }
      - lang: Swift
        source: |
          import Foundation

          let headers = [
            "x-access-token": "your access token",
            "accept": "application/json;charset=UTF-8"
          ]

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/transactions?accountId=301011000192&dateFrom=2018-07-30&dateTo=2018-12-31")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "GET"
          request.allHTTPHeaderFields = headers

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
  /accounts/deposit-transactions:
    get:
      tags:
      - account
      summary: 振込入金明細照会
      description: |
        <p>指定した円普通預金口座の振込入金明細情報を照会します</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>対象科目</p>
          <p style='padding-left:20px;'>円普通預金口座</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>取得上限件数</p>
          <p style='padding-left:20px;'>500件</p>
          <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>
          <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>ページング</p>
          <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>ソート順</p>
          <p style='padding-left:20px;'>取引の昇順</p>
        </div>
        <div style='width:600px; margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>対象期間</p>
          <div style='display:table; margin-left:20px; background-color:#29659b;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
        </div>
        <div style='margin:10px;'>
          <ul>
            <li style='list-style-type:none;'>&#9312;の場合　当日分の振込入金明細を返却</li>
            <li style='list-style-type:none;'>&#9313;の場合　対象期間From　～　当日までの振込入金明細を返却</li>
            <li style='list-style-type:none;'>&#9314;の場合　取引初回　～　対象期間Toまでの振込入金明細を返却</li>
            <li style='list-style-type:none;'>&#9315;の場合　対象期間From　～　対象期間Toまでの振込入金明細を返却</li>
          </ul>
        </div> <div style='margin-bottom:40px;' />
      operationId: accountsDepositTransactionsUsingGET
      parameters:
      - name: accountId
        in: query
        description: |
          口座ID
          半角数字
          口座を識別するID

          minLength: 12
          maxLength: 29
        required: true
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: AccountId
        example: "101011234567"
        x-exportParamName: AccountId
      - name: dateFrom
        in: query
        description: |
          対象期間From
          半角文字
          YYYY-MM-DD形式

          minLength: 10
          maxLength: 10
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: DateFrom
          x-optionalDataType: String
        example: 2018-07-30
        x-exportParamName: DateFrom
        x-optionalDataType: String
      - name: dateTo
        in: query
        description: |
          対象期間To
          半角文字
          YYYY-MM-DD形式
           対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却

          minLength: 10
          maxLength: 10
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: DateTo
          x-optionalDataType: String
        example: 2018-08-10
        x-exportParamName: DateTo
        x-optionalDataType: String
      - name: nextItemKey
        in: query
        description: |
          次明細キー
          半角数字
          初回要求時は未設定
          初回応答で次明細フラグが「true」の場合、返却された同項目を2回目以降に設定

          minLength: 1
          maxLength: 24
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: NextItemKey
          x-optionalDataType: String
        example: "20181012090520123456"
        x-exportParamName: NextItemKey
        x-optionalDataType: String
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/DepositTransactionsResponse'
            application/json:
              example:
                accountId: "101011234567"
                dateFrom: 2018-07-30
                dateTo: 2018-08-10
                baseDate: 2018-08-10
                baseTime: 10:00:00+09:00
                hasNext: true
                nextItemKey: "20181012090520112541"
                count: "500"
                paymentArrivals:
                - transactionDate: 2018-07-30
                  valueDate: 2018-07-30
                  transactionType: "1"
                  remarks: 振込 ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123 アオゾラショウジ（カ
                  amount: "50000"
                  applicantName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
                  paymentBankName: ｱｵｿﾞﾗｷﾞﾝｺｳ
                  paymentBranchName: ﾎﾝﾃﾝ
                  ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123
                  itemKey: "20181012090520123456"
                - transactionDate: 2018-07-31
                  valueDate: 2018-07-31
                  transactionType: "1"
                  remarks: 振込 ｲ-ﾃﾞ-ｱｲ テスト　タロウ あじさい支店 1036971
                  amount: "10000"
                  applicantName: ﾃｽﾄ ﾀﾛｳ
                  paymentBankName: ﾎｼｿﾞﾗｷﾞﾝｺｳ
                  paymentBranchName: ｴｲｷﾞﾖｳﾌﾞ
                  ediInfo: ｲ-ﾃﾞ-ｱｲ
                  itemKey: "20181012090520112541"
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X GET \'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/deposit-transactions?accountId=101011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456' \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'x-access-token: your access token'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/deposit-transactions?accountId=101011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["x-access-token"] = 'your access token'

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("stg-api,gmo-aozora,com")

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'x-access-token': "your access token"
              }

          conn.request("GET", "ganb/api/corporation/v1/accounts/deposit-transactions?accountId=101011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |-
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/deposit-transactions?accountId=101011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456",

            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/deposit-transactions?accountId=101011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456")
            .get()
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/deposit-transactions',\n\
          \  qs: \n   { accountId: '101011234567',\n     dateFrom: '2018-07-30',\n\
          \     dateTo: '2018-08-01',\n     nextItemKey: '20181012090520123456' },\n\
          \  headers: \n   { 'x-access-token': 'your access token',\n     Accept:\
          \ 'application/json;charset=UTF-8' } };\n\nrequest(options, function (error,\
          \ response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/deposit-transactions?accountId=101011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456"

           req, _ := http.NewRequest("GET", url, nil)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "x-access-token": "your access token"
          ]

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/accounts/deposit-transactions?accountId=101011234567&dateFrom=2018-07-30&dateTo=2018-08-01&nextItemKey=20181012090520123456")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "GET"
          request.allHTTPHeaderFields = headers

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
  /va/list:
    post:
      tags:
      - virtual-account
      summary: 振込入金口座一覧照会
      description: |
        <p>発行済みの振込入金口座の一覧を照会します</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>リクエストボディの振込入金口座IDリスト上限件数</p>
          <p style='padding-left:20px;'>500件</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>取得上限件数</p>
          <p style='padding-left:20px;'>500件</p>
          <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>
          <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>ページング</p>
          <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次一覧キーを追加してリクエストしてください</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>ソート順</p>
          <p style='padding-left:20px;'>発行日時 昇順</p>
        </div>
        <div style='width:600px; margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>クエリパラメーター　最終入金日</p>
          <div style='display:table; margin-left:20px; background-color:#29659b;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>最終入金日From</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>最終入金日To</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
        </div>
        <div style='margin:10px;'>
          <ul>
            <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>
            <li style='list-style-type:none;'>&#9313;の場合　最終入金日From　～　当日までの振込入金口座情報を返却</li>
            <li style='list-style-type:none;'>&#9314;の場合　最も過去となる最終入金日　～　最終入金日Toまでの振込入金口座情報を返却</li>
            <li style='list-style-type:none;'>&#9315;の場合　最終入金日From　～　最終入金日Toまでの振込入金口座情報を返却</li>
          </ul>
        </div>
        <div style='width:600px; margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>クエリパラメーター　振込入金口座発行日</p>
          <div style='display:table; margin-left:20px; background-color:#29659b;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座発行日From</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座発行日To</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
        </div>
        <div style='margin:10px;'>
          <ul>
            <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>
            <li style='list-style-type:none;'>&#9313;の場合　振込入金口座発行日From　～　当日までの振込入金口座情報を返却</li>
            <li style='list-style-type:none;'>&#9314;の場合　最も過去となる口座発行日　～　振込入金口座発行日Toまでの振込入金口座情報を返却</li>
            <li style='list-style-type:none;'>&#9315;の場合　振込入金口座発行日From　～　振込入金口座発行日Toまでの振込入金口座情報を返却</li>
          </ul>
        </div>
        <div style='width:600px; margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>クエリパラメーター　有効期限</p>
          <div style='display:table; margin-left:20px; background-color:#29659b;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>有効期限From</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>有効期限To</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
        </div>
        <div style='margin:10px;'>
          <ul>
            <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>
            <li style='list-style-type:none;'>&#9313;の場合　有効期限From以上の振込入金口座情報を返却</li>
            <li style='list-style-type:none;'>&#9314;の場合　最も過去となる有効期限　～　有効期限Toまでの振込入金口座情報を返却</li>
            <li style='list-style-type:none;'>&#9315;の場合　有効期限From　～　有効期限Toまでの振込入金口座情報を返却</li>
          </ul>
        </div>
        <div style='width:600px; margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>クエリパラメーター　入金口座ID、　振込入金口座IDの設定別の仕様</p>
          <div style='display:table; margin-left:20px; background-color:#29659b;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>入金口座ID</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座ID</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
        </div>
        <div style='margin:10px;'>
          <ul>
            <li style='list-style-type:none;'>&#9312;の場合　入金口座IDに該当する振込入金口座情報を返却</li>
            <li style='list-style-type:none;'>&#9313;の場合　振込入金口座IDに該当する振込入金口座情報を返却</li>
            <li style='list-style-type:none;'>&#9314;の場合　振込入金口座IDが入金口座IDに紐付いているか判定を行い、OKであれば入金明細を返却し、NGであればエラーを返却します</li>
          </ul>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>振込入金口座API認証情報</p>
          <p style='padding-left:20px;'>提携企業契約時は必須で、この値が設定されていない場合、銀行契約の一覧照会を返却します</p>
        </div>
      operationId: vaListUsingPOST
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      requestBody:
        description: HTTPリクエストボディ
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/VaListRequest'
        required: false
        x-exportParamName: Body
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/VaListResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X POST \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/list \
            -H 'Content-Type: application/json' \
            -H 'accept: application/json;charset=UTF-8' \
            -H 'x-access-token: your access token' \
            -d '{ "vaContractAuthKey": "5CSDFG1515A54DF", "vaTypeCode": "1", "depositAmountExistCode": "1", "vaHolderNameKana": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ", "vaStatusCodeList": [ { "vaStatusCode": "1" } ], "latestDepositDateFrom": "2018-08-10", "latestDepositDateTo": "2018-08-10", "vaIssueDateFrom": "2018-07-31", "vaIssueDateTo": "2018-08-01", "expireDateFrom": "2018-08-31", "expireDateTo": "2018-09-01", "raId": "101011234567", "nextItemKey": "AABA0515651", "sortItemCode": "2", "sortOrderCode": "2", "vaIdList": [ { "vaId": "5021099622" } ]}'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/list")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["accept"] = 'application/json;charset=UTF-8'
          request["Content-Type"] = 'application/json'
          request["x-access-token"] = 'your access token'
          request.body = "{ \"vaContractAuthKey\": \"5CSDFG1515A54DF\", \"vaTypeCode\": \"1\", \"depositAmountExistCode\": \"1\", \"vaHolderNameKana\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\", \"vaStatusCodeList\": [ { \"vaStatusCode\": \"1\" } ], \"latestDepositDateFrom\": \"2018-08-10\", \"latestDepositDateTo\": \"2018-08-10\", \"vaIssueDateFrom\": \"2018-07-31\", \"vaIssueDateTo\": \"2018-08-01\", \"expireDateFrom\": \"2018-08-31\", \"expireDateTo\": \"2018-09-01\", \"raId\": \"101011234567\", \"nextItemKey\": \"AABA0515651\", \"sortItemCode\": \"2\", \"sortOrderCode\": \"2\", \"vaIdList\": [ { \"vaId\": \"5021099622\" } ]}"

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          payload = "{ \"vaContractAuthKey\": \"5CSDFG1515A54DF\", \"vaTypeCode\": \"1\", \"depositAmountExistCode\": \"1\", \"vaHolderNameKana\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\", \"vaStatusCodeList\": [ { \"vaStatusCode\": \"1\" } ], \"latestDepositDateFrom\": \"2018-08-10\", \"latestDepositDateTo\": \"2018-08-10\", \"vaIssueDateFrom\": \"2018-07-31\", \"vaIssueDateTo\": \"2018-08-01\", \"expireDateFrom\": \"2018-08-31\", \"expireDateTo\": \"2018-09-01\", \"raId\": \"101011234567\", \"nextItemKey\": \"AABA0515651\", \"sortItemCode\": \"2\", \"sortOrderCode\": \"2\", \"vaIdList\": [ { \"vaId\": \"5021099622\" } ]}"

          headers = {
              'accept': "application/json;charset=UTF-8",
              'Content-Type': "application/json",
              'x-access-token': "your access token"
              }

          conn.request("POST", "ganb/api/simulator/corporation/v1/va/list", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/list",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{ \"vaContractAuthKey\": \"5CSDFG1515A54DF\", \"vaTypeCode\": \"1\", \"depositAmountExistCode\": \"1\", \"vaHolderNameKana\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\", \"vaStatusCodeList\": [ { \"vaStatusCode\": \"1\" } ], \"latestDepositDateFrom\": \"2018-08-10\", \"latestDepositDateTo\": \"2018-08-10\", \"vaIssueDateFrom\": \"2018-07-31\", \"vaIssueDateTo\": \"2018-08-01\", \"expireDateFrom\": \"2018-08-31\", \"expireDateTo\": \"2018-09-01\", \"raId\": \"101011234567\", \"nextItemKey\": \"AABA0515651\", \"sortItemCode\": \"2\", \"sortOrderCode\": \"2\", \"vaIdList\": [ { \"vaId\": \"5021099622\" } ]}",
            CURLOPT_HTTPHEADER => array(
              "Content-Type: application/json",
              "accept: application/json;charset=UTF-8",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{ \"vaContractAuthKey\": \"5CSDFG1515A54DF\", \"vaTypeCode\": \"1\", \"depositAmountExistCode\": \"1\", \"vaHolderNameKana\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\", \"vaStatusCodeList\": [ { \"vaStatusCode\": \"1\" } ], \"latestDepositDateFrom\": \"2018-08-10\", \"latestDepositDateTo\": \"2018-08-10\", \"vaIssueDateFrom\": \"2018-07-31\", \"vaIssueDateTo\": \"2018-08-01\", \"expireDateFrom\": \"2018-08-31\", \"expireDateTo\": \"2018-09-01\", \"raId\": \"101011234567\", \"nextItemKey\": \"AABA0515651\", \"sortItemCode\": \"2\", \"sortOrderCode\": \"2\", \"vaIdList\": [ { \"vaId\": \"5021099622\" } ]}");
          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/list")
            .post(body)
            .addHeader("accept", "application/json;charset=UTF-8")
            .addHeader("Content-Type", "application/json")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/list',\n\
          \  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type':\
          \ 'application/json',\n     accept: 'application/json;charset=UTF-8' },\n\
          \  body: \n   { vaContractAuthKey: '5CSDFG1515A54DF',\n     vaTypeCode:\
          \ '1',\n     depositAmountExistCode: '1',\n     vaHolderNameKana: 'ｼﾞ-ｴﾑ\
          ｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ',\n     vaStatusCodeList: [ { vaStatusCode: '1' }\
          \ ],\n     latestDepositDateFrom: '2018-08-10',\n     latestDepositDateTo:\
          \ '2018-08-10',\n     vaIssueDateFrom: '2018-07-31',\n     vaIssueDateTo:\
          \ '2018-08-01',\n     expireDateFrom: '2018-08-31',\n     expireDateTo:\
          \ '2018-09-01',\n     raId: '101011234567',\n     nextItemKey: 'AABA0515651',\n\
          \     sortItemCode: '2',\n     sortOrderCode: '2',\n     vaIdList: [ { vaId:\
          \ '5021099622' } ] },\n  json: true };\n\nrequest(options, function (error,\
          \ response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "strings"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/list"

           payload := strings.NewReader("{ \"vaContractAuthKey\": \"5CSDFG1515A54DF\", \"vaTypeCode\": \"1\", \"depositAmountExistCode\": \"1\", \"vaHolderNameKana\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\", \"vaStatusCodeList\": [ { \"vaStatusCode\": \"1\" } ], \"latestDepositDateFrom\": \"2018-08-10\", \"latestDepositDateTo\": \"2018-08-10\", \"vaIssueDateFrom\": \"2018-07-31\", \"vaIssueDateTo\": \"2018-08-01\", \"expireDateFrom\": \"2018-08-31\", \"expireDateTo\": \"2018-09-01\", \"raId\": \"101011234567\", \"nextItemKey\": \"AABA0515651\", \"sortItemCode\": \"2\", \"sortOrderCode\": \"2\", \"vaIdList\": [ { \"vaId\": \"5021099622\" } ]}")

           req, _ := http.NewRequest("POST", url, payload)

           req.Header.Add("accept", "application/json;charset=UTF-8")
           req.Header.Add("Content-Type", "application/json")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "accept": "application/json;charset=UTF-8",
            "Content-Type": "application/json",
            "x-access-token": "your access token"
          ]
          let parameters = [
            "vaContractAuthKey": "5CSDFG1515A54DF",
            "vaTypeCode": "1",
            "depositAmountExistCode": "1",
            "vaHolderNameKana": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ",
            "vaStatusCodeList": [["vaStatusCode": "1"]],
            "latestDepositDateFrom": "2018-08-10",
            "latestDepositDateTo": "2018-08-10",
            "vaIssueDateFrom": "2018-07-31",
            "vaIssueDateTo": "2018-08-01",
            "expireDateFrom": "2018-08-31",
            "expireDateTo": "2018-09-01",
            "raId": "101011234567",
            "nextItemKey": "AABA0515651",
            "sortItemCode": "2",
            "sortOrderCode": "2",
            "vaIdList": [["vaId": "5021099622"]]
          ] as [String : Any]

          let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/list")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "POST"
          request.allHTTPHeaderFields = headers
          request.httpBody = postData as Data

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
      x-codegen-request-body-name: body
  /va/deposit-transactions:
    get:
      tags:
      - virtual-account
      summary: 振込入金口座入金明細照会
      description: "<p>振込入金口座の入金明細を照会します</p>\n<h4 style='margin-top:30px; border-left:\
        \ solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>\n<div\
        \ style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>取得上\
        限件数</p>\n  <p style='padding-left:20px;'>500件</p>\n  <p style='padding-left:20px;'>取\
        得できる明細数が500に満たないときは取得できる明細のみを返却します</p>\n  <p style='padding-left:20px;'>取得\
        できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>\n</div>\n<div style='margin:10px;'>\n\
        \  <p style='font-weight:bold; color:#616161;'>ページング</p>\n  <p style='padding-left:20px;'>2ペ\
        ージ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください</p>\n</div>\n<div\
        \ style='margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>ソート\
        順</p>\n  <p style='padding-left:20px;'>取引の昇順</p>\n  <p style='padding-left:20px;'>ソ\
        ート順コードを指定することにより、ソート順を変更できます</p>\n</div>\n<div style='width:600px; margin:10px;'>\n\
        \  <p style='font-weight:bold; color:#616161;'>対象期間</p>\n  <div style='display:table;\
        \ margin-left:20px; background-color:#29659b;'>\n    <div style='display:table-cell;\
        \ width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>\n\
        \    <div style='display:table-cell; width:80px; padding:9px; border:1px solid\
        \ #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>\n  \
        \  <div style='display:table-cell; width:80px; padding:9px; border:1px solid\
        \ #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n  \
        \  <div style='display:table-cell; width:80px; padding:9px; border:1px solid\
        \ #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n  \
        \  <div style='display:table-cell; width:80px; padding:9px; border:1px solid\
        \ #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>\n  </div>\n\
        \  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell;\
        \ width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対\
        象期間From</div>\n    <div style='display:table-cell; width:80px; padding:9px;\
        \ border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×\
        </div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px\
        \ solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○\
        </div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px\
        \ solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×\
        </div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px\
        \ solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○\
        </div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div\
        \ style='display:table-cell; width:160px; padding:9px; border:1px solid #fff;\
        \ color:#fff; background-color:#29659b;'>対象期間To</div>\n    <div style='display:table-cell;\
        \ width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8;\
        \ font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell;\
        \ width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8;\
        \ font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell;\
        \ width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8;\
        \ font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell;\
        \ width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8;\
        \ font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n\
        \  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　当日分の入金明細を返却</li>\n\
        \    <li style='list-style-type:none;'>&#9313;の場合　対象期間From(※1)　～　当日までの入金明細\
        を返却</li>\n    <li style='list-style-type:none;'>&#9314;の場合　取引初回(※2)　～　対象期間\
        To(※1)までの入金明細を返却</li>\n    <li style='list-style-type:none;'>&#9315;の場合　対象\
        期間From(※1)　～　対象期間To(※1)までの入金明細を返却</li>\n    <li style='list-style-type:none;\
        \ margin-left:10px;'>※1 : 照会する日付より6ヶ月以内の日付とし、超過する日付の場合は「400　Bad Request」を返\
        却</li>\n    <li style='list-style-type:none; margin-left:10px;'>※2 : 照会する日\
        付より6ヶ月以内の取引とし、それを超えた範囲は返却しません</li> \n  </ul>\n</div>\n<div style='width:600px;\
        \ margin:10px;'>\n  <p style='font-weight:bold; color:#616161;'>入金口座ID、振込入\
        金口座の設定別の仕様</p>\n  <div style='display:table; margin-left:20px; background-color:#29659b;'>\n\
        \    <div style='display:table-cell; width:160px; padding:9px; border:1px\
        \ solid #fff; color:#fff;'>日本語名</div>\n    <div style='display:table-cell;\
        \ width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%;\
        \ color:#fff;'>&#9312;</div>\n    <div style='display:table-cell; width:80px;\
        \ padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>\n\
        \    <div style='display:table-cell; width:80px; padding:9px; border:1px solid\
        \ #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>\n  </div>\n\
        \  <div style='display:table; margin-left:20px;'>\n    <div style='display:table-cell;\
        \ width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>入\
        金口座ID</div>\n    <div style='display:table-cell; width:80px; padding:9px;\
        \ border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○\
        </div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px\
        \ solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×\
        </div>\n    <div style='display:table-cell; width:80px; padding:9px; border:1px\
        \ solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○\
        </div>\n  </div>\n  <div style='display:table; margin-left:20px;'>\n    <div\
        \ style='display:table-cell; width:160px; padding:9px; border:1px solid #fff;\
        \ color:#fff; background-color:#29659b;'>振込入金口座ID</div>\n    <div style='display:table-cell;\
        \ width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8;\
        \ font-size:120%; text-align:center;'>×</div>\n    <div style='display:table-cell;\
        \ width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8;\
        \ font-size:120%; text-align:center;'>○</div>\n    <div style='display:table-cell;\
        \ width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8;\
        \ font-size:120%; text-align:center;'>○</div>\n  </div>\n</div>\n<div style='margin:10px;'>\n\
        \  <ul>\n    <li style='list-style-type:none;'>&#9312;の場合　入金口座IDに該当する入金明細を\
        返却します</li>\n    <li style='list-style-type:none;'>&#9313;の場合　振込入金口座IDに該当する\
        入金明細を返却します</li>\n    <li style='list-style-type:none;'>&#9314;の場合　振込入金口座IDが\
        入金口座IDに紐付いているか判定を行い、OKであれば入金明細を返却し、NGであればエラーを返却します</li>\n  </ul>\n</div> <div\
        \ style='margin-bottom:40px;' />\n"
      operationId: depositTransactionsUsingGET
      parameters:
      - name: vaContractAuthKey
        in: query
        description: |
          振込入金口座API認証情報
          半角英数字
          銀行契約の方はNULLを設定
          提携企業の方が、契約された顧客の入金明細照会を依頼される場合は必須
          提携企業以外の方が値を設定されている場合は「400 Bad Request」を返却

          minLength: 1
          maxLength: 400
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: VaContractAuthKey
          x-optionalDataType: String
        example: 5CSDFG1515A54DF
        x-exportParamName: VaContractAuthKey
        x-optionalDataType: String
      - name: raId
        in: query
        description: |
          入金口座ID
          半角数字
          入金先の口座を識別するID
          本値が設定されていない場合、振込入金口座IDは必須
          科目コードが以下の口座IDのみ受け付けます
          ・01=普通預金（有利息）
          ・02=普通預金（決済用）

          minLength: 12
          maxLength: 29
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: RaId
          x-optionalDataType: String
        example: "101011234567"
        x-exportParamName: RaId
        x-optionalDataType: String
      - name: vaId
        in: query
        description: |
          振込入金口座ID
          半角数字
          振込入金口座を識別するID
          本値が設定されていない場合、入金口座IDは必須

          minLength: 10
          maxLength: 10
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: VaId
          x-optionalDataType: String
        example: "5021099622"
        x-exportParamName: VaId
        x-optionalDataType: String
      - name: dateFrom
        in: query
        description: |
          対象期間From
          半角文字
          YYYY-MM-DD形式
          指定する場合は照会する日付より6ヶ月以内の日付とし、超えた場合は「400 Bad Request」を返却

          minLength: 10
          maxLength: 10
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: DateFrom
          x-optionalDataType: String
        example: 2018-08-01
        x-exportParamName: DateFrom
        x-optionalDataType: String
      - name: dateTo
        in: query
        description: |
          対象期間To
          半角文字
          YYYY-MM-DD形式
          指定する場合は照会する日付より6ヶ月以内の日付とし、超えた場合は「400 Bad Request」を返却
          対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却

          minLength: 10
          maxLength: 10
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: DateTo
          x-optionalDataType: String
        example: 2018-08-02
        x-exportParamName: DateTo
        x-optionalDataType: String
      - name: sortOrderCode
        in: query
        description: |
          ソート順コード
          半角数字
          取引日のソート順を指定するコード値
          ・1=昇順
          ・2=降順

          minLength: 1
          maxLength: 1
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: SortOrderCode
          x-optionalDataType: String
        example: "2"
        x-exportParamName: SortOrderCode
        x-optionalDataType: String
      - name: nextItemKey
        in: query
        description: |
          次明細キー
          半角数字
          初回要求時は未設定
          初回応答で次明細キーが「true」の場合、返却された同項目を2回目以降に設定

          minLength: 1
          maxLength: 24
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: NextItemKey
          x-optionalDataType: String
        example: "20181012090520112541"
        x-exportParamName: NextItemKey
        x-optionalDataType: String
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/VaDepositTransactionsResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X GET \
            'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1' \
            -H 'accept: application/json;charset=UTF-8' \
            -H 'x-access-token: your access token'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["x-access-token"] = 'your access token'
          request["accept"] = 'application/json;charset=UTF-8'

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPSConnection("api.gmo-aozora.com")

          headers = {
              'x-access-token': "your access token",
              'accept': "application/json;charset=UTF-8"
              }

          conn.request("GET", "/ganb/api/simulator/corporation/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
              "accept: application/json;charset=UTF-8",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1")
            .get()
            .addHeader("x-access-token", "your access token")
            .addHeader("accept", "application/json;charset=UTF-8")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/deposit-transactions',\n\
          \  qs: \n   { raId: '101011000330',\n     dateFrom: '2018-07-30',\n    \
          \ dateTo: '2018-12-31',\n     sortOrderCode: '1' },\n  headers: \n   { accept:\
          \ 'application/json;charset=UTF-8',\n     'x-access-token': 'your access\
          \ token' } };\n\nrequest(options, function (error, response, body) {\n \
          \ if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: Go
        source: |
          package main

          import (
            "fmt"
            "net/http"
            "io/ioutil"
          )

          func main() {

            url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1"

            req, _ := http.NewRequest("GET", url, nil)

            req.Header.Add("x-access-token", "your access token")
            req.Header.Add("accept", "application/json;charset=UTF-8")

            res, _ := http.DefaultClient.Do(req)

            defer res.Body.Close()
            body, _ := ioutil.ReadAll(res.Body)

            fmt.Println(res)
            fmt.Println(string(body))

          }
      - lang: Swift
        source: |
          import Foundation

          let headers = [
            "x-access-token": "your access token",
            "accept": "application/json;charset=UTF-8"
          ]

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/deposit-transactions?raId=101011000330&dateFrom=2018-07-30&dateTo=2018-12-31&sortOrderCode=1")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "GET"
          request.allHTTPHeaderFields = headers

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
  /va/issue:
    post:
      tags:
      - virtual-account
      summary: 振込入金口座発行
      description: |
        <p>振込入金口座の発行を行います</p>
        <p><font color="red">（銀行システムのメンテナンス時は本APIを実行することができないため、予め余分に振込入金口座を発行してプールしておくことをお勧めします）</font></p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>発行上限数</p>
          <p style='padding-left:20px;'>1リクエスト　：　1000口座まで</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>追加名義カナを前につける際の半角スペースについて</p>
          <ul type='square'>
            <li style='margin:10px;'>
              <p>追加名義カナの右側は1文字のみ許容します</p>
              <div style='width:600px; '>
                <div style='display:table;'>
                  <div style='display:table-cell; width:50px; padding:2px;'>例）</div>
                  <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>
                  <div style='display:table-cell; width:200px; padding:2px; text-align:center;'><pre style='width:150px;'>「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ 」</pre></div>
                </div>
                <div style='display:table;'>
                  <div style='display:table-cell; width:50px; padding:2px;'></div>
                  <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>
                  <div style='display:table-cell; width:200px; padding:2px; text-align:center;'><pre style='width:150px;'>「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ  」</pre></div>
                </div>
              </div>
            </li>
            <li style='margin:10px;'>
              <p>追加名義カナの左側は許容しません</p>
              <div style='width:600px;'>
                <div style='display:table;'>
                  <div style='display:table-cell; width:50px; padding:2px;'>例）</div>
                  <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>
                  <div style='display:table-cell; width:200px; padding:2px; text-align:center;'><pre style='width:150px;'>「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>
                </div>
                <div style='display:table;'>
                  <div style='display:table-cell; width:50px; padding:2px;'></div>
                  <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>
                  <div style='display:table-cell; width:200px; padding:2px; text-align:center;'><pre style='width:150px;'>「 ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>
                </div>
              </div>
            </li>
            <li style='margin:10px;'>
              <p>連続スペースは許容しません</p>
              <div style='width:600px;'>
                <div style='display:table;'>
                  <div style='display:table-cell; width:50px; padding:2px;'>例）</div>
                  <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>
                  <div style='display:table-cell; width:200px; padding:2px; text-align:center;'><pre style='width:150px;'>「ﾃｽ ﾄﾆｭｳ ｷﾝｸﾞﾁ」</pre></div>
                </div>
                <div style='display:table;'>
                  <div style='display:table-cell; width:50px; padding:2px;'></div>
                  <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>
                  <div style='display:table-cell; width:300px; padding:2px; text-align:center;'><pre style='width:150px;'>「ﾃｽ  ﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>
                </div>
              </div>
            </li>
          </ul>
        </div> <div style='margin-bottom:40px;' />
      operationId: issueUsingPOST
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      requestBody:
        description: HTTPリクエストボディ
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/VaIssueRequest'
        required: false
        x-exportParamName: Body
      responses:
        "201":
          description: Created
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/VaIssueResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X POST \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/issue \
            -H 'accept: application/json;charset=UTF-8' \
            -H 'content-type: application/json' \
            -H 'x-access-token: your access token' \
            -d '{
              "vaTypeCode" : "1",
              "issueRequestCount" : "5",
              "raId" : "301011000192",
              "vaContractAuthKey" : null,
              "vaHolderNameKana" : "ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ",
              "vaHolderNamePos" : "1"
            }'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/issue")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["x-access-token"] = 'your access token'
          request["content-type"] = 'application/json'
          request["accept"] = 'application/json;charset=UTF-8'
          request.body = "{
          \"vaTypeCode\" : \"1\",
          \"issueRequestCount\" : \"5\",
          \"raId\" : \"301011000192\",
          \"vaContractAuthKey\" : null,
          \"vaHolderNameKana\" : \"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\",
          \"vaHolderNamePos\" : \"1\"
          }
          "

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPSConnection("api.gmo-aozora.com")

          payload = "{
          \"vaTypeCode\" : \"1\",
          \"issueRequestCount\" : \"5\",
          \"raId\" : \"301011000192\",
          \"vaContractAuthKey\" : null,
          \"vaHolderNameKana\" : \"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\",
          \"vaHolderNamePos\" : \"1\"
          }
          "

          headers = {
              'x-access-token': "your access token",
              'content-type': "application/json",
              'accept': "application/json;charset=UTF-8"
              }

          conn.request("POST", "/ganb/api/simulator/corporation/v1/va/issue", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/issue",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{
          \"vaTypeCode\" : \"1\",
          \"issueRequestCount\" : \"5\",
          \"raId\" : \"301011000192\",
          \"vaContractAuthKey\" : null,
          \"vaHolderNameKana\" : \"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\",
          \"vaHolderNamePos\" : \"1\"
          }
          ",
            CURLOPT_HTTPHEADER => array(
              "accept: application/json;charset=UTF-8",
              "content-type: application/json",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{
          \"vaTypeCode\" : \"1\",
          \"issueRequestCount\" : \"5\",
          \"raId\" : \"301011000192\",
          \"vaContractAuthKey\" : null,
          \"vaHolderNameKana\" : \"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\",
          \"vaHolderNamePos\" : \"1\"
          }
          ");
          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/issue")
            .post(body)
            .addHeader("x-access-token", "your access token")
            .addHeader("content-type", "application/json")
            .addHeader("accept", "application/json;charset=UTF-8")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/issue',\n\
          \  headers: \n   { accept: 'application/json;charset=UTF-8',\n     'content-type':\
          \ 'application/json',\n     'x-access-token': 'your access token' },\n \
          \ body: \n   { vaTypeCode: '1',\n     issueRequestCount: '5',\n     raId:\
          \ '301011000192',\n     vaContractAuthKey: null,\n     vaHolderNameKana:\
          \ 'ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ',\n     vaHolderNamePos: '1' },\n  json: true };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: Go
        source: |
          package main

          import (
            "fmt"
            "strings"
            "net/http"
            "io/ioutil"
          )

          func main() {

            url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/issue"

            payload := strings.NewReader("{
          \"vaTypeCode\" : \"1\",
          \"issueRequestCount\" : \"5\",
          \"raId\" : \"301011000192\",
          \"vaContractAuthKey\" : null,
          \"vaHolderNameKana\" : \"ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ\",
          \"vaHolderNamePos\" : \"1\"
          }
          ")

            req, _ := http.NewRequest("POST", url, payload)

            req.Header.Add("x-access-token", "your access token")
            req.Header.Add("content-type", "application/json")
            req.Header.Add("accept", "application/json;charset=UTF-8")

            res, _ := http.DefaultClient.Do(req)

            defer res.Body.Close()
            body, _ := ioutil.ReadAll(res.Body)

            fmt.Println(res)
            fmt.Println(string(body))

          }
      - lang: Swift
        source: |
          import Foundation

          let headers = [
            "x-access-token": "your access token",
            "content-type": "application/json",
            "accept": "application/json;charset=UTF-8"
          ]
          let parameters = [
            "vaTypeCode": "1",
            "issueRequestCount": "5",
            "raId": "301011000192",
            "vaContractAuthKey": "",
            "vaHolderNameKana": "ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ",
            "vaHolderNamePos": "1"
          ] as [String : Any]

          let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/issue")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "POST"
          request.allHTTPHeaderFields = headers
          request.httpBody = postData as Data

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
      x-codegen-request-body-name: body
  /va/status-change:
    post:
      tags:
      - virtual-account
      summary: 振込入金口座状態変更
      description: |
        <p>振込入金口座の状態変更（停止・再開・削除）を行います</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>状態変更上限数</p>
          <p style='padding-left:20px;'>1リクエスト　：　100口座まで</p>
        </div> <div style='margin-bottom:40px;' />
      operationId: statusChangeUsingPOST
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      requestBody:
        description: HTTPリクエストボディ
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/VaStatusChangeRequest'
        required: false
        x-exportParamName: Body
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/VaStatusChangeResponse'
            application/json:
              example:
                vAccounts:
                - vaId: "5021099622"
                  vaBranchCode: "502"
                  vaBranchName: あじさい支店
                  vaAccountNumber: "1099622"
                  vaHolderNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
                  vaTypeCode: "1"
                  vaTypeName: 期限型
                  vaStatusCode: "2"
                  vaStatusName: 停止中
                  vaStatusChangePossibleCode: "2"
                  vaIssueDateTime: 2018-08-01T10:00:00+09:00
                  vaChangeStatusDateTime: 2018-08-10T15:00:00+09:00
                  expireDateTime: 2018-08-31T12:59:59+09:00
                  latestDepositDate: 2018-08-02
                  latestDepositAmount: "50000"
                  latestDepositCount: "3"
                  raId: "201011234567"
                  raBranchCode: "201"
                  raBranchNameKana: ビジネス
                  raAccountNumber: "1234567"
                  raHolderName: ＧＭＯ　あおぞら　太郎
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X POST \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/status-change \
            -H 'accept: application/json;charset=UTF-8' \
            -H 'content-type: application/json' \
            -H 'x-access-token: your access token' \
            -d '{
              "vaContractAuthKey" : null,
              "vaStatusChangeCode" : "1",
              "vaIdList" : [
                {
                  "vaId" : "5021099622"
                },
                {
                  "vaId" : "5021099636"
                },
                {
                  "vaId" : "5021099645"
                },
                {
                  "vaId" : "5021099657"
                },
                {
                  "vaId" : "5021099662"
                }
              ]
            }'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/status-change")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["x-access-token"] = 'your access token'
          request["content-type"] = 'application/json'
          request["accept"] = 'application/json;charset=UTF-8'
          request.body = "{
          \"vaContractAuthKey\" : null,
          \"vaStatusChangeCode\" : \"1\",
          \"vaIdList\" : [
           {
            \"vaId\" : \"5021099622\"
           },
           {
            \"vaId\" : \"5021099636\"
           },
           {
            \"vaId\" : \"5021099645\"
           },
           {
            \"vaId\" : \"5021099657\"
           },
           {
            \"vaId\" : \"5021099662\"
           }
          ]
          }
          "

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPSConnection("api.gmo-aozora.com")

          payload = "{
          \"vaContractAuthKey\" : null,
          \"vaStatusChangeCode\" : \"1\",
          \"vaIdList\" : [
           {
            \"vaId\" : \"5021099622\"
           },
           {
            \"vaId\" : \"5021099636\"
           },
           {
            \"vaId\" : \"5021099645\"
           },
           {
            \"vaId\" : \"5021099657\"
           },
           {
            \"vaId\" : \"5021099662\"
           }
          ]
          }
          "

          headers = {
              'x-access-token': "your access token",
              'content-type': "application/json",
              'accept': "application/json;charset=UTF-8"
              }

          conn.request("POST", "/ganb/api/simulator/corporation/v1/va/status-change", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/status-change",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{
          \"vaContractAuthKey\" : null,
          \"vaStatusChangeCode\" : \"1\",
          \"vaIdList\" : [
           {
            \"vaId\" : \"5021099622\"
           },
           {
            \"vaId\" : \"5021099636\"
           },
           {
            \"vaId\" : \"5021099645\"
           },
           {
            \"vaId\" : \"5021099657\"
           },
           {
            \"vaId\" : \"5021099662\"
           }
          ]
          }
          ",
            CURLOPT_HTTPHEADER => array(
              "accept: application/json;charset=UTF-8",
              "content-type: application/json",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{
          \"vaContractAuthKey\" : null,
          \"vaStatusChangeCode\" : \"1\",
          \"vaIdList\" : [
           {
            \"vaId\" : \"5021099622\"
           },
           {
            \"vaId\" : \"5021099636\"
           },
           {
            \"vaId\" : \"5021099645\"
           },
           {
            \"vaId\" : \"5021099657\"
           },
           {
            \"vaId\" : \"5021099662\"
           }
          ]
          }
          ");
          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/status-change")
            .post(body)
            .addHeader("x-access-token", "your access token")
            .addHeader("content-type", "application/json")
            .addHeader("accept", "application/json;charset=UTF-8")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/status-change',\n\
          \  headers: \n   { accept: 'application/json;charset=UTF-8',\n     'content-type':\
          \ 'application/json',\n     'x-access-token': 'your access token' },\n \
          \ body: \n   { vaContractAuthKey: null,\n     vaStatusChangeCode: '1',\n\
          \     vaIdList: \n      [ { vaId: '5021099622' },\n        { vaId: '5021099636'\
          \ },\n        { vaId: '5021099645' },\n        { vaId: '5021099657' },\n\
          \        { vaId: '5021099662' } ] },\n  json: true };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: Go
        source: |
          package main

          import (
            "fmt"
            "strings"
            "net/http"
            "io/ioutil"
          )

          func main() {

            url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/status-change"

            payload := strings.NewReader("{
          \"vaContractAuthKey\" : null,
          \"vaStatusChangeCode\" : \"1\",
          \"vaIdList\" : [
           {
            \"vaId\" : \"5021099622\"
           },
           {
            \"vaId\" : \"5021099636\"
           },
           {
            \"vaId\" : \"5021099645\"
           },
           {
            \"vaId\" : \"5021099657\"
           },
           {
            \"vaId\" : \"5021099662\"
           }
          ]
          }
          ")

            req, _ := http.NewRequest("POST", url, payload)

            req.Header.Add("x-access-token", "your access token")
            req.Header.Add("content-type", "application/json")
            req.Header.Add("accept", "application/json;charset=UTF-8")

            res, _ := http.DefaultClient.Do(req)

            defer res.Body.Close()
            body, _ := ioutil.ReadAll(res.Body)

            fmt.Println(res)
            fmt.Println(string(body))

          }
      - lang: Swift
        source: |
          import Foundation

          let headers = [
            "x-access-token": "your access token",
            "content-type": "application/json",
            "accept": "application/json;charset=UTF-8"
          ]
          let parameters = [
            "vaContractAuthKey": "",
            "vaStatusChangeCode": "1",
            "vaIdList": [["vaId": "5021099622"], ["vaId": "5021099636"], ["vaId": "5021099645"], ["vaId": "5021099657"], ["vaId": "5021099662"]]
          ] as [String : Any]

          let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/status-change")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "POST"
          request.allHTTPHeaderFields = headers
          request.httpBody = postData as Data

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
      x-codegen-request-body-name: body
  /va/close-request:
    post:
      tags:
      - virtual-account
      summary: 振込入金口座解約申込
      description: |
        振込入金口座契約の解約申込を行います
        解約は解約受付月の月末に行われます
      operationId: vaCloseRequestUsingPOST
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      requestBody:
        description: HTTPリクエストボディ
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/VaCloseRequest'
        required: false
        x-exportParamName: Body
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/VaCloseRequestResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X POST \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'Content-Type: application/json' \
            -H 'x-access-token: your access token' \
            -d '{"vaContractAuthKey":"5CSDFG1515A54DF"}'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["Content-Type"] = 'application/json'
          request["x-access-token"] = 'your access token'
          request.body = "{\"vaContractAuthKey\":\"5CSDFG1515A54DF\"}"

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          payload = "{\"vaContractAuthKey\":\"5CSDFG1515A54DF\"}"

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'Content-Type': "application/json",
              'x-access-token': "your access token"
              }

          conn.request("POST", "ganb/api/simulator/corporation/v1/va/close-request", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{\"vaContractAuthKey\":\"5CSDFG1515A54DF\"}",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "Content-Type: application/json",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\"vaContractAuthKey\":\"5CSDFG1515A54DF\"}");
          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request")
            .post(body)
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("Content-Type", "application/json")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request',\n\
          \  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type':\
          \ 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n\
          \  body: { vaContractAuthKey: '5CSDFG1515A54DF' },\n  json: true };\n\n\
          request(options, function (error, response, body) {\n  if (error) throw\
          \ new Error(error);\n\n  console.log(body);\n});\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "strings"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request"

           payload := strings.NewReader("{\"vaContractAuthKey\":\"5CSDFG1515A54DF\"}")

           req, _ := http.NewRequest("POST", url, payload)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("Content-Type", "application/json")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "Content-Type": "application/json",
            "x-access-token": "your access token"
          ]
          let parameters = ["vaContractAuthKey": "5CSDFG1515A54DF"] as [String : Any]

          let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/va/close-request")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "POST"
          request.allHTTPHeaderFields = headers
          request.httpBody = postData as Data

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
      x-codegen-request-body-name: body
  /transfer/status:
    get:
      tags:
      - transfer
      summary: 振込状況照会
      description: |
        <p>仕向の振込状況および履歴を照会します</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>取得上限件数</p>
          <p style='padding-left:20px;'>500件</p>
          <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>
          <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>ページング</p>
          <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>ソート順</p>
          <p style='padding-left:20px;'>振込照会対象期間区分の指定により下記となります  </p>
         <p style='padding-left:20px;'>1：振込申請受付日　第1ソート：振込申請日昇順　第２ソート：振込申請番号昇順</p>
         <p style='padding-left:20px;'>2：振込指定日　　　第1ソート：振込指定日昇順　第２ソート：振込申請番号昇順</p>
          <p style='padding-left:20px;'>※振込照会対象期間区分の指定がない場合は、1：振込申請受付日と同じとします</p>
        </div>
        <div style='width:600px; margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>対象期間</p>
          <div style='display:table; margin-left:20px; background-color:#29659b;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
        </div>
        <div style='margin:10px;'>
          <ul>
            <li style='list-style-type:none;'>&#9312;の場合　当日分の明細を返却</li>
            <li style='list-style-type:none;'>&#9313;の場合　対象期間From　～　当日までの明細を返却</li>
            <li style='list-style-type:none;'>&#9314;の場合　取引初回　～　対象期間Toまでの明細を返却</li>
            <li style='list-style-type:none;'>&#9315;の場合　対象期間From　～　対象期間Toまでの明細を返却</li>
          </ul>
        </div> <div style='margin-bottom:40px;' />
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>照会対象ステータス</p>
          <p style='padding-left:20px;'>申請中以降のステータスで照会が可能となります</p>
          <p style='padding-left:20px;'>依頼中、作成中の状態は照会対象外です</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>照会対象となる明細</p>
          <p style='padding-left:20px;'>振込・振替・およびその予約の履歴と状況が照会対象となります（APIからの依頼結果のみではありません）</p>
          <p style='padding-left:20px;'>定額自動振込契約によって自動登録された振込は照会対象となります</p>
          <p style='padding-left:20px;'>定額自動振込契約の申請状態と状況は対象外となります</p>
        </div>
      operationId: transferStatusUsingGET
      parameters:
      - name: accountId
        in: query
        description: |
          口座ID
          半角数字
          口座を識別するID

          minLength: 12
          maxLength: 29
        required: true
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: AccountId
        example: "101011234567"
        x-exportParamName: AccountId
      - name: queryKeyClass
        in: query
        description: |
          照会対象キー区分
          半角数字
          照会対象のキー
          1：振込申請照会対象指定、2：振込一括照会対象指定

          minLength: 1
          maxLength: 1
        required: true
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: QueryKeyClass
        example: "1"
        x-exportParamName: QueryKeyClass
      - name: applyNo
        in: query
        description: |
          受付番号（振込申請番号）
          半角数字
          照会対象の番号を設定
          照会対象キー区分が、1のときは必須
          それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）

          minLength: 16
          maxLength: 16
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: ApplyNo
          x-optionalDataType: String
        example: "2018072902345678"
        x-exportParamName: ApplyNo
        x-optionalDataType: String
      - name: dateFrom
        in: query
        description: |
          対象期間From
          半角文字
          YYYY-MM-DD形式
          照会対象キー区分が、2のときは入力可
          それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）

          minLength: 10
          maxLength: 10
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: DateFrom
          x-optionalDataType: String
        example: 2018-07-30
        x-exportParamName: DateFrom
        x-optionalDataType: String
      - name: dateTo
        in: query
        description: |
          対象期間To
          半角文字
          YYYY-MM-DD形式
          照会対象キー区分が、2のときは入力可
          それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
          対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却

          minLength: 10
          maxLength: 10
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: DateTo
          x-optionalDataType: String
        example: 2018-08-10
        x-exportParamName: DateTo
        x-optionalDataType: String
      - name: nextItemKey
        in: query
        description: "次明細キー\n半角数字\n照会対象キー区分が、2のときは入力可\nそれ以外はNULLを設定（値が設定されている場合は、「\
          400 Bad Request」を返却）            \n\nminLength: 1\nmaxLength: 24\n"
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: NextItemKey
          x-optionalDataType: String
        example: "1234567890"
        x-exportParamName: NextItemKey
        x-optionalDataType: String
      - name: requestTransferStatus
        in: query
        description: |
          照会対象ステータス
           半角数字
           2:申請中、3:差戻、4:取下げ、5:期限切れ、8:承認取消/予約取消、
           11:予約中、12:手続中、13:リトライ中、
           20:手続済、22:資金返却、24:組戻手続中、25:組戻済、26:組戻不成立、
           40:手続不成立
           照会対象キー区分が、2のときは設定可
           それ以外は設定しません（値が設定されている場合は、「400 Bad Request」を返却）
           配列のため、複数設定した場合は対象のステータスをOR条件で検索します
           省略した場合は全てを設定したものとみなします

          minLength: 1
          maxLength: 3
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            maxLength: 3
            minLength: 1
            type: string
          x-exportParamName: RequestTransferStatus
        example: "20"
        x-exportParamName: RequestTransferStatus
      - name: requestTransferClass
        in: query
        description: |
          振込照会対象取得区分
          半角数字
          1：ALL、2：振込申請のみ、3：振込受付情報のみ
          照会対象キー区分が2かつ、ビジネスID管理利用中の場合のときのみ入力可
          それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
          照会対象キー区分が、2のときに指定しない場合は1と扱います

          minLength: 1
          maxLength: 1
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: RequestTransferClass
          x-optionalDataType: String
        example: "1"
        x-exportParamName: RequestTransferClass
        x-optionalDataType: String
      - name: requestTransferTerm
        in: query
        description: |
          振込照会対象期間区分
          半角数字
          対象期間Fromと対象期間Toで指定する日付の区分
          1：振込申請受付日　2：振込指定日
          照会対象キー区分が2のときのみ入力可
          それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
          照会対象キー区分が、2のときに指定しない場合は1と扱います

          minLength: 1
          maxLength: 1
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: RequestTransferTerm
          x-optionalDataType: String
        example: "1"
        x-exportParamName: RequestTransferTerm
        x-optionalDataType: String
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferStatusResponse'
            application/json:
              example:
                acceptanceKeyClass: "2"
                baseDate: 2018-08-10
                baseTime: 10:00:00+09:00
                count: 1
                transferQueryBulkResponses:
                - dateFrom: 2018-07-30
                  dateTo: 2018-08-10
                  requestNextItemKey: "1234567890"
                  requestTransferStatuses:
                  - requestTransferStatus: "20"
                  requestTransferClass: "1"
                  requestTransferTerm: "1"
                  hasNext: true
                  nextItemKey: "1234567890"
                transferDetails:
                - transferStatus: "20"
                  transferStatusName: 手続済
                  transferTypeName: 振込振替
                  isFeeFreeUse: true
                  isFeePointUse: true
                  pointName: GMOポイント
                  transferDetailFee: "345"
                  totalDebitAmount: "123456"
                  transferApplies:
                  - applyNo: "2018072902345678"
                    transferApplyDetails:
                    - applyDatetime: 2018-07-29T10:00:00+09:00
                      applyStatus: "1"
                      applyUser: 山田二郎
                      applyComment: 緊急でお願いします。
                      approvalUser: 田中太郎
                      approvalComment: 実施しました
                  transferAccepts:
                  - acceptNo: "2018072901234567"
                    acceptDatetime: 2018-07-29T10:00:00+09:00
                  transferResponses:
                  - accountId: "101011234567"
                    remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
                    transferDesignatedDate: 2018-07-30
                    transferInfos:
                    - transferAmount: "1000"
                      ediInfo: ｾｲｷﾖｳｼﾖﾊﾞﾝｺﾞｳ1234
                      beneficiaryBankCode: "0398"
                      beneficiaryBankName: ｱｵｿﾞﾗ
                      beneficiaryBranchCode: "111"
                      beneficiaryBranchName: ﾎﾝﾃﾝ
                      accountTypeCode: "1"
                      accountNumber: "1234567"
                      beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
                      transferDetailResponses:
                      - beneficiaryBankNameKanji: あおぞら銀行
                        beneficiaryBranchNameKanji: 本店
                        usedPoint: "1000"
                        isFeeFreeUsed: false
                        transferFee: "1000"
                      unableDetailInfos:
                      - transferDetailStatus: "1"
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X GET \
            'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1' \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'x-access-token: your access token'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["x-access-token"] = 'your access token'

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("stg-api,gmo-aozora,com")

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'x-access-token': "your access token"
              }

          conn.request("GET", "ganb/api/corporation/v1,transfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1")
            .get()
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/status',\n\
          \  qs: \n   { accountId: '101011234567',\n     queryKeyClass: '2',\n   \
          \  dateFrom: '2018-07-30',\n     dateTo: '2018-08-10',\n     nextItemKey:\
          \ '1234567890',\n     requestTransferStatus: '20',\n     requestTransferClass:\
          \ '1',\n     requestTransferTerm: '1' },\n  headers: \n   { 'x-access-token':\
          \ 'your access token',\n     Accept: 'application/json;charset=UTF-8' }\
          \ };\n\nrequest(options, function (error, response, body) {\n  if (error)\
          \ throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1"

           req, _ := http.NewRequest("GET", url, nil)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "x-access-token": "your access token"
          ]

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "GET"
          request.allHTTPHeaderFields = headers

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
  /transfer/request-result:
    get:
      tags:
      - transfer
      summary: 振込依頼結果照会
      description: |
        振込依頼、振込取消依頼の処理状態を照会します
        振込取消依頼をした場合は、最後の依頼の結果コードが照会対象となります
      operationId: transferRequestResultUsingGET
      parameters:
      - name: accountId
        in: query
        description: |
          口座ID
          半角数字
          口座を識別するID

          minLength: 12
          maxLength: 29
        required: true
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: AccountId
        example: "101011234567"
        x-exportParamName: AccountId
      - name: applyNo
        in: query
        description: |
          受付番号（振込申請番号）
          半角数字
          すべての振込・総合振込で採番される、照会の基本単位となる番号

          minLength: 16
          maxLength: 16
        required: true
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: ApplyNo
        example: "2018072902345678"
        x-exportParamName: ApplyNo
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferRequestResultResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X GET \
            'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request-result?accountId=101011234567&applyNo=2018072902345678' \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'x-access-token: your access token'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request-result?accountId=101011234567&applyNo=2018072902345678")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["x-access-token"] = 'your access token'

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'x-access-token': "your access token"
              }

          conn.request("GET", "ganb/api/simulator/corporation/v1/transfer/request-result?accountId=101011234567&applyNo=2018072902345678",  headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request-result?accountId=101011234567&applyNo=2018072902345678",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request-result?accountId=101011234567&applyNo=2018072902345678")
            .get()
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request-result',\n\
          \  qs: { accountId: '101011234567', applyNo: '2018072902345678' },\n  headers:\
          \ \n   { 'x-access-token': 'your access token',\n     Accept: 'application/json;charset=UTF-8'\
          \ } };\n\nrequest(options, function (error, response, body) {\n  if (error)\
          \ throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request-result?accountId=101011234567&applyNo=2018072902345678"

           req, _ := http.NewRequest("GET", url, nil)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "x-access-token": "your access token"
          ]

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request-result?accountId=101011234567&applyNo=2018072902345678")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "GET"
          request.allHTTPHeaderFields = headers

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
  /transfer/transferfee:
    post:
      tags:
      - transfer
      summary: 振込手数料事前照会
      description: |
        <p>振込・振込予約を行うための依頼内容の事前チェックと手数料を照会します</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='padding-left:20px;'>最大99件まで登録可能</p>
          <p style='padding-left:20px;'>1件の場合通常の振込扱いとなり、2件以上で一括振込扱いとなります</p>
          <p style='padding-left:20px;'>振込無料回数とポイントについては、算出から振込実行までの間に変動する可能性があるため、手数料算出時の計算対象から除外しています</p>
        </div>
      operationId: transferFeeUsingPOST
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      requestBody:
        description: HTTPリクエストボディ
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/TransferRequest'
        required: true
        x-exportParamName: Body
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferFeeResponse'
            application/json:
              example:
                accountId: "101011234567"
                baseDate: 2018-07-30
                baseTime: 10:00:00+09:00
                totalFee: "200"
                transferFeeDetails:
                - itemId: "1"
                  transferFee: "150"
                - itemId: "2"
                  transferFee: "0"
                - itemId: "3"
                  transferFee: "50"
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferError'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X POST \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/transferfee \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'Content-Type: application/json' \
            -H 'x-access-token: your access token' \
            -d '{
            "accountId": "101011234567",
            "remitterName": "ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ",
            "transferDesignatedDate": "2018-07-30",
            "transferDateHolidayCode": "1",
            "totalCount": "3",
            "totalAmount": "3000",
            "applyComment": "緊急で承認をお願いします",
            "transfers": [
              {
                "itemId": 1,
                "transferAmount": "1000",
                "ediInfo": "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234",
                "beneficiaryBankCode": "0398",
                "beneficiaryBankName": "ｱｵｿﾞﾗ",
                "beneficiaryBranchCode": "111",
                "beneficiaryBranchName": "ﾎﾝﾃﾝ",
                "accountTypeCode": "1",
                "accountNumber": "1234567",
                "beneficiaryName": "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ"
              },
              {
                "itemId": 2,
                "transferAmount": "1500",
                "ediInfo": "EDI",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "301",
                "beneficiaryBranchName": "ｳﾐ",
                "accountTypeCode": "1",
                "accountNumber": "2345678",
                "beneficiaryName": "ｱｵｿﾞﾗ ﾃｽﾄ"
              },
              {
                "itemId": 3,
                "transferAmount": "500",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "101",
                "beneficiaryBranchName": "ﾎｳｼﾞﾝ",
                "accountTypeCode": "1",
                "accountNumber": "3456789",
                "beneficiaryName": "ｷｯｻｱｵｿﾞﾗ(ｶ"
              }
            ]
          }'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/transferfee")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["x-access-token"] = 'your access token'
          request["Content-Type"] = 'application/json'
          request.body = "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"ediInfo\": \"EDI\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}"

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          payload = "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"ediInfo\": \"EDI\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}"

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'x-access-token': "your access token",
              'Content-Type': "application/json"
              }

          conn.request("POST", "ganb/api/simulator/corporation/v1/transfer/transferfee", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/transferfee",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"ediInfo\": \"EDI\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "Content-Type: application/json",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"ediInfo\": \"EDI\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}");
          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/transferfee")
            .post(body)
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("x-access-token", "your access token")
            .addHeader("Content-Type", "application/json")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/transferfee',\n\
          \  headers: \n   { 'Content-Type': 'application/json',\n     'x-access-token':\
          \ 'your access token',\n     Accept: 'application/json;charset=UTF-8' },\n\
          \  body: \n   { accountId: '101011234567',\n     remitterName: 'ｼﾞ-ｴﾑｵ-ｼ\
          ｮｳｼﾞ(ｶ',\n     transferDesignatedDate: '2018-07-30',\n     transferDateHolidayCode:\
          \ '1',\n     totalCount: '3',\n     totalAmount: '3000',\n     applyComment:\
          \ '緊急で承認をお願いします',\n     transfers: \n      [ { itemId: 1,\n          transferAmount:\
          \ '1000',\n          ediInfo: 'ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234',\n          beneficiaryBankCode:\
          \ '0398',\n          beneficiaryBankName: 'ｱｵｿﾞﾗ',\n          beneficiaryBranchCode:\
          \ '111',\n          beneficiaryBranchName: 'ﾎﾝﾃﾝ',\n          accountTypeCode:\
          \ '1',\n          accountNumber: '1234567',\n          beneficiaryName:\
          \ 'ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ' },\n        { itemId: 2,\n          transferAmount: '1500',\n\
          \          ediInfo: 'EDI',\n          beneficiaryBankCode: '0310',\n   \
          \       beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode:\
          \ '301',\n          beneficiaryBranchName: 'ｳﾐ',\n          accountTypeCode:\
          \ '1',\n          accountNumber: '2345678',\n          beneficiaryName:\
          \ 'ｱｵｿﾞﾗ ﾃｽﾄ' },\n        { itemId: 3,\n          transferAmount: '500',\n\
          \          beneficiaryBankCode: '0310',\n          beneficiaryBankName:\
          \ 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '101',\n        \
          \  beneficiaryBranchName: 'ﾎｳｼﾞﾝ',\n          accountTypeCode: '1',\n  \
          \        accountNumber: '3456789',\n          beneficiaryName: 'ｷｯｻｱｵｿﾞﾗ\
          (ｶ' } ] },\n  json: true };\n\nrequest(options, function (error, response,\
          \ body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "strings"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/transferfee"

           payload := strings.NewReader("{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"ediInfo\": \"EDI\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}")

           req, _ := http.NewRequest("POST", url, payload)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("x-access-token", "your access token")
           req.Header.Add("Content-Type", "application/json")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "x-access-token": "your access token",
            "Content-Type": "application/json"
          ]
          let parameters = [
            "accountId": "101011234567",
            "remitterName": "ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ",
            "transferDesignatedDate": "2018-07-30",
            "transferDateHolidayCode": "1",
            "totalCount": "3",
            "totalAmount": "3000",
            "applyComment": "緊急で承認をお願いします",
            "transfers": [
              [
                "itemId": 1,
                "transferAmount": "1000",
                "ediInfo": "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234",
                "beneficiaryBankCode": "0398",
                "beneficiaryBankName": "ｱｵｿﾞﾗ",
                "beneficiaryBranchCode": "111",
                "beneficiaryBranchName": "ﾎﾝﾃﾝ",
                "accountTypeCode": "1",
                "accountNumber": "1234567",
                "beneficiaryName": "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ"
              ],
              [
                "itemId": 2,
                "transferAmount": "1500",
                "ediInfo": "EDI",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "301",
                "beneficiaryBranchName": "ｳﾐ",
                "accountTypeCode": "1",
                "accountNumber": "2345678",
                "beneficiaryName": "ｱｵｿﾞﾗ ﾃｽﾄ"
              ],
              [
                "itemId": 3,
                "transferAmount": "500",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "101",
                "beneficiaryBranchName": "ﾎｳｼﾞﾝ",
                "accountTypeCode": "1",
                "accountNumber": "3456789",
                "beneficiaryName": "ｷｯｻｱｵｿﾞﾗ(ｶ"
              ]
            ]
          ] as [String : Any]

          let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/transferfee")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "POST"
          request.allHTTPHeaderFields = headers
          request.httpBody = postData as Data

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
      x-codegen-request-body-name: body
  /transfer/request:
    post:
      tags:
      - transfer
      summary: 振込依頼
      description: |
        <p>振込・振込予約を行うための依頼をします</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='padding-left:20px;'>最大99件まで登録可能</p>
          <p style='padding-left:20px;'>1件の場合通常の振込扱いとなり、2件以上で一括振込扱いとなります</p>
        </div>
      operationId: transferRequestUsingPOST
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      requestBody:
        description: HTTPリクエストボディ
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/TransferRequest'
        required: true
        x-exportParamName: Body
      responses:
        "201":
          description: Created
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferRequestResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferError'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X POST \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'Content-Type: application/json' \
            -H 'x-access-token: your access token' \
            -d '{
            "accountId": "101011234567",
            "remitterName": "ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ",
            "transferDesignatedDate": "2018-07-30",
            "transferDateHolidayCode": "1",
            "totalCount": "3",
            "totalAmount": "3000",
            "applyComment": "緊急で承認をお願いします",
            "transfers": [
              {
                "itemId": 1,
                "transferAmount": "1000",
                "ediInfo": "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234",
                "beneficiaryBankCode": "0398",
                "beneficiaryBankName": "ｱｵｿﾞﾗ",
                "beneficiaryBranchCode": "111",
                "beneficiaryBranchName": "ﾎﾝﾃﾝ",
                "accountTypeCode": "1",
                "accountNumber": "1234567",
                "beneficiaryName": "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ"
              },
              {
                "itemId": 2,
                "transferAmount": "1500",
                "ediInfo": "EDI",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "301",
                "beneficiaryBranchName": "ｳﾐ",
                "accountTypeCode": "1",
                "accountNumber": "2345678",
                "beneficiaryName": "ｱｵｿﾞﾗ ﾃｽﾄ"
              },
              {
                "itemId": 3,
                "transferAmount": "500",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "101",
                "beneficiaryBranchName": "ﾎｳｼﾞﾝ",
                "accountTypeCode": "1",
                "accountNumber": "3456789",
                "beneficiaryName": "ｷｯｻｱｵｿﾞﾗ(ｶ"
              }
            ]
          }'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["x-access-token"] = 'your access token'
          request["Content-Type"] = 'application/json'
          request.body = "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"ediInfo\": \"EDI\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}"

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |-
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          payload = "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"ediInfo\": \"EDI\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}"

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'x-access-token': "your access token",
              'Content-Type': "application/json"
              }

          conn.request("POST", "ganb/api/simulator/corporation/v1/transfer/request", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"ediInfo\": \"EDI\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "Content-Type: application/json",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"ediInfo\": \"EDI\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}");
          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request")
            .post(body)
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("x-access-token", "your access token")
            .addHeader("Content-Type", "application/json")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request',\n\
          \  headers: \n   { 'Content-Type': 'application/json',\n     'x-access-token':\
          \ 'your access token',\n     Accept: 'application/json;charset=UTF-8' },\n\
          \  body: \n   { accountId: '101011234567',\n     remitterName: 'ｼﾞ-ｴﾑｵ-ｼ\
          ｮｳｼﾞ(ｶ',\n     transferDesignatedDate: '2018-07-30',\n     transferDateHolidayCode:\
          \ '1',\n     totalCount: '3',\n     totalAmount: '3000',\n     applyComment:\
          \ '緊急で承認をお願いします',\n     transfers: \n      [ { itemId: 1,\n          transferAmount:\
          \ '1000',\n          ediInfo: 'ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234',\n          beneficiaryBankCode:\
          \ '0398',\n          beneficiaryBankName: 'ｱｵｿﾞﾗ',\n          beneficiaryBranchCode:\
          \ '111',\n          beneficiaryBranchName: 'ﾎﾝﾃﾝ',\n          accountTypeCode:\
          \ '1',\n          accountNumber: '1234567',\n          beneficiaryName:\
          \ 'ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ' },\n        { itemId: 2,\n          transferAmount: '1500',\n\
          \          ediInfo: 'EDI',\n          beneficiaryBankCode: '0310',\n   \
          \       beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode:\
          \ '301',\n          beneficiaryBranchName: 'ｳﾐ',\n          accountTypeCode:\
          \ '1',\n          accountNumber: '2345678',\n          beneficiaryName:\
          \ 'ｱｵｿﾞﾗ ﾃｽﾄ' },\n        { itemId: 3,\n          transferAmount: '500',\n\
          \          beneficiaryBankCode: '0310',\n          beneficiaryBankName:\
          \ 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '101',\n        \
          \  beneficiaryBranchName: 'ﾎｳｼﾞﾝ',\n          accountTypeCode: '1',\n  \
          \        accountNumber: '3456789',\n          beneficiaryName: 'ｷｯｻｱｵｿﾞﾗ\
          (ｶ' } ] },\n  json: true };\n\nrequest(options, function (error, response,\
          \ body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "strings"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request"

           payload := strings.NewReader("{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"transfers\": [\n    {\n      \"itemId\": 1,\n      \"transferAmount\": \"1000\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\"\n    },\n    {\n      \"itemId\": 2,\n      \"transferAmount\": \"1500\",\n      \"ediInfo\": \"EDI\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\"\n    },\n    {\n      \"itemId\": 3,\n      \"transferAmount\": \"500\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\"\n    }\n  ]\n}")

           req, _ := http.NewRequest("POST", url, payload)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("x-access-token", "your access token")
           req.Header.Add("Content-Type", "application/json")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "x-access-token": "your access token",
            "Content-Type": "application/json"
          ]
          let parameters = [
            "accountId": "101011234567",
            "remitterName": "ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ",
            "transferDesignatedDate": "2018-07-30",
            "transferDateHolidayCode": "1",
            "totalCount": "3",
            "totalAmount": "3000",
            "applyComment": "緊急で承認をお願いします",
            "transfers": [
              [
                "itemId": 1,
                "transferAmount": "1000",
                "ediInfo": "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234",
                "beneficiaryBankCode": "0398",
                "beneficiaryBankName": "ｱｵｿﾞﾗ",
                "beneficiaryBranchCode": "111",
                "beneficiaryBranchName": "ﾎﾝﾃﾝ",
                "accountTypeCode": "1",
                "accountNumber": "1234567",
                "beneficiaryName": "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ"
              ],
              [
                "itemId": 2,
                "transferAmount": "1500",
                "ediInfo": "EDI",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "301",
                "beneficiaryBranchName": "ｳﾐ",
                "accountTypeCode": "1",
                "accountNumber": "2345678",
                "beneficiaryName": "ｱｵｿﾞﾗ ﾃｽﾄ"
              ],
              [
                "itemId": 3,
                "transferAmount": "500",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "101",
                "beneficiaryBranchName": "ﾎｳｼﾞﾝ",
                "accountTypeCode": "1",
                "accountNumber": "3456789",
                "beneficiaryName": "ｷｯｻｱｵｿﾞﾗ(ｶ"
              ]
            ]
          ] as [String : Any]

          let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/request")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "POST"
          request.allHTTPHeaderFields = headers
          request.httpBody = postData as Data

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
      x-codegen-request-body-name: body
  /transfer/cancel:
    post:
      tags:
      - transfer
      summary: 振込取消依頼
      description: |
        <p>振込・振込予約の取消を行うための依頼をします</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>取消対象ステータス</p>
          <p style='padding-left:20px;'>申請中以降のステータスで取消が可能です</p>
          <p style='padding-left:20px;'>依頼中、作成中の状態は取消対象外です</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>取消対象キー区分</p>
          <p style='padding-left:20px;'>取消対象の取引の内容について指定して下さい</p>
          <p style='padding-left:20px;'>取消対象キー区分と、取消対象の振込申請番号の状態がマッチしない場合は、「400 Bad Request」を返却します</p>
        <p style='padding-left:20px;'>振込・振替/一括振込の対象は1または2のみとなります</p>
          <p style='padding-left:20px;'>3、4は指定不可となります</p>
          <p style='padding-left:20px;'>・ビジネスID管理未利用の場合は、2を指定してください。その他は指定不可となります</p>
          <p style='padding-left:20px;'>・ビジネスID管理利用中かつ、申請者による申請中ステータスの「取下」を行いたい場合は、1を指定してください</p>
          <p style='padding-left:20px;'>・ビジネスID管理利用中かつ、承認可能者による予約中ステータスの「承認取消」を行いたい場合は、2を指定してください</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>重複した依頼</p>
          <p style='padding-left:20px;'>同一の受付番号（振込申請番号）への重複した依頼はできません</p>
          <p style='padding-left:20px;'>なお、前回の振込取消依頼が期限切れとなれば依頼は可能となります</p>
        </div>
      operationId: transferCancelUsingPOST
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      requestBody:
        description: HTTPリクエストボディ
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/TransferCancelRequest'
        required: true
        x-exportParamName: Body
      responses:
        "201":
          description: Created
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferCancelResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X POST \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/cancel \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'Content-Type: application/json' \
            -H 'x-access-token: your access token' \
            -d '{
            "accountId": "101011234567",
            "cancelTargetKeyClass": "2",
            "applyNo": "2018072902345678"
          }'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/cancel")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["Content-Type"] = 'application/json'
          request["x-access-token"] = 'your access token'
          request.body = "{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"2\",\n  \"applyNo\": \"2018072902345678\"\n}"

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          payload = "{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"2\",\n  \"applyNo\": \"2018072902345678\"\n}"

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'Content-Type': "application/json",
              'x-access-token': "your access token"
              }

          conn.request("POST", "ganb/api/simulator/corporation/v1/transfer/cancel", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/cancel",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"2\",\n  \"applyNo\": \"2018072902345678\"\n}",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "Content-Type: application/json",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"2\",\n  \"applyNo\": \"2018072902345678\"\n}");
          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/cancel")
            .post(body)
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("Content-Type", "application/json")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/cancel',\n\
          \  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type':\
          \ 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n\
          \  body: \n   { accountId: '101011234567',\n     cancelTargetKeyClass: '2',\n\
          \     applyNo: '2018072902345678' },\n  json: true };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "strings"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/cancel"

           payload := strings.NewReader("{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"2\",\n  \"applyNo\": \"2018072902345678\"\n}")

           req, _ := http.NewRequest("POST", url, payload)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("Content-Type", "application/json")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "Content-Type": "application/json",
            "x-access-token": "your access token"
          ]
          let parameters = [
            "accountId": "101011234567",
            "cancelTargetKeyClass": "2",
            "applyNo": "2018072902345678"
          ] as [String : Any]

          let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/transfer/cancel")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "POST"
          request.allHTTPHeaderFields = headers
          request.httpBody = postData as Data

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
      x-codegen-request-body-name: body
  /bulktransfer/status:
    get:
      tags:
      - bulk-transfer
      summary: 総合振込状況照会
      description: |
        <p>仕向の総合振込状況および履歴を照会します</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>取得上限件数</p>
          <p style='padding-left:20px;'>総合振込照会明細情報 500件（明細情報取得フラグが「False:取得しない」の場合）</p>
          <p style='padding-left:20px;'>総合振込明細情報 500件（明細情報取得フラグが「True：取得する」の場合）</p>
          <p style='padding-left:20px;'>1回のリクエストで照会できる明細は、総合振込照会明細情報または総合振込明細情報のいずれか最大500件です</p>
          <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p>
          <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>ページング</p>
          <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーまたは総合振込明細情報取得対象キーを追加してリクエストしてください</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>ソート順</p>
          <p style='padding-left:20px;'>明細情報取得フラグが、「False：取得しない」のとき</p>
          <p style='padding-left:20px;'>　振込照会対象期間区分の指定により下記となります</p>
          <p style='padding-left:50px;'>1：振込申請受付日　第1ソート：振込申請日昇順　第２ソート：振込申請番号昇順</p>
          <p style='padding-left:50px;'>2：振込指定日　　　第1ソート：振込指定日昇順　第２ソート：振込申請番号昇順</p>
          <p style='padding-left:50px;'>※振込照会対象期間区分の指定がない場合は、1：振込申請受付日と同じとします</p>
          <p style='padding-left:20px;'>明細情報取得フラグが、「True：取得する」のとき</p>
          <p style='padding-left:20px;'>　明細番号の昇順</p>
        </div>
        <div style='width:600px; margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>対象期間</p>
          <div style='display:table; margin-left:20px; background-color:#29659b;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
          <div style='display:table; margin-left:20px;'>
            <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
            <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>
          </div>
        </div>
        <div style='margin:10px;'>
          <ul>
            <li style='list-style-type:none;'>&#9312;の場合　当日分の明細を返却</li>
            <li style='list-style-type:none;'>&#9313;の場合　対象期間From　～　当日までの明細を返却</li>
            <li style='list-style-type:none;'>&#9314;の場合　取引初回　～　対象期間Toまでの明細を返却</li>
            <li style='list-style-type:none;'>&#9315;の場合　対象期間From　～　対象期間Toまでの明細を返却</li>
         <li style='list-style-type:none; margin-left:10px;'>※現在契約中の総合振込サービスのみ照会可能となります</li>
         </ul>
        </div> <div style='margin-bottom:40px;' />
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>照会対象ステータス</p>
          <p style='padding-left:20px;'>申請中以降のステータスで照会が可能となります</p>
          <p style='padding-left:20px;'>依頼中、作成中の状態は照会対象外です</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>照会対象となる明細</p>
          <p style='padding-left:20px;'>総合振込・およびその予約の履歴と状況が照会対象となります（APIからの依頼結果のみではありません）</p>
        </div>
      operationId: bulkTransferStatusUsingGET
      parameters:
      - name: accountId
        in: query
        description: |
          口座ID
          半角数字
          口座を識別するID

          minLength: 12
          maxLength: 29
        required: true
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: AccountId
        example: "101011234567"
        x-exportParamName: AccountId
      - name: queryKeyClass
        in: query
        description: |
          照会対象キー区分
          半角数字
          照会対象のキー
          1：振込申請照会対象指定、2：振込一括照会対象指定

          minLength: 1
          maxLength: 1
        required: true
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: QueryKeyClass
        example: "1"
        x-exportParamName: QueryKeyClass
      - name: detailInfoNecessity
        in: query
        description: |
          明細情報取得フラグ
          総合振込明細情報の取得要否
          照会対象キー区分が、1のときは「True：取得する」を指定可
          それ以外で「True：取得する」が設定されている場合は、「400 Bad Request」を返却
          True：取得する、False:取得しない　省略/NULLは　false扱い
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: boolean
          x-exportParamName: DetailInfoNecessity
          x-optionalDataType: Bool
        example: true
        x-exportParamName: DetailInfoNecessity
        x-optionalDataType: Bool
      - name: bulktransferItemKey
        in: query
        description: |
          総合振込明細情報取得対象キー
          半角数字
          明細情報取得フラグが、「True：取得する」のとき指定可
          それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
          総合振込明細情報を取得するときに取得を開始する番号
          明細情報取得フラグが、「True：取得する」のときの省略/NULLは1扱い
          1500明細を取得する場合、は以下のように設定
          1電文目：1
          2電文目：501
          3電文目：1001

          minLength: 1
          maxLength: 6
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: BulktransferItemKey
          x-optionalDataType: String
        example: "501"
        x-exportParamName: BulktransferItemKey
        x-optionalDataType: String
      - name: applyNo
        in: query
        description: |
          受付番号（振込申請番号）
          半角数字
          照会対象の番号を設定
          照会対象キー区分が、1のときは必須
          それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）

          minLength: 16
          maxLength: 16
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: ApplyNo
          x-optionalDataType: String
        example: "2018072902345678"
        x-exportParamName: ApplyNo
        x-optionalDataType: String
      - name: dateFrom
        in: query
        description: "対象期間From\n半角文字\nYYYY-MM-DD形式\n照会対象キー区分が、2のときは入力可\nそれ以外はNULLを\
          設定（値が設定されている場合は、「400 Bad Request」を返却）            \n\nminLength: 10\nmaxLength:\
          \ 10\n"
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: DateFrom
          x-optionalDataType: String
        example: 2018-07-30
        x-exportParamName: DateFrom
        x-optionalDataType: String
      - name: dateTo
        in: query
        description: |
          対象期間To
          半角文字
          YYYY-MM-DD形式
          照会対象キー区分が、2のときは入力可
          それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
          対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却

          minLength: 10
          maxLength: 10
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: DateTo
          x-optionalDataType: String
        example: 2018-08-10
        x-exportParamName: DateTo
        x-optionalDataType: String
      - name: nextItemKey
        in: query
        description: "次明細キー\n半角数字\n照会対象キー区分が、2のときは入力可\nそれ以外はNULLを設定（値が設定されている場合は、「\
          400 Bad Request」を返却）            \n\nminLength: 1\nmaxLength: 24\n"
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: NextItemKey
          x-optionalDataType: String
        example: "1234567890"
        x-exportParamName: NextItemKey
        x-optionalDataType: String
      - name: requestTransferStatus
        in: query
        description: |
          照会対象ステータス
           半角数字
           2:申請中、3:差戻、4:取下げ、5:期限切れ、8:承認取消/予約取消、
           11:予約中、12:手続中、13:リトライ中、
           20:手続済、30:不能・組戻あり、40:手続不成立

           照会対象キー区分が、2のときは設定可
           それ以外は設定しません（値が設定されている場合は、「400 Bad Request」を返却）
           配列のため、複数設定した場合は対象のステータスをOR条件で検索します
           省略した場合は全てを設定したものとみなします

          minLength: 1
          maxLength: 3
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            maxLength: 3
            minLength: 1
            type: string
          x-exportParamName: RequestTransferStatus
        example: "20"
        x-exportParamName: RequestTransferStatus
      - name: requestTransferClass
        in: query
        description: |
          振込照会対象取得区分
          半角数字
          1：ALL、2：振込申請のみ、3：振込受付情報のみ
          照会対象キー区分が2かつ、ビジネスID管理利用中の場合のときのみ入力可
          それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
          照会対象キー区分が、2のときに指定しない場合は1と扱います

          minLength: 1
          maxLength: 1
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: RequestTransferClass
          x-optionalDataType: String
        example: "1"
        x-exportParamName: RequestTransferClass
        x-optionalDataType: String
      - name: requestTransferTerm
        in: query
        description: |
          振込照会対象期間区分
          半角数字
          対象期間Fromと対象期間Toで指定する日付の区分
          1：振込申請受付日　2：振込指定日
          照会対象キー区分が2のときのみ入力可
          それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
          照会対象キー区分が、2のときに指定しない場合は1と扱います

          minLength: 1
          maxLength: 1
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: RequestTransferTerm
          x-optionalDataType: String
        example: "1"
        x-exportParamName: RequestTransferTerm
        x-optionalDataType: String
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/BulkTransferStatusResponse'
            application/json:
              example:
                acceptanceKeyClass: "1"
                detailInfoNecessity: true
                bulktransferItemKey: "501"
                baseDate: 2018-08-10
                baseTime: 10:00:00+09:00
                count: "1"
                detailInfoResult: true
                bulkTransferDetails:
                - transferStatus: "20"
                  transferStatusName: 手続済
                  transferTypeName: 総合振込
                  remitterCode: "1234567890"
                  isFeeFreeUse: false
                  isFeePointUse: true
                  pointName: GMOポイント
                  totalFee: "345"
                  totalDebitAmount: "123456"
                  transferApplies:
                  - applyNo: "2018072902345678"
                    transferApplyDetails:
                    - applyDatetime: 2018-07-29T10:00:00+09:00
                      applyStatus: "4"
                      applyUser: 山田二郎
                      applyComment: 緊急でお願いします。
                      approvalUser: 田中太郎
                      approvalComment: 実施しました
                  transferAccepts:
                  - acceptNo: "2018072901234567"
                    acceptDatetime: 2018-07-29T10:00:00+09:00
                  bulktransferResponses:
                  - accountId: "101011234567"
                    remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
                    transferDesignatedDate: 2018-07-30
                    transferDataName: ６月分請求
                    totalCount: "501"
                    totalAmount: "123456"
                    bulkTransferInfos:
                    - itemId: "501"
                      beneficiaryBankCode: "0398"
                      beneficiaryBankName: ｱｵｿﾞﾗ
                      beneficiaryBranchCode: "111"
                      beneficiaryBranchName: ﾎﾝﾃﾝ
                      accountTypeCode: "1"
                      accountNumber: "1234567"
                      beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
                      transferAmount: "1000"
                      ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
                      transferDesignatedType: "7"
                      identification: "Y"
                      transferDetailResponses:
                      - beneficiaryBankNameKanji: あおぞら銀行
                        beneficiaryBranchNameKanji: 本店
                        usedPoint: "10"
                        isFeeFreeUsed: false
                        transferFee: "163"
                      unableDetailInfos:
                      - transferDetailStatus: "1"
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X GET \
            'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1' \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'x-access-token: your access token'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["x-access-token"] = 'your access token'

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'x-access-token': "your access token"
              }

          conn.request("GET", "ganb/api/simulator/corporation/v1/bulktransfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1",  headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1")
            .get()
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/status',\n\
          \  qs: \n   { accountId: '101011234567',\n     queryKeyClass: '2',\n   \
          \  dateFrom: '2018-07-30',\n     dateTo: '2018-08-10',\n     nextItemKey:\
          \ '1234567890',\n     requestTransferStatus: '20',\n     requestTransferClass:\
          \ '1',\n     requestTransferTerm: '1' },\n  headers: \n   { 'x-access-token':\
          \ 'your access token',\n     Accept: 'application/json;charset=UTF-8' }\
          \ };\n\nrequest(options, function (error, response, body) {\n  if (error)\
          \ throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1"

           req, _ := http.NewRequest("GET", url, nil)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "x-access-token": "your access token"
          ]

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/status?accountId=101011234567&queryKeyClass=2&dateFrom=2018-07-30&dateTo=2018-08-10&nextItemKey=1234567890&requestTransferStatus=20&requestTransferClass=1&requestTransferTerm=1")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "GET"
          request.allHTTPHeaderFields = headers

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
  /bulktransfer/request-result:
    get:
      tags:
      - bulk-transfer
      summary: 総合振込依頼結果照会
      description: |
        総合振込依頼、総合振込取消依頼の処理状態を照会します
        総合振込取消依頼をした場合は、最後の依頼の結果コードが照会対象となります
      operationId: bulkTransferRequestResultUsingGET
      parameters:
      - name: accountId
        in: query
        description: |
          口座ID
          半角数字
          口座を識別するID

          minLength: 12
          maxLength: 29
        required: true
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: AccountId
        example: "101011234567"
        x-exportParamName: AccountId
      - name: applyNo
        in: query
        description: |
          受付番号（振込申請番号）
          半角数字
          すべての振込・総合振込で採番される、照会の基本単位となる番号

          minLength: 16
          maxLength: 16
        required: true
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          x-exportParamName: ApplyNo
        example: "2018072902345678"
        x-exportParamName: ApplyNo
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferRequestResultResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X GET \
            'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request-result?accountId=101011234567&applyNo=2018072902345678' \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'x-access-token: your access token'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request-result?accountId=101011234567&applyNo=2018072902345678")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["x-access-token"] = 'your access token'

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'x-access-token': "your access token"
              }

          conn.request("GET", "ganb/api/simulator/corporation/v1/bulktransfer/request-result?accountId=101011234567&applyNo=2018072902345678",  headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request-result?accountId=101011234567&applyNo=2018072902345678",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request-result?accountId=101011234567&applyNo=2018072902345678")
            .get()
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'GET',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request-result',\n\
          \  qs: { accountId: '101011234567', applyNo: '2018072902345678' },\n  headers:\
          \ \n   { 'x-access-token': 'your access token',\n     Accept: 'application/json;charset=UTF-8'\
          \ } };\n\nrequest(options, function (error, response, body) {\n  if (error)\
          \ throw new Error(error);\n\n  console.log(body);\n});\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request-result?accountId=101011234567&applyNo=2018072902345678"

           req, _ := http.NewRequest("GET", url, nil)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "x-access-token": "your access token"
          ]

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request-result?accountId=101011234567&applyNo=2018072902345678")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "GET"
          request.allHTTPHeaderFields = headers

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
  /bulktransfer/transferfee:
    post:
      tags:
      - bulk-transfer
      summary: 総合振込手数料事前照会
      description: |
        <p>総合振込・総合振込予約を行うための依頼内容の事前チェックと手数料を照会します</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='padding-left:20px;'>ポイントについては、算出から振込実行までの間に変動する可能性があるため、手数料算出時の計算対象から除外しています</p>
        </div>
      operationId: bulkTransferFeeUsingPOST
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      requestBody:
        description: HTTPリクエストボディ
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/BulkTransferRequest'
        required: true
        x-exportParamName: Body
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferFeeResponse'
            application/json:
              example:
                accountId: "101011234567"
                baseDate: 2018-07-30
                baseTime: 10:00:00+09:00
                totalFee: "200"
                transferFeeDetails:
                - itemId: "1"
                  transferFee: "150"
                - itemId: "2"
                  transferFee: "0"
                - itemId: "3"
                  transferFee: "50"
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferError'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X POST \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/transferfee \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'Content-Type: application/json' \
            -H 'x-access-token: your access token' \
            -d '{
            "accountId": "101011234567",
            "remitterName": "ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ",
            "transferDesignatedDate": "2018-07-30",
            "transferDateHolidayCode": "1",
            "transferDataName": "8月定例振込データ",
            "totalCount": "3",
            "totalAmount": "3000",
            "applyComment": "緊急で承認をお願いします",
            "bulkTransfers": [
              {
                "itemId": "1",
                "beneficiaryBankCode": "0398",
                "beneficiaryBankName": "ｱｵｿﾞﾗ",
                "beneficiaryBranchCode": "111",
                "beneficiaryBranchName": "ﾎﾝﾃﾝ",
                "clearingHouseName": "0000",
                "accountTypeCode": "1",
                "accountNumber": "1234567",
                "beneficiaryName": "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ",
                "transferAmount": "1000",
                "newCode": "1",
                "ediInfo": "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234",
                "transferDesignatedType": "7",
                "identification": "Y"
              },
              {
                "itemId": "2",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "301",
                "beneficiaryBranchName": "ｳﾐ",
                "clearingHouseName": "",
                "accountTypeCode": "1",
                "accountNumber": "2345678",
                "beneficiaryName": "ｱｵｿﾞﾗ ﾃｽﾄ",
                "transferAmount": "500",
                "newCode": "1",
                "ediInfo": "",
                "transferDesignatedType": "",
                "identification": ""
              },
              {
                "itemId": "3",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "101",
                "beneficiaryBranchName": "ﾎｳｼﾞﾝ",
                "clearingHouseName": "",
                "accountTypeCode": "1",
                "accountNumber": "3456789",
                "beneficiaryName": "ｷｯｻｱｵｿﾞﾗ(ｶ",
                "transferAmount": "1500",
                "newCode": "1",
                "ediInfo": "",
                "transferDesignatedType": "",
                "identification": ""
              }
            ]
          }'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/transferfee")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["Content-Type"] = 'application/json'
          request["x-access-token"] = 'your access token'
          request.body = "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}"

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          payload = "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}"

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'Content-Type': "application/json",
              'x-access-token': "your access token"
              }

          conn.request("POST", "ganb/api/simulator/corporation/v1/bulktransfer/transferfee", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/transferfee",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "Content-Type: application/json",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}");
          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/transferfee")
            .post(body)
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("Content-Type", "application/json")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/transferfee',\n\
          \  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type':\
          \ 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n\
          \  body: \n   { accountId: '101011234567',\n     remitterName: 'ｼﾞ-ｴﾑｵ-ｼ\
          ｮｳｼﾞ(ｶ',\n     transferDesignatedDate: '2018-07-30',\n     transferDateHolidayCode:\
          \ '1',\n     transferDataName: '8月定例振込データ',\n     totalCount: '3',\n   \
          \  totalAmount: '3000',\n     applyComment: '緊急で承認をお願いします',\n     bulkTransfers:\
          \ \n      [ { itemId: '1',\n          beneficiaryBankCode: '0398',\n   \
          \       beneficiaryBankName: 'ｱｵｿﾞﾗ',\n          beneficiaryBranchCode:\
          \ '111',\n          beneficiaryBranchName: 'ﾎﾝﾃﾝ',\n          clearingHouseName:\
          \ '0000',\n          accountTypeCode: '1',\n          accountNumber: '1234567',\n\
          \          beneficiaryName: 'ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ',\n          transferAmount:\
          \ '1000',\n          newCode: '1',\n          ediInfo: 'ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234',\n\
          \          transferDesignatedType: '7',\n          identification: 'Y' },\n\
          \        { itemId: '2',\n          beneficiaryBankCode: '0310',\n      \
          \    beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode:\
          \ '301',\n          beneficiaryBranchName: 'ｳﾐ',\n          clearingHouseName:\
          \ '',\n          accountTypeCode: '1',\n          accountNumber: '2345678',\n\
          \          beneficiaryName: 'ｱｵｿﾞﾗ ﾃｽﾄ',\n          transferAmount: '500',\n\
          \          newCode: '1',\n          ediInfo: '',\n          transferDesignatedType:\
          \ '',\n          identification: '' },\n        { itemId: '3',\n       \
          \   beneficiaryBankCode: '0310',\n          beneficiaryBankName: 'ｼﾞ-ｴﾑｵ\
          -ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '101',\n          beneficiaryBranchName:\
          \ 'ﾎｳｼﾞﾝ',\n          clearingHouseName: '',\n          accountTypeCode:\
          \ '1',\n          accountNumber: '3456789',\n          beneficiaryName:\
          \ 'ｷｯｻｱｵｿﾞﾗ(ｶ',\n          transferAmount: '1500',\n          newCode: '1',\n\
          \          ediInfo: '',\n          transferDesignatedType: '',\n       \
          \   identification: '' } ] },\n  json: true };\n\nrequest(options, function\
          \ (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "strings"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/transferfee"

           payload := strings.NewReader("{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}")

           req, _ := http.NewRequest("POST", url, payload)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("Content-Type", "application/json")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "Content-Type": "application/json",
            "x-access-token": "your access token"
          ]
          let parameters = [
            "accountId": "101011234567",
            "remitterName": "ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ",
            "transferDesignatedDate": "2018-07-30",
            "transferDateHolidayCode": "1",
            "transferDataName": "8月定例振込データ",
            "totalCount": "3",
            "totalAmount": "3000",
            "applyComment": "緊急で承認をお願いします",
            "bulkTransfers": [
              [
                "itemId": "1",
                "beneficiaryBankCode": "0398",
                "beneficiaryBankName": "ｱｵｿﾞﾗ",
                "beneficiaryBranchCode": "111",
                "beneficiaryBranchName": "ﾎﾝﾃﾝ",
                "clearingHouseName": "0000",
                "accountTypeCode": "1",
                "accountNumber": "1234567",
                "beneficiaryName": "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ",
                "transferAmount": "1000",
                "newCode": "1",
                "ediInfo": "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234",
                "transferDesignatedType": "7",
                "identification": "Y"
              ],
              [
                "itemId": "2",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "301",
                "beneficiaryBranchName": "ｳﾐ",
                "clearingHouseName": "",
                "accountTypeCode": "1",
                "accountNumber": "2345678",
                "beneficiaryName": "ｱｵｿﾞﾗ ﾃｽﾄ",
                "transferAmount": "500",
                "newCode": "1",
                "ediInfo": "",
                "transferDesignatedType": "",
                "identification": ""
              ],
              [
                "itemId": "3",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "101",
                "beneficiaryBranchName": "ﾎｳｼﾞﾝ",
                "clearingHouseName": "",
                "accountTypeCode": "1",
                "accountNumber": "3456789",
                "beneficiaryName": "ｷｯｻｱｵｿﾞﾗ(ｶ",
                "transferAmount": "1500",
                "newCode": "1",
                "ediInfo": "",
                "transferDesignatedType": "",
                "identification": ""
              ]
            ]
          ] as [String : Any]

          let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/transferfee")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "POST"
          request.allHTTPHeaderFields = headers
          request.httpBody = postData as Data

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
      x-codegen-request-body-name: body
  /bulktransfer/request:
    post:
      tags:
      - bulk-transfer
      summary: 総合振込依頼
      description: |
        <p>総合振込・総合振込予約を行うための依頼をします</p>
      operationId: bulkTransferRequestUsingPOST
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      requestBody:
        description: HTTPリクエストボディ
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/BulkTransferRequest'
        required: true
        x-exportParamName: Body
      responses:
        "201":
          description: Created
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/BulkTransferRequestResponse'
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferError'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X POST \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'Content-Type: application/json' \
            -H 'x-access-token: your access token' \
            -d '{
            "accountId": "101011234567",
            "remitterName": "ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ",
            "transferDesignatedDate": "2018-07-30",
            "transferDateHolidayCode": "1",
            "transferDataName": "8月定例振込データ",
            "totalCount": "3",
            "totalAmount": "3000",
            "applyComment": "緊急で承認をお願いします",
            "bulkTransfers": [
              {
                "itemId": "1",
                "beneficiaryBankCode": "0398",
                "beneficiaryBankName": "ｱｵｿﾞﾗ",
                "beneficiaryBranchCode": "111",
                "beneficiaryBranchName": "ﾎﾝﾃﾝ",
                "clearingHouseName": "0000",
                "accountTypeCode": "1",
                "accountNumber": "1234567",
                "beneficiaryName": "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ",
                "transferAmount": "1000",
                "newCode": "1",
                "ediInfo": "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234",
                "transferDesignatedType": "7",
                "identification": "Y"
              },
              {
                "itemId": "2",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "301",
                "beneficiaryBranchName": "ｳﾐ",
                "clearingHouseName": "",
                "accountTypeCode": "1",
                "accountNumber": "2345678",
                "beneficiaryName": "ｱｵｿﾞﾗ ﾃｽﾄ",
                "transferAmount": "500",
                "newCode": "1",
                "ediInfo": "",
                "transferDesignatedType": "",
                "identification": ""
              },
              {
                "itemId": "3",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "101",
                "beneficiaryBranchName": "ﾎｳｼﾞﾝ",
                "clearingHouseName": "",
                "accountTypeCode": "1",
                "accountNumber": "3456789",
                "beneficiaryName": "ｷｯｻｱｵｿﾞﾗ(ｶ",
                "transferAmount": "1500",
                "newCode": "1",
                "ediInfo": "",
                "transferDesignatedType": "",
                "identification": ""
              }
            ]
          }'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["Content-Type"] = 'application/json'
          request["x-access-token"] = 'your access token'
          request.body = "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}"

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          payload = "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}"

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'Content-Type': "application/json",
              'x-access-token': "your access token"
              }

          conn.request("POST", "ganb/api/simulator/corporation/v1/bulktransfer/request", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "Content-Type: application/json",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}");
          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request")
            .post(body)
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("Content-Type", "application/json")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request',\n\
          \  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type':\
          \ 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n\
          \  body: \n   { accountId: '101011234567',\n     remitterName: 'ｼﾞ-ｴﾑｵ-ｼ\
          ｮｳｼﾞ(ｶ',\n     transferDesignatedDate: '2018-07-30',\n     transferDateHolidayCode:\
          \ '1',\n     transferDataName: '8月定例振込データ',\n     totalCount: '3',\n   \
          \  totalAmount: '3000',\n     applyComment: '緊急で承認をお願いします',\n     bulkTransfers:\
          \ \n      [ { itemId: '1',\n          beneficiaryBankCode: '0398',\n   \
          \       beneficiaryBankName: 'ｱｵｿﾞﾗ',\n          beneficiaryBranchCode:\
          \ '111',\n          beneficiaryBranchName: 'ﾎﾝﾃﾝ',\n          clearingHouseName:\
          \ '0000',\n          accountTypeCode: '1',\n          accountNumber: '1234567',\n\
          \          beneficiaryName: 'ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ',\n          transferAmount:\
          \ '1000',\n          newCode: '1',\n          ediInfo: 'ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234',\n\
          \          transferDesignatedType: '7',\n          identification: 'Y' },\n\
          \        { itemId: '2',\n          beneficiaryBankCode: '0310',\n      \
          \    beneficiaryBankName: 'ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode:\
          \ '301',\n          beneficiaryBranchName: 'ｳﾐ',\n          clearingHouseName:\
          \ '',\n          accountTypeCode: '1',\n          accountNumber: '2345678',\n\
          \          beneficiaryName: 'ｱｵｿﾞﾗ ﾃｽﾄ',\n          transferAmount: '500',\n\
          \          newCode: '1',\n          ediInfo: '',\n          transferDesignatedType:\
          \ '',\n          identification: '' },\n        { itemId: '3',\n       \
          \   beneficiaryBankCode: '0310',\n          beneficiaryBankName: 'ｼﾞ-ｴﾑｵ\
          -ｱｵｿﾞﾗﾈﾂﾄ',\n          beneficiaryBranchCode: '101',\n          beneficiaryBranchName:\
          \ 'ﾎｳｼﾞﾝ',\n          clearingHouseName: '',\n          accountTypeCode:\
          \ '1',\n          accountNumber: '3456789',\n          beneficiaryName:\
          \ 'ｷｯｻｱｵｿﾞﾗ(ｶ',\n          transferAmount: '1500',\n          newCode: '1',\n\
          \          ediInfo: '',\n          transferDesignatedType: '',\n       \
          \   identification: '' } ] },\n  json: true };\n\nrequest(options, function\
          \ (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n\
          });\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "strings"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request"

           payload := strings.NewReader("{\n  \"accountId\": \"101011234567\",\n  \"remitterName\": \"ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ\",\n  \"transferDesignatedDate\": \"2018-07-30\",\n  \"transferDateHolidayCode\": \"1\",\n  \"transferDataName\": \"8月定例振込データ\",\n  \"totalCount\": \"3\",\n  \"totalAmount\": \"3000\",\n  \"applyComment\": \"緊急で承認をお願いします\",\n  \"bulkTransfers\": [\n    {\n      \"itemId\": \"1\",\n      \"beneficiaryBankCode\": \"0398\",\n      \"beneficiaryBankName\": \"ｱｵｿﾞﾗ\",\n      \"beneficiaryBranchCode\": \"111\",\n      \"beneficiaryBranchName\": \"ﾎﾝﾃﾝ\",\n      \"clearingHouseName\": \"0000\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"1234567\",\n      \"beneficiaryName\": \"ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ\",\n      \"transferAmount\": \"1000\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234\",\n      \"transferDesignatedType\": \"7\",\n      \"identification\": \"Y\"\n    },\n    {\n      \"itemId\": \"2\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"301\",\n      \"beneficiaryBranchName\": \"ｳﾐ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"2345678\",\n      \"beneficiaryName\": \"ｱｵｿﾞﾗ ﾃｽﾄ\",\n      \"transferAmount\": \"500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    },\n    {\n      \"itemId\": \"3\",\n      \"beneficiaryBankCode\": \"0310\",\n      \"beneficiaryBankName\": \"ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ\",\n      \"beneficiaryBranchCode\": \"101\",\n      \"beneficiaryBranchName\": \"ﾎｳｼﾞﾝ\",\n      \"clearingHouseName\": \"\",\n      \"accountTypeCode\": \"1\",\n      \"accountNumber\": \"3456789\",\n      \"beneficiaryName\": \"ｷｯｻｱｵｿﾞﾗ(ｶ\",\n      \"transferAmount\": \"1500\",\n      \"newCode\": \"1\",\n      \"ediInfo\": \"\",\n      \"transferDesignatedType\": \"\",\n      \"identification\": \"\"\n    }\n  ]\n}")

           req, _ := http.NewRequest("POST", url, payload)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("Content-Type", "application/json")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "Content-Type": "application/json",
            "x-access-token": "your access token"
          ]
          let parameters = [
            "accountId": "101011234567",
            "remitterName": "ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ",
            "transferDesignatedDate": "2018-07-30",
            "transferDateHolidayCode": "1",
            "transferDataName": "8月定例振込データ",
            "totalCount": "3",
            "totalAmount": "3000",
            "applyComment": "緊急で承認をお願いします",
            "bulkTransfers": [
              [
                "itemId": "1",
                "beneficiaryBankCode": "0398",
                "beneficiaryBankName": "ｱｵｿﾞﾗ",
                "beneficiaryBranchCode": "111",
                "beneficiaryBranchName": "ﾎﾝﾃﾝ",
                "clearingHouseName": "0000",
                "accountTypeCode": "1",
                "accountNumber": "1234567",
                "beneficiaryName": "ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ",
                "transferAmount": "1000",
                "newCode": "1",
                "ediInfo": "ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234",
                "transferDesignatedType": "7",
                "identification": "Y"
              ],
              [
                "itemId": "2",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "301",
                "beneficiaryBranchName": "ｳﾐ",
                "clearingHouseName": "",
                "accountTypeCode": "1",
                "accountNumber": "2345678",
                "beneficiaryName": "ｱｵｿﾞﾗ ﾃｽﾄ",
                "transferAmount": "500",
                "newCode": "1",
                "ediInfo": "",
                "transferDesignatedType": "",
                "identification": ""
              ],
              [
                "itemId": "3",
                "beneficiaryBankCode": "0310",
                "beneficiaryBankName": "ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ",
                "beneficiaryBranchCode": "101",
                "beneficiaryBranchName": "ﾎｳｼﾞﾝ",
                "clearingHouseName": "",
                "accountTypeCode": "1",
                "accountNumber": "3456789",
                "beneficiaryName": "ｷｯｻｱｵｿﾞﾗ(ｶ",
                "transferAmount": "1500",
                "newCode": "1",
                "ediInfo": "",
                "transferDesignatedType": "",
                "identification": ""
              ]
            ]
          ] as [String : Any]

          let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/request")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "POST"
          request.allHTTPHeaderFields = headers
          request.httpBody = postData as Data

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
      x-codegen-request-body-name: body
  /bulktransfer/cancel:
    post:
      tags:
      - bulk-transfer
      summary: 総合振込取消依頼
      description: |
        <p>総合振込の取消を行うための依頼をします</p>
        <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>取消対象ステータス</p>
          <p style='padding-left:20px;'>申請中以降のステータスで取消が可能です</p>
          <p style='padding-left:20px;'>依頼中、作成中の状態は取消対象外です</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>取消対象キー区分</p>
          <p style='padding-left:20px;'>取消対象の取引の内容について指定して下さい</p>
          <p style='padding-left:20px;'>取消対象キー区分と、取消対象の振込申請番号の状態がマッチしない場合は、「400 Bad Request」を返却します</p>
          <p style='padding-left:20px;'>総合振込の対象は3または4のみとなります</p>
          <p style='padding-left:20px;'>1、2は指定不可となります</p>
          <p style='padding-left:20px;'>・ビジネスID管理未利用の場合は、4を指定してください。その他は指定不可となります</p>
          <p style='padding-left:20px;'>・ビジネスID管理利用中かつ、申請者による申請中ステータスの「取下」を行いたい場合は、3を指定してください</p>
          <p style='padding-left:20px;'>・ビジネスID管理利用中かつ、承認可能者による予約中ステータスの「承認取消」を行いたい場合は、4を指定してください</p>
        </div>
        <div style='margin:10px;'>
          <p style='font-weight:bold; color:#616161;'>重複した依頼</p>
          <p style='padding-left:20px;'>同一の受付番号（振込申請番号）への重複した依頼はできません</p>
          <p style='padding-left:20px;'>なお、前回の総合振込取消依頼が期限切れとなれば依頼は可能となります</p>
        </div>
      operationId: bulkTransferCancelUsingPOST
      parameters:
      - name: x-access-token
        in: header
        description: |
          アクセストークン

          minLength: 1
          maxLength: 128
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-exportParamName: XAccessToken
        x-exportParamName: XAccessToken
      requestBody:
        description: HTTPリクエストボディ
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/TransferCancelRequest'
        required: true
        x-exportParamName: Body
      responses:
        "201":
          description: Created
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TransferCancelResponse'
            application/json:
              example:
                accountId: "101011234567"
                cancelTargetKeyClass: "4"
                resultCode: "1"
                applyNo: "2018072902345678"
                applyEndDatetime: 2018-07-29T10:00:00+09:00
        "400":
          description: Bad Request
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not found
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Method Not Allowed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "406":
          description: Not Acceptable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "411":
          description: Length Required
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "412":
          description: Precondition Failed
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "415":
          description: Unsupported media type
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "504":
          description: Gateway Timeout
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-code-samples:
      - lang: cURL
        source: |
          curl -X POST \
            https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel \
            -H 'Accept: application/json;charset=UTF-8' \
            -H 'Content-Type: application/json' \
            -H 'x-access-token: your access token' \
            -d '{
            "accountId": "101011234567",
            "cancelTargetKeyClass": "4",
            "applyNo": "2018072902345678"
          }'
      - lang: Ruby
        source: |
          require 'uri'
          require 'net/http'

          url = URI("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Accept"] = 'application/json;charset=UTF-8'
          request["Content-Type"] = 'application/json'
          request["x-access-token"] = 'your access token'
          request.body = "{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"4\",\n  \"applyNo\": \"2018072902345678\"\n}"

          response = http.request(request)
          puts response.read_body
      - lang: Python
        source: |
          import http.client

          conn = http.client.HTTPConnection("api,gmo-aozora,com")

          payload = "{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"4\",\n  \"applyNo\": \"2018072902345678\"\n}"

          headers = {
              'Accept': "application/json;charset=UTF-8",
              'Content-Type': "application/json",
              'x-access-token': "your access token"
              }

          conn.request("POST", "ganb/api/simulator/corporation/v1/bulktransfer/cancel", payload, headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
      - lang: PHP
        source: |
          <?php

          $curl = curl_init();

          curl_setopt_array($curl, array(
            CURLOPT_URL => "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"4\",\n  \"applyNo\": \"2018072902345678\"\n}",
            CURLOPT_HTTPHEADER => array(
              "Accept: application/json;charset=UTF-8",
              "Content-Type: application/json",
              "x-access-token: your access token"
            ),
          ));

          $response = curl_exec($curl);
          $err = curl_error($curl);

          curl_close($curl);

          if ($err) {
            echo "cURL Error #:" . $err;
          } else {
            echo $response;
          }
      - lang: Java
        source: |
          OkHttpClient client = new OkHttpClient();

          MediaType mediaType = MediaType.parse("application/json");
          RequestBody body = RequestBody.create(mediaType, "{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"4\",\n  \"applyNo\": \"2018072902345678\"\n}");
          Request request = new Request.Builder()
            .url("https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel")
            .post(body)
            .addHeader("Accept", "application/json;charset=UTF-8")
            .addHeader("Content-Type", "application/json")
            .addHeader("x-access-token", "your access token")
            .build();

          Response response = client.newCall(request).execute();
      - lang: Node
        source: "var request = require(\"request\");\n\nvar options = { method: 'POST',\n\
          \  url: 'https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel',\n\
          \  headers: \n   { 'x-access-token': 'your access token',\n     'Content-Type':\
          \ 'application/json',\n     Accept: 'application/json;charset=UTF-8' },\n\
          \  body: \n   { accountId: '101011234567',\n     cancelTargetKeyClass: '4',\n\
          \     applyNo: '2018072902345678' },\n  json: true };\n\nrequest(options,\
          \ function (error, response, body) {\n  if (error) throw new Error(error);\n\
          \n  console.log(body);\n});\n"
      - lang: Go
        source: |
          package main

          import (
           "fmt"
           "strings"
           "net/http"
           "io/ioutil"
          )

          func main() {

           url := "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel"

           payload := strings.NewReader("{\n  \"accountId\": \"101011234567\",\n  \"cancelTargetKeyClass\": \"4\",\n  \"applyNo\": \"2018072902345678\"\n}")

           req, _ := http.NewRequest("POST", url, payload)

           req.Header.Add("Accept", "application/json;charset=UTF-8")
           req.Header.Add("Content-Type", "application/json")
           req.Header.Add("x-access-token", "your access token")

           res, _ := http.DefaultClient.Do(req)

           defer res.Body.Close()
           body, _ := ioutil.ReadAll(res.Body)

           fmt.Println(res)
           fmt.Println(string(body))

          }
      - lang: Swift
        source: |-
          import Foundation

          let headers = [
            "Accept": "application/json;charset=UTF-8",
            "Content-Type": "application/json",
            "x-access-token": "your access token"
          ]
          let parameters = [
            "accountId": "101011234567",
            "cancelTargetKeyClass": "4",
            "applyNo": "2018072902345678"
          ] as [String : Any]

          let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

          let request = NSMutableURLRequest(url: NSURL(string: "https://api.gmo-aozora.com/ganb/api/simulator/corporation/v1/bulktransfer/cancel")! as URL,
                                                  cachePolicy: .useProtocolCachePolicy,
                                              timeoutInterval: 10.0)
          request.httpMethod = "POST"
          request.allHTTPHeaderFields = headers
          request.httpBody = postData as Data

          let session = URLSession.shared
          let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
            if (error != nil) {
              print(error)
            } else {
              let httpResponse = response as? HTTPURLResponse
              print(httpResponse)
            }
          })

          dataTask.resume()
      x-codegen-request-body-name: body
components:
  schemas:
    Account:
      title: Account
      required:
      - accountId
      - accountTypeCode
      - accountTypeName
      - currencyCode
      - currencyName
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        branchCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            支店コード
            半角数字
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: "101"
        branchName:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            支店名
            全角文字
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: 法人営業部
        accountTypeCode:
          maxLength: 2
          minLength: 2
          type: string
          description: |
            科目コード
            半角数字
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
            ・11=円定期預金
            ・51=外貨普通預金
            ・81=証券コネクト口座
          example: "01"
        accountTypeName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            科目名
            全角文字
            科目コードの名称
          example: 普通預金（有利息）
        accountNumber:
          maxLength: 7
          minLength: 7
          type: string
          description: |
            口座番号
            半角数字
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: "1234567"
        primaryAccountCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            代表口座コード
            半角数字
            ・1=代表口座
            ・2=追加口座
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: "1"
        primaryAccountCodeName:
          maxLength: 4
          minLength: 1
          type: string
          description: |
            代表口座コード名
            全角文字
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: 代表口座
        accountName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            口座名義
            全角文字
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: ＧＭＯあおぞら株式会社
        accountNameKana:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            口座名義カナ
            半角文字
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ
        currencyCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            通貨コード
            半角文字
            ISO4217に準拠した通貨コード
          example: JPY
        currencyName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            通貨名
            全角文字
            ISO4217に準拠した通貨コードの当行での名称
          example: 日本円
        transferLimitAmount:
          maxLength: 12
          minLength: 1
          type: string
          description: |
            振込限度額
            半角数字
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: "5000000"
      example:
        primaryAccountCodeName: 代表口座
        accountName: ＧＭＯあおぞら株式会社
        accountTypeCode: "01"
        branchName: 法人営業部
        accountTypeName: 普通預金（有利息）
        primaryAccountCode: "1"
        accountNumber: "1234567"
        transferLimitAmount: "5000000"
        branchCode: "101"
        accountId: "101011234567"
        currencyName: 日本円
        accountNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ
        currencyCode: JPY
    AccountsResponse:
      title: AccountsResponse
      required:
      - accounts
      - baseDate
      - baseTime
      type: object
      properties:
        baseDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            基準日
            半角文字
            一覧照会の基準日を示します
            YYYY-MM-DD形式
          example: 2018-08-10
        baseTime:
          maxLength: 14
          minLength: 14
          type: string
          description: |
            基準時刻
            半角文字
            一覧照会の基準時刻を示します
            HH:MM:SS+09:00形式
          example: 10:00:00+09:00
        accounts:
          type: array
          description: |
            口座情報リスト
          items:
            $ref: '#/components/schemas/Account'
      example:
        baseDate: 2018-08-10
        accounts:
        - primaryAccountCodeName: 代表口座
          accountName: ＧＭＯあおぞら株式会社
          accountTypeCode: "01"
          branchName: 法人営業部
          accountTypeName: 普通預金（有利息）
          primaryAccountCode: "1"
          accountNumber: "1234567"
          transferLimitAmount: "5000000"
          branchCode: "101"
          accountId: "101011234567"
          currencyName: 日本円
          accountNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ
          currencyCode: JPY
        - primaryAccountCodeName: 代表口座
          accountName: ＧＭＯあおぞら株式会社
          accountTypeCode: "01"
          branchName: 法人営業部
          accountTypeName: 普通預金（有利息）
          primaryAccountCode: "1"
          accountNumber: "1234567"
          transferLimitAmount: "5000000"
          branchCode: "101"
          accountId: "101011234567"
          currencyName: 日本円
          accountNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ
          currencyCode: JPY
        baseTime: 10:00:00+09:00
    Balance:
      title: Balance
      required:
      - accountId
      - accountTypeCode
      - accountTypeName
      - baseDate
      - baseTime
      - currencyCode
      - currencyName
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        accountTypeCode:
          maxLength: 2
          minLength: 2
          type: string
          description: |
            科目コード
            半角数字
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
            ・11=円定期預金
            ・51=外貨普通預金
            ・81=証券コネクト口座
          example: "01"
        accountTypeName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            科目名
            全角文字
            科目コードの名称
          example: 普通預金（有利息）
        balance:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            現在残高
            半角数字　マイナス含む
            基準日時における現在残高
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
            ・11=円定期預金
            ・81=証券コネクト口座
          example: "50000000"
        baseDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            基準日
            半角文字
            残高および引出可能額を照会した基準日を示します
            YYYY-MM-DD形式
          example: 2018-08-10
        baseTime:
          maxLength: 14
          minLength: 14
          type: string
          description: |
            基準時刻
            半角文字
            残高および引出可能額を照会した基準時刻を示します
            HH:MM:SS+09:00形式
          example: 10:00:00+09:00
        withdrawableAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            支払可能残高
            半角数字　マイナス含む
            応答時点での引出可能額を示します
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: "50000000"
        previousDayBalance:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            前日残高
            半角数字　マイナス含む
            日付が変わった直後は、銀行の締め処理が終わるまでは前々日の残高となります
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: "49500000"
        previousMonthBalance:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            前月末残高
            半角数字　マイナス含む
            月が変わった直後は、銀行の締め処理が終わるまでは前々月の残高となります
             科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: "45000000"
        currencyCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            通貨コード
            半角文字
            ISO4217に準拠した通貨コード
          example: JPY
        currencyName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            通貨名
            全角文字
            ISO4217に準拠した通貨コードの当行での名称
          example: 日本円
        fcyTotalBalance:
          maxLength: 20
          minLength: 3
          type: string
          description: |
            外貨残高
            半角数字　少数点および小数部最大3桁　マイナス含む
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・51=外貨普通預金
          example: "350.48"
        ttb:
          maxLength: 20
          minLength: 3
          type: string
          description: |
            外貨レート
            半角数字　少数点および小数部最大3桁　マイナス含む
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・51=外貨普通預金
          example: "110.5"
        baseRateDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            外貨レート基準日
            半角文字
            外貨レートの基準日を示します
            YYYY-MM-DD形式
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・51=外貨普通預金
          example: 2018-08-10
        baseRateTime:
          maxLength: 14
          minLength: 14
          type: string
          description: |
            外貨レート基準時刻
            半角文字
            外貨レートの基準時刻を示します
            HH:MM:SS+09:00形式
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・51=外貨普通預金
          example: 10:00:00+09:00
        yenEquivalent:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            外貨円換算額
            半角数字　マイナス含む
            外貨残高を円に換算した額
            科目コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・51=外貨普通預金
          example: "38728"
      example:
        baseDate: 2018-08-10
        ttb: "110.5"
        accountTypeCode: "01"
        accountTypeName: 普通預金（有利息）
        yenEquivalent: "38728"
        previousDayBalance: "49500000"
        previousMonthBalance: "45000000"
        withdrawableAmount: "50000000"
        accountId: "101011234567"
        baseRateTime: 10:00:00+09:00
        balance: "50000000"
        currencyName: 日本円
        baseRateDate: 2018-08-10
        fcyTotalBalance: "350.48"
        baseTime: 10:00:00+09:00
        currencyCode: JPY
    BalancesResponse:
      title: BalancesResponse
      type: object
      properties:
        balances:
          type: array
          description: |
            残高情報リスト
            該当する情報が無い場合は、空のリストを返却します
          items:
            $ref: '#/components/schemas/Balance'
      example:
        balances:
        - baseDate: 2018-08-10
          ttb: "110.5"
          accountTypeCode: "01"
          accountTypeName: 普通預金（有利息）
          yenEquivalent: "38728"
          previousDayBalance: "49500000"
          previousMonthBalance: "45000000"
          withdrawableAmount: "50000000"
          accountId: "101011234567"
          baseRateTime: 10:00:00+09:00
          balance: "50000000"
          currencyName: 日本円
          baseRateDate: 2018-08-10
          fcyTotalBalance: "350.48"
          baseTime: 10:00:00+09:00
          currencyCode: JPY
        - baseDate: 2018-08-10
          ttb: "110.5"
          accountTypeCode: "01"
          accountTypeName: 普通預金（有利息）
          yenEquivalent: "38728"
          previousDayBalance: "49500000"
          previousMonthBalance: "45000000"
          withdrawableAmount: "50000000"
          accountId: "101011234567"
          baseRateTime: 10:00:00+09:00
          balance: "50000000"
          currencyName: 日本円
          baseRateDate: 2018-08-10
          fcyTotalBalance: "350.48"
          baseTime: 10:00:00+09:00
          currencyCode: JPY
    BulkTransfer:
      title: BulkTransfer
      required:
      - accountNumber
      - accountTypeCode
      - beneficiaryBankCode
      - beneficiaryBranchCode
      - beneficiaryName
      - itemId
      - transferAmount
      type: object
      properties:
        itemId:
          maxLength: 6
          minLength: 1
          type: string
          description: |
            明細番号
            半角数字
            重複/0はエラー　1～9999とします
          example: "4"
        beneficiaryBankCode:
          maxLength: 4
          minLength: 4
          type: string
          description: |
            被仕向金融機関番号
            半角数字
          example: "0398"
        beneficiaryBankName:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            被仕向金融機関名カナ
            半角文字
            参考値、処理に利用しません
          example: ｱｵｿﾞﾗ
        beneficiaryBranchCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            被仕向支店番号
            半角数字
          example: "111"
        beneficiaryBranchName:
          maxLength: 15
          minLength: 1
          type: string
          description: |
            被仕向支店名カナ
            半角文字
            参考値、処理に利用しません
          example: ﾎﾝﾃﾝ
        clearingHouseName:
          maxLength: 4
          minLength: 4
          type: string
          description: |
            手形交換所番号
            半角文字
            入力する場合は、ALL０,ALLスペースであること
            参考値、処理に利用しません
          example: "0000"
        accountTypeCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            科目コード（預金種別コード）
            半角数字
            1：普通、2：当座、4：貯蓄、9：その他
          example: "1"
        accountNumber:
          maxLength: 7
          minLength: 7
          type: string
          description: |
            口座番号
            半角数字
            7桁未満の番号は右詰で、前ゼロで埋めること
          example: "1234567"
        beneficiaryName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            受取人名
            半角文字
            振込許容文字を指定可
            ただし、一部の非許容文字は、許容文字に変換を行います
            30文字目まで有効（31文字目以降は切り捨てます）
          example: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
        transferAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            振込金額
            半角数字
            1以上9,999,999,999円以下　数値のみでカンマ、マイナス不可
          example: "1000"
        newCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            新規コード
            半角文字
            入力する場合は、数値またはスペースであること
            参考値、処理に利用しません
          example: "1"
        ediInfo:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            EDI情報
            半角文字
            振込許容文字を指定可
          example: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
        transferDesignatedType:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込指定区分
            半角文字
            入力する場合は、7：電信のみ　またはスペースであること
            参考値、処理に利用しません（入力にかかわらず、すべて7：電信扱いとなります）
          example: "7"
        identification:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            識別表示
            半角文字
            本項目が「Y」であればEDI情報は振込先に通知、または省略/NULL/スペースであれば振込先には通知しません
          example: "Y"
    BulkTransferDetail:
      title: BulkTransferDetail
      type: object
      properties:
        transferStatus:
          maxLength: 3
          minLength: 1
          type: string
          description: |
            振込ステータス
            半角数字
            2:申請中、3:差戻、4:取下げ、5:期限切れ、8:承認取消/予約取消、
            11:予約中、12:手続中、13:リトライ中、
            20:手続済、30:不能・組戻あり、40:手続不成立
          example: "20"
        transferStatusName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            振込ステータス名
            全角文字
          example: 手続済
        transferTypeName:
          maxLength: 6
          minLength: 4
          type: string
          description: |
            種類
            全角文字
            総合振込　を表示
          example: 総合振込
        remitterCode:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            会社コード(振込依頼人コード)
            銀行側で番号を付与している場合のみ表示
            該当する情報が無い場合は項目自体を設定しません
          example: "1234567890"
        isFeeFreeUse:
          type: boolean
          description: |
            振込無料回数利用可否
            振込利用回数の利用可否（無料回数の利用可否の設定であり、実際の利用有無ではありません）
            総合振込では無料回数は利用できないため、常にfalse
          example: false
        isFeePointUse:
          type: boolean
          description: |
            ポイント利用可否
            ポイント会社の利用可否
          example: true
        pointName:
          maxLength: 32
          minLength: 1
          type: string
          description: |
            ポイント会社名
            全角文字
          example: GMOポイント
        feeLaterPaymentFlg:
          type: boolean
          description: |
            手数料後払区分
            「true=後払い」以外の場合は項目自体を設定しません
          example: true
        totalFee:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            合計手数料
            半角数字
            振り込み完了時以外は、予定の手数料
          example: "345"
        totalDebitAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            合計出金金額
            半角数字
            手数料+振込金額　ただし、振込完了時以外は、予定の手数料
          example: "123456"
        transferApplies:
          type: array
          description: |
            振込申請情報
            振込申請情報のリスト
          items:
            $ref: '#/components/schemas/TransferApply'
        transferAccepts:
          type: array
          description: |
            振込受付情報
            振込受付情報のリスト
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/TransferAccept'
        bulktransferResponses:
          type: array
          description: |
            総合振込レスポンス情報
            総合振込レスポンス情報のリスト
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/BulkTransferResponse'
      example:
        isFeeFreeUse: false
        remitterCode: "1234567890"
        transferApplies:
        - transferApplyDetails:
          - applyUser: 山田二郎
            approvalUser: 田中太郎
            approvalComment: 実施しました
            applyComment: 緊急でお願いします。
            applyDatetime: 2018-07-29T10:00:00+09:00
            applyStatus: "1"
          - applyUser: 山田二郎
            approvalUser: 田中太郎
            approvalComment: 実施しました
            applyComment: 緊急でお願いします。
            applyDatetime: 2018-07-29T10:00:00+09:00
            applyStatus: "1"
          applyNo: "2018072902345678"
        - transferApplyDetails:
          - applyUser: 山田二郎
            approvalUser: 田中太郎
            approvalComment: 実施しました
            applyComment: 緊急でお願いします。
            applyDatetime: 2018-07-29T10:00:00+09:00
            applyStatus: "1"
          - applyUser: 山田二郎
            approvalUser: 田中太郎
            approvalComment: 実施しました
            applyComment: 緊急でお願いします。
            applyDatetime: 2018-07-29T10:00:00+09:00
            applyStatus: "1"
          applyNo: "2018072902345678"
        transferStatus: "20"
        pointName: GMOポイント
        totalDebitAmount: "123456"
        transferStatusName: 手続済
        totalFee: "345"
        transferAccepts:
        - acceptNo: "2018072901234567"
          acceptDatetime: 2018-07-29T10:00:00+09:00
        - acceptNo: "2018072901234567"
          acceptDatetime: 2018-07-29T10:00:00+09:00
        bulktransferResponses:
        - accountId: "101011234567"
          totalAmount: "1234500"
          transferDesignatedDate: 2018-07-30
          bulkTransferInfos:
          - accountTypeCode: "1"
            transferAmount: "1000"
            accountNumber: "1234567"
            itemId: "4"
            transferDetailResponses:
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            identification: "Y"
            beneficiaryBankName: ｱｵｿﾞﾗ
            beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
            unableDetailInfos:
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            beneficiaryBankCode: "0398"
            ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
            beneficiaryBranchName: ﾎﾝﾃﾝ
            transferDesignatedType: "7"
            clearingHouseName: "0000"
            newCode: "1"
            beneficiaryBranchCode: "111"
          - accountTypeCode: "1"
            transferAmount: "1000"
            accountNumber: "1234567"
            itemId: "4"
            transferDetailResponses:
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            identification: "Y"
            beneficiaryBankName: ｱｵｿﾞﾗ
            beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
            unableDetailInfos:
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            beneficiaryBankCode: "0398"
            ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
            beneficiaryBranchName: ﾎﾝﾃﾝ
            transferDesignatedType: "7"
            clearingHouseName: "0000"
            newCode: "1"
            beneficiaryBranchCode: "111"
          remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
          totalCount: "5"
          transferDataName: ６月分請求
        - accountId: "101011234567"
          totalAmount: "1234500"
          transferDesignatedDate: 2018-07-30
          bulkTransferInfos:
          - accountTypeCode: "1"
            transferAmount: "1000"
            accountNumber: "1234567"
            itemId: "4"
            transferDetailResponses:
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            identification: "Y"
            beneficiaryBankName: ｱｵｿﾞﾗ
            beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
            unableDetailInfos:
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            beneficiaryBankCode: "0398"
            ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
            beneficiaryBranchName: ﾎﾝﾃﾝ
            transferDesignatedType: "7"
            clearingHouseName: "0000"
            newCode: "1"
            beneficiaryBranchCode: "111"
          - accountTypeCode: "1"
            transferAmount: "1000"
            accountNumber: "1234567"
            itemId: "4"
            transferDetailResponses:
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            identification: "Y"
            beneficiaryBankName: ｱｵｿﾞﾗ
            beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
            unableDetailInfos:
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            beneficiaryBankCode: "0398"
            ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
            beneficiaryBranchName: ﾎﾝﾃﾝ
            transferDesignatedType: "7"
            clearingHouseName: "0000"
            newCode: "1"
            beneficiaryBranchCode: "111"
          remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
          totalCount: "5"
          transferDataName: ６月分請求
        transferTypeName: 総合振込
        isFeePointUse: true
        feeLaterPaymentFlg: true
    BulkTransferInfo:
      title: BulkTransferInfo
      type: object
      properties:
        itemId:
          maxLength: 6
          minLength: 1
          type: string
          description: |
            明細番号
            半角数字
            重複/0はエラー　1～9999とします
          example: "4"
        beneficiaryBankCode:
          maxLength: 4
          minLength: 4
          type: string
          description: |
            被仕向金融機関番号
            半角数字
          example: "0398"
        beneficiaryBankName:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            被仕向金融機関名カナ
            半角文字
            該当する情報が無い場合は項目自体を設定しません
          example: ｱｵｿﾞﾗ
        beneficiaryBranchCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            被仕向支店番号
            半角数字
          example: "111"
        beneficiaryBranchName:
          maxLength: 15
          minLength: 1
          type: string
          description: |
            被仕向支店名カナ
            半角文字
            該当する情報が無い場合は項目自体を設定しません
          example: ﾎﾝﾃﾝ
        clearingHouseName:
          maxLength: 4
          minLength: 4
          type: string
          description: |
            手形交換所番号
            半角文字
            該当する情報が無い場合は項目自体を設定しません
          example: "0000"
        accountTypeCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            科目コード（預金種別コード）
            半角数字
            1：普通、2：当座、4：貯蓄、9：その他
          example: "1"
        accountNumber:
          maxLength: 7
          minLength: 7
          type: string
          description: |
            口座番号
            半角数字
            7桁未満の番号は右詰で、前ゼロで埋めること
          example: "1234567"
        beneficiaryName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            受取人名
            半角文字
            該当する情報が無い場合は項目自体を設定しません
          example: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
        transferAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            振込金額
            半角数字
            1以上9,999,999,999円以下　数値のみでカンマ、マイナス不可
          example: "1000"
        newCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            新規コード
            半角文字
            該当する情報が無い場合は項目自体を設定しません
          example: "1"
        ediInfo:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            EDI情報
            半角文字
            該当する情報が無い場合は項目自体を設定しません
          example: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
        transferDesignatedType:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込指定区分
            半角文字
            該当する情報が無い場合は項目自体を設定しません
          example: "7"
        identification:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            識別表示
            半角文字
            該当する情報が無い場合は項目自体を設定しません
          example: "Y"
        transferDetailResponses:
          type: array
          description: |
            振込明細結果
            振込明細結果のリスト
            正常時のみ応答
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/TransferDetailResponse'
        unableDetailInfos:
          type: array
          description: |
            不能明細情報
            不能明細情報のリスト
            該当する情報が無い場合は項目自体を設定しません
          items:
            $ref: '#/components/schemas/UnableDetailInfo'
      example:
        accountTypeCode: "1"
        transferAmount: "1000"
        accountNumber: "1234567"
        itemId: "4"
        transferDetailResponses:
        - usedPoint: "1000"
          isFeeFreeUsed: false
          transferFee: "1000"
          beneficiaryBranchNameKanji: 本店
          beneficiaryBankNameKanji: あおぞら銀行
        - usedPoint: "1000"
          isFeeFreeUsed: false
          transferFee: "1000"
          beneficiaryBranchNameKanji: 本店
          beneficiaryBankNameKanji: あおぞら銀行
        identification: "Y"
        beneficiaryBankName: ｱｵｿﾞﾗ
        beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
        unableDetailInfos:
        - isRepayment: true
          repaymentDate: 2018-07-30
          refundStatus: "1"
          transferDetailStatus: "1"
        - isRepayment: true
          repaymentDate: 2018-07-30
          refundStatus: "1"
          transferDetailStatus: "1"
        beneficiaryBankCode: "0398"
        ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
        beneficiaryBranchName: ﾎﾝﾃﾝ
        transferDesignatedType: "7"
        clearingHouseName: "0000"
        newCode: "1"
        beneficiaryBranchCode: "111"
    BulkTransferRequest:
      title: BulkTransferRequest
      required:
      - accountId
      - bulkTransfers
      - totalAmount
      - totalCount
      - transferDesignatedDate
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        remitterName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            振込依頼人名
            半角文字
            指定しない場合は口座名義がデフォルト値となります
            振込許容文字を指定可
            ただし、一部の非許容文字は、許容文字に変換を行います
            40文字目まで有効（41文字目以降は切り捨てます）
          example: ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ
        transferDesignatedDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            振込指定日
            半角文字
            YYYY-MM-DD形式
            振込対象の指定日
            ただし、振込指定日が非営業日で、非営業日に実施できない振込（他行宛振込み）が振込情報に1件以上存在する場合、以下のとおりとなります
            ・「振込指定日休日コード」が1または省略の場合、振込指定日の翌営業日を振込対象の指定日となります
            ・「振込指定日休日コード」が2の場合、振込指定日の前営業日を振込対象の指定日となります
            ・「振込指定日休日コード」が3の場合、エラーとなり「400 Bad Request」を返却します
          example: 2018-07-30
        transferDateHolidayCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込指定日休日コード
            半角数字
            1：翌営業日、2：前営業日、3：エラー返却
            省略可（省略した場合は1とみなします）
          example: "1"
        transferDataName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            振込データ名
            全半角文字
            作成した総合振込のデータを区別するためのメモ
          example: 8月定例振込データ
        totalCount:
          maxLength: 6
          minLength: 1
          type: string
          description: |
            合計件数
            半角数字
            1以上9,999件まで指定可能（0はエラー）
          example: "5"
        totalAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            合計金額
            半角数字
            1以上999,999,999,999円以下　数値のみで0、カンマ、マイナス不可
          example: "1234500"
        applyComment:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            振込申請メモ（申請コメント）
            全半角文字
            ビジネスID管理申し込みかつ、申請になるユーザーの場合のみ有効
            それ以外は値を設定しても銀行で読み捨て
            該当する情報が無い場合は省略可（項目自体の設定が不要です）
          example: 緊急で承認をお願いします
        bulkTransfers:
          type: array
          description: |-
            総合振込明細情報
            総合振込明細のリスト
          items:
            $ref: '#/components/schemas/BulkTransfer'
      example:
        accountId: "101011234567"
        remitterName: ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ
        transferDesignatedDate: 2018-07-30
        transferDateHolidayCode: "1"
        transferDataName: 8月定例振込データ
        totalCount: "3"
        totalAmount: "3000"
        applyComment: 緊急で承認をお願いします
        bulkTransfers:
        - itemId: "1"
          beneficiaryBankCode: "0398"
          beneficiaryBankName: ｱｵｿﾞﾗ
          beneficiaryBranchCode: "111"
          beneficiaryBranchName: ﾎﾝﾃﾝ
          clearingHouseName: "0000"
          accountTypeCode: "1"
          accountNumber: "1234567"
          beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
          transferAmount: "1000"
          newCode: "1"
          ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
          transferDesignatedType: "7"
          identification: "Y"
        - itemId: "2"
          beneficiaryBankCode: "0310"
          beneficiaryBankName: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ
          beneficiaryBranchCode: "301"
          beneficiaryBranchName: ｳﾐ
          clearingHouseName: ""
          accountTypeCode: "1"
          accountNumber: "2345678"
          beneficiaryName: ｱｵｿﾞﾗ ﾃｽﾄ
          transferAmount: "500"
          newCode: "1"
          ediInfo: ""
          transferDesignatedType: ""
          identification: ""
        - itemId: "3"
          beneficiaryBankCode: "0310"
          beneficiaryBankName: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ
          beneficiaryBranchCode: "101"
          beneficiaryBranchName: ﾎｳｼﾞﾝ
          clearingHouseName: ""
          accountTypeCode: "1"
          accountNumber: "3456789"
          beneficiaryName: ｷｯｻｱｵｿﾞﾗ(ｶ
          transferAmount: "1500"
          newCode: "1"
          ediInfo: ""
          transferDesignatedType: ""
          identification: ""
    BulkTransferResponse:
      title: BulkTransferResponse
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        remitterName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            振込依頼人名
            半角文字
          example: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
        transferDesignatedDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            振込指定日
            半角文字
            YYYY-MM-DD形式
          example: 2018-07-30
        transferDataName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            振込データ名
            全半角文字
            作成した総合振込のデータを区別するためのメモ
          example: ６月分請求
        totalCount:
          maxLength: 6
          minLength: 1
          type: string
          description: |
            合計件数
            半角数字
          example: "5"
        totalAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            合計金額
            半角数字
          example: "1234500"
        bulkTransferInfos:
          type: array
          description: |
            総合振込明細情報
            総合振込明細のリスト
            明細情報取得フラグが「True：取得する」、かつ明細情報取得結果フラグが「True：取得可」のときのみ設定します
            それ以外は項目自体を設定しません
          items:
            $ref: '#/components/schemas/BulkTransferInfo'
      example:
        accountId: "101011234567"
        totalAmount: "1234500"
        transferDesignatedDate: 2018-07-30
        bulkTransferInfos:
        - accountTypeCode: "1"
          transferAmount: "1000"
          accountNumber: "1234567"
          itemId: "4"
          transferDetailResponses:
          - usedPoint: "1000"
            isFeeFreeUsed: false
            transferFee: "1000"
            beneficiaryBranchNameKanji: 本店
            beneficiaryBankNameKanji: あおぞら銀行
          - usedPoint: "1000"
            isFeeFreeUsed: false
            transferFee: "1000"
            beneficiaryBranchNameKanji: 本店
            beneficiaryBankNameKanji: あおぞら銀行
          identification: "Y"
          beneficiaryBankName: ｱｵｿﾞﾗ
          beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
          unableDetailInfos:
          - isRepayment: true
            repaymentDate: 2018-07-30
            refundStatus: "1"
            transferDetailStatus: "1"
          - isRepayment: true
            repaymentDate: 2018-07-30
            refundStatus: "1"
            transferDetailStatus: "1"
          beneficiaryBankCode: "0398"
          ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
          beneficiaryBranchName: ﾎﾝﾃﾝ
          transferDesignatedType: "7"
          clearingHouseName: "0000"
          newCode: "1"
          beneficiaryBranchCode: "111"
        - accountTypeCode: "1"
          transferAmount: "1000"
          accountNumber: "1234567"
          itemId: "4"
          transferDetailResponses:
          - usedPoint: "1000"
            isFeeFreeUsed: false
            transferFee: "1000"
            beneficiaryBranchNameKanji: 本店
            beneficiaryBankNameKanji: あおぞら銀行
          - usedPoint: "1000"
            isFeeFreeUsed: false
            transferFee: "1000"
            beneficiaryBranchNameKanji: 本店
            beneficiaryBankNameKanji: あおぞら銀行
          identification: "Y"
          beneficiaryBankName: ｱｵｿﾞﾗ
          beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
          unableDetailInfos:
          - isRepayment: true
            repaymentDate: 2018-07-30
            refundStatus: "1"
            transferDetailStatus: "1"
          - isRepayment: true
            repaymentDate: 2018-07-30
            refundStatus: "1"
            transferDetailStatus: "1"
          beneficiaryBankCode: "0398"
          ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
          beneficiaryBranchName: ﾎﾝﾃﾝ
          transferDesignatedType: "7"
          clearingHouseName: "0000"
          newCode: "1"
          beneficiaryBranchCode: "111"
        remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
        totalCount: "5"
        transferDataName: ６月分請求
    BulkTransferRequestResponse:
      title: BulkTransferRequestResponse
      required:
      - accountId
      - applyNo
      - resultCode
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        resultCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            結果コード
            半角数字
            1:完了　2：未完了
          example: "1"
        applyNo:
          maxLength: 16
          minLength: 16
          type: string
          description: |
            受付番号（振込申請番号）
            半角数字
            すべての振込・総合振込で採番される、照会の基本単位となる番号
          example: "2018072902345678"
        applyEndDatetime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            振込依頼完了日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
            結果コードが、1:完了のときのみセット
            それ以外は項目自体を設定しません
          example: 2018-07-29T10:00:00+09:00
      example:
        accountId: "101011234567"
        applyEndDatetime: 2018-07-29T10:00:00+09:00
        applyNo: "2018072902345678"
        resultCode: "1"
    BulkTransferStatusResponse:
      title: BulkTransferStatusResponse
      required:
      - acceptanceKeyClass
      - baseDate
      - baseTime
      - count
      type: object
      properties:
        acceptanceKeyClass:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            照会対象キー区分
            半角数字
            リクエストしたときと同じ内容
            照会対象のキー
            1：振込申請照会対象指定、2：振込一括照会対象指定
          example: "1"
        detailInfoNecessity:
          type: boolean
          description: |
            明細情報取得フラグ
            総合振込明細情報の取得要否
            リクエストしたときと同じ内容
            該当する情報が無い場合は項目自体を設定しません
          example: true
        bulktransferItemKey:
          maxLength: 6
          minLength: 1
          type: string
          description: |
            総合振込明細情報取得対象キー
            半角数字
            リクエストしたときと同じ内容
            該当する情報が無い場合は項目自体を設定しません
          example: "501"
        baseDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            基準日
            半角文字
            総合振込照会明細情報を照会した基準日を示します
            YYYY-MM-DD形式
          example: 2018-08-10
        baseTime:
          maxLength: 14
          minLength: 14
          type: string
          description: |
            基準時刻
            半角文字
            総合振込照会明細情報を照会した基準時刻を示します
            HH:MM:SS+09:00形式
          example: 10:00:00+09:00
        count:
          maxLength: 7
          minLength: 1
          type: string
          description: |
            明細取得件数
            半角数字
            振込明細の件数
          example: "500"
        detailInfoResult:
          type: boolean
          description: |
            明細情報取得結果フラグ
            総合振込明細情報の取得結果
            True：取得可、False:取得不可
            明細情報取得フラグが「True：取得する」のときに、明細情報が取得できたかを設定します
            総合振込の依頼完了直後は「False:取得不可」となります
            総合振込の依頼完了後１０分程度すると「True：取得可」となります
            「False:取得不可」の場合、総合振込明細情報は項目自体が設定されません
            明細情報取得フラグが「True：取得する」の場合以外は項目自体を設定しません
          example: true
        transferQueryBulkResponses:
          type: array
          description: |
            振込一括照会対象指定レスポンス
            該当する情報が無い場合は項目自体を設定しません
          items:
            $ref: '#/components/schemas/TransferQueryBulkResponse'
        bulkTransferDetails:
          type: array
          description: |
            総合振込照会明細情報
            振込照会明細情報のリスト
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/BulkTransferDetail'
      example:
        baseDate: 2018-08-10
        detailInfoResult: true
        detailInfoNecessity: true
        transferQueryBulkResponses:
        - requestTransferStatuses:
          - requestTransferStatus: "20"
          - requestTransferStatus: "20"
          dateTo: 2018-08-10
          requestNextItemKey: "1234567890"
          requestTransferClass: "1"
          requestTransferTerm: "1"
          hasNext: true
          dateFrom: 2018-07-30
          nextItemKey: "1234567890"
        - requestTransferStatuses:
          - requestTransferStatus: "20"
          - requestTransferStatus: "20"
          dateTo: 2018-08-10
          requestNextItemKey: "1234567890"
          requestTransferClass: "1"
          requestTransferTerm: "1"
          hasNext: true
          dateFrom: 2018-07-30
          nextItemKey: "1234567890"
        count: "500"
        baseTime: 10:00:00+09:00
        acceptanceKeyClass: "1"
        bulktransferItemKey: "501"
        bulkTransferDetails:
        - isFeeFreeUse: false
          remitterCode: "1234567890"
          transferApplies:
          - transferApplyDetails:
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            applyNo: "2018072902345678"
          - transferApplyDetails:
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            applyNo: "2018072902345678"
          transferStatus: "20"
          pointName: GMOポイント
          totalDebitAmount: "123456"
          transferStatusName: 手続済
          totalFee: "345"
          transferAccepts:
          - acceptNo: "2018072901234567"
            acceptDatetime: 2018-07-29T10:00:00+09:00
          - acceptNo: "2018072901234567"
            acceptDatetime: 2018-07-29T10:00:00+09:00
          bulktransferResponses:
          - accountId: "101011234567"
            totalAmount: "1234500"
            transferDesignatedDate: 2018-07-30
            bulkTransferInfos:
            - accountTypeCode: "1"
              transferAmount: "1000"
              accountNumber: "1234567"
              itemId: "4"
              transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              identification: "Y"
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              beneficiaryBranchName: ﾎﾝﾃﾝ
              transferDesignatedType: "7"
              clearingHouseName: "0000"
              newCode: "1"
              beneficiaryBranchCode: "111"
            - accountTypeCode: "1"
              transferAmount: "1000"
              accountNumber: "1234567"
              itemId: "4"
              transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              identification: "Y"
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              beneficiaryBranchName: ﾎﾝﾃﾝ
              transferDesignatedType: "7"
              clearingHouseName: "0000"
              newCode: "1"
              beneficiaryBranchCode: "111"
            remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
            totalCount: "5"
            transferDataName: ６月分請求
          - accountId: "101011234567"
            totalAmount: "1234500"
            transferDesignatedDate: 2018-07-30
            bulkTransferInfos:
            - accountTypeCode: "1"
              transferAmount: "1000"
              accountNumber: "1234567"
              itemId: "4"
              transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              identification: "Y"
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              beneficiaryBranchName: ﾎﾝﾃﾝ
              transferDesignatedType: "7"
              clearingHouseName: "0000"
              newCode: "1"
              beneficiaryBranchCode: "111"
            - accountTypeCode: "1"
              transferAmount: "1000"
              accountNumber: "1234567"
              itemId: "4"
              transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              identification: "Y"
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              beneficiaryBranchName: ﾎﾝﾃﾝ
              transferDesignatedType: "7"
              clearingHouseName: "0000"
              newCode: "1"
              beneficiaryBranchCode: "111"
            remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
            totalCount: "5"
            transferDataName: ６月分請求
          transferTypeName: 総合振込
          isFeePointUse: true
          feeLaterPaymentFlg: true
        - isFeeFreeUse: false
          remitterCode: "1234567890"
          transferApplies:
          - transferApplyDetails:
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            applyNo: "2018072902345678"
          - transferApplyDetails:
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            applyNo: "2018072902345678"
          transferStatus: "20"
          pointName: GMOポイント
          totalDebitAmount: "123456"
          transferStatusName: 手続済
          totalFee: "345"
          transferAccepts:
          - acceptNo: "2018072901234567"
            acceptDatetime: 2018-07-29T10:00:00+09:00
          - acceptNo: "2018072901234567"
            acceptDatetime: 2018-07-29T10:00:00+09:00
          bulktransferResponses:
          - accountId: "101011234567"
            totalAmount: "1234500"
            transferDesignatedDate: 2018-07-30
            bulkTransferInfos:
            - accountTypeCode: "1"
              transferAmount: "1000"
              accountNumber: "1234567"
              itemId: "4"
              transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              identification: "Y"
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              beneficiaryBranchName: ﾎﾝﾃﾝ
              transferDesignatedType: "7"
              clearingHouseName: "0000"
              newCode: "1"
              beneficiaryBranchCode: "111"
            - accountTypeCode: "1"
              transferAmount: "1000"
              accountNumber: "1234567"
              itemId: "4"
              transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              identification: "Y"
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              beneficiaryBranchName: ﾎﾝﾃﾝ
              transferDesignatedType: "7"
              clearingHouseName: "0000"
              newCode: "1"
              beneficiaryBranchCode: "111"
            remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
            totalCount: "5"
            transferDataName: ６月分請求
          - accountId: "101011234567"
            totalAmount: "1234500"
            transferDesignatedDate: 2018-07-30
            bulkTransferInfos:
            - accountTypeCode: "1"
              transferAmount: "1000"
              accountNumber: "1234567"
              itemId: "4"
              transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              identification: "Y"
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              beneficiaryBranchName: ﾎﾝﾃﾝ
              transferDesignatedType: "7"
              clearingHouseName: "0000"
              newCode: "1"
              beneficiaryBranchCode: "111"
            - accountTypeCode: "1"
              transferAmount: "1000"
              accountNumber: "1234567"
              itemId: "4"
              transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              identification: "Y"
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞﾖｳ
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              beneficiaryBranchName: ﾎﾝﾃﾝ
              transferDesignatedType: "7"
              clearingHouseName: "0000"
              newCode: "1"
              beneficiaryBranchCode: "111"
            remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
            totalCount: "5"
            transferDataName: ６月分請求
          transferTypeName: 総合振込
          isFeePointUse: true
          feeLaterPaymentFlg: true
    DepositTransactionsResponse:
      title: DepositTransactionsResponse
      required:
      - accountId
      - baseDate
      - baseTime
      - count
      - dateFrom
      - dateTo
      - hasNext
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        dateFrom:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            対象期間From
            半角文字
            YYYY-MM-DD形式
            リクエストに対象期間From、Toが設定されていない場合当日日付が設定されます
          example: 2018-07-30
        dateTo:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            対象期間To
            半角文字
            YYYY-MM-DD形式
            リクエストに対象期間From、Toが設定されていない場合当日日付が設定されます
          example: 2018-08-10
        baseDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            基準日
            半角文字
            YYYY-MM-DD形式
            振込入金明細を照会した基準日を示します
          example: 2018-08-10
        baseTime:
          maxLength: 14
          minLength: 14
          type: string
          description: |
            基準時刻
            HH:MM:SS+09:00形式
            振込入金明細を照会した基準時刻を示します
          example: 10:00:00+09:00
        hasNext:
          type: boolean
          description: |
            次明細フラグ
            ・true=次明細あり
            ・false=次明細なし
          example: true
        nextItemKey:
          maxLength: 24
          minLength: 1
          type: string
          description: |
            次明細キー
            半角数字
            次明細フラグがfalseの場合は項目自体を設定しません
          example: "20181012090520113000"
        count:
          maxLength: 7
          minLength: 1
          type: string
          description: |
            明細取得件数
            半角数字
          example: "500"
        paymentArrivals:
          type: array
          description: |
            振込入金明細情報
            該当する情報が無い場合は、空のリストを返却します
          items:
            $ref: '#/components/schemas/PaymentArrival'
      example:
        accountId: "101011234567"
        baseDate: 2018-08-10
        dateTo: 2018-08-10
        count: "500"
        hasNext: true
        dateFrom: 2018-07-30
        nextItemKey: "20181012090520113000"
        baseTime: 10:00:00+09:00
        paymentArrivals:
        - transactionType: "1"
          paymentBankName: ｱｵｿﾞﾗｷﾞﾝｺｳ
          amount: "50000"
          valueDate: 2018-07-30
          applicantName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
          paymentBranchName: ﾎﾝﾃﾝ
          transactionDate: 2018-07-30
          ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123
          remarks: 振込 ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123 アオゾラショウジ（カ
          itemKey: "20181012090520113000"
        - transactionType: "1"
          paymentBankName: ｱｵｿﾞﾗｷﾞﾝｺｳ
          amount: "50000"
          valueDate: 2018-07-30
          applicantName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
          paymentBranchName: ﾎﾝﾃﾝ
          transactionDate: 2018-07-30
          ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123
          remarks: 振込 ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123 アオゾラショウジ（カ
          itemKey: "20181012090520113000"
    ErrorDetail:
      title: ErrorDetail
      type: object
      properties:
        errorDetailsCode:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            エラー詳細コード
            半角英数文字
            エラーの詳細コード内容
          example: "0023456"
        errorDetailsMessage:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            エラー詳細内容
            全半角英数記号文字
            エラー詳細コードに紐付くメッセージ
          example: 金融機関情報エラー
    ErrorResponse:
      title: ErrorResponse
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            エラーコード
            半角英数文字
          example: ERROR12345
        errorMessage:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            エラーメッセージ
            全半角英数記号文字
          example: エラーメッセージ
    PaymentArrival:
      title: PaymentArrival
      required:
      - amount
      - itemKey
      - transactionDate
      - transactionType
      - valueDate
      type: object
      properties:
        transactionDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            取引日
            半角文字
            YYYY-MM-DD形式
          example: 2018-07-30
        valueDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            起算日
            半角文字
            YYYY-MM-DD形式
          example: 2018-07-30
        transactionType:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            入払コード
            半角数字
            ・1=入金
            ・2=出金
            常に1=入金のみ
          example: "1"
        remarks:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            摘要内容
            全半角文字
            該当データがない場合は項目自体を設定しません
          example: 振込 ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123 アオゾラショウジ（カ
        amount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            取引金額
            半角数字　マイナス含む
          example: "50000"
        applicantName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            依頼人名
            半角文字
            該当データがない場合は項目自体を設定しません
          example: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
        paymentBankName:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            仕向金融機関名カナ
            半角文字
          example: ｱｵｿﾞﾗｷﾞﾝｺｳ
        paymentBranchName:
          maxLength: 15
          minLength: 1
          type: string
          description: |
            仕向支店名カナ
            半角文字
          example: ﾎﾝﾃﾝ
        ediInfo:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            EDI情報
            半角文字
            該当データがない場合は項目自体を設定しません
          example: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123
        itemKey:
          maxLength: 24
          minLength: 1
          type: string
          description: |
            明細キー
            半角数字
            口座ID毎に設定される明細キー（明細データtimestamp（μs））
          example: "20181012090520113000"
      example:
        transactionType: "1"
        paymentBankName: ｱｵｿﾞﾗｷﾞﾝｺｳ
        amount: "50000"
        valueDate: 2018-07-30
        applicantName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
        paymentBranchName: ﾎﾝﾃﾝ
        transactionDate: 2018-07-30
        ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123
        remarks: 振込 ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ123 アオゾラショウジ（カ
        itemKey: "20181012090520113000"
    RequestTransferStatus:
      title: RequestTransferStatus
      type: object
      properties:
        requestTransferStatus:
          maxLength: 3
          minLength: 1
          type: string
          description: |
            照会対象ステータス
            半角数字
            2:申請中、3:差戻、4:取下げ、5:期限切れ、8:承認取消/予約取消、
            11:予約中、12:手続中、13:リトライ中、
            20:手続済、22:資金返却、24:組戻手続中、25:組戻済、26:組戻不成立、
            30:不能・組戻あり、
            40:手続不成立
            配列のため、複数設定した場合は対象のステータスをOR条件で検索します
            省略した場合は全てを設定したものとみなします
            22、24、25、26は振込状況照会でのみ指定可
            30は総合振込状況照会でのみ指定可
            レスポンスの場合はリクエストしたときと同じ内容となります
          example: "20"
      example:
        requestTransferStatus: "20"
    Transaction:
      title: Transaction
      required:
      - amount
      - balance
      - transactionDate
      - transactionType
      - valueDate
      type: object
      properties:
        transactionDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            取引日
            半角文字
            YYYY-MM-DD形式
          example: 2018-07-30
        valueDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            起算日
            半角文字
            YYYY-MM-DD形式
          example: 2018-07-30
        transactionType:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            入払コード
            半角数字
            ・1=入金
            ・2=出金
          example: "2"
        amount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            取引金額
            半角数字　マイナス含む
          example: "50000"
        remarks:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            摘要内容
            全半角文字
            該当データがない場合は項目自体を設定しません
          example: 振込 アオゾラ タロウ
        balance:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            取引後残高
            半角数字　マイナス含む
          example: "1200000"
        itemKey:
          maxLength: 24
          minLength: 1
          type: string
          description: |-
            明細キー
            半角数字
            口座の科目が01=普通預金（有利息）または02=普通預金（決済用）の場合は口座ID毎に設定される明細キー（明細データtimestamp（μs））
            該当データがない場合は項目自体を設定しません
          example: "20181012090520112541"
      example:
        transactionType: "2"
        amount: "50000"
        balance: "1200000"
        valueDate: 2018-07-30
        transactionDate: 2018-07-30
        remarks: 振込 アオゾラ タロウ
        itemKey: "20181012090520112541"
    TransactionsResponse:
      title: TransactionsResponse
      required:
      - accountId
      - baseDate
      - baseTime
      - count
      - currencyCode
      - currencyName
      - dateFrom
      - dateTo
      - hasNext
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        currencyCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            通貨コード
            半角文字
            ISO4217に準拠した通貨コード
          example: JPY
        currencyName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            通貨名
            全角文字
            ISO4217に準拠した通貨コードの当行での名称
          example: 日本円
        dateFrom:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            対象期間From
            半角文字
            YYYY-MM-DD形式
            リクエストに対象期間From、Toが設定されていない場合は当日日付が設定されます
          example: 2018-07-30
        dateTo:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            対象期間To
            半角文字
            YYYY-MM-DD形式
            リクエストに対象期間From、Toが設定されていない場合は当日日付が設定されます
          example: 2018-08-10
        baseDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            基準日
            入出金明細を照会した基準日を示します
            YYYY-MM-DD形式
          example: 2018-08-10
        baseTime:
          maxLength: 14
          minLength: 14
          type: string
          description: |
            基準時刻
            入出金明細を照会した基準時刻を示します
            HH:MM:SS+09:00形式
          example: 10:00:00+09:00
        hasNext:
          type: boolean
          description: |
            次明細フラグ
            ・true=次明細あり
            ・false=次明細なし
          example: true
        nextItemKey:
          maxLength: 24
          minLength: 1
          type: string
          description: |
            次明細キー
            半角数字
            次明細フラグがfalseの場合は、項目自体を設定しません
          example: "20181012090520112541"
        count:
          maxLength: 7
          minLength: 1
          type: string
          description: |
            明細取得件数
            半角数字
          example: "500"
        transactions:
          type: array
          description: |
            入出金明細情報リスト
            該当する情報が無い場合は、空のリストを返却します
          items:
            $ref: '#/components/schemas/Transaction'
      example:
        accountId: "101011234567"
        baseDate: 2018-08-10
        currencyName: 日本円
        dateTo: 2018-08-10
        count: "500"
        hasNext: true
        dateFrom: 2018-07-30
        nextItemKey: "20181012090520112541"
        transactions:
        - transactionType: "2"
          amount: "50000"
          balance: "1200000"
          valueDate: 2018-07-30
          transactionDate: 2018-07-30
          remarks: 振込 アオゾラ タロウ
          itemKey: "20181012090520112541"
        - transactionType: "2"
          amount: "50000"
          balance: "1200000"
          valueDate: 2018-07-30
          transactionDate: 2018-07-30
          remarks: 振込 アオゾラ タロウ
          itemKey: "20181012090520112541"
        currencyCode: JPY
        baseTime: 10:00:00+09:00
    Transfer:
      title: Transfer
      required:
      - accountNumber
      - accountTypeCode
      - beneficiaryBankCode
      - beneficiaryBranchCode
      - beneficiaryName
      - transferAmount
      type: object
      properties:
        itemId:
          maxLength: 6
          minLength: 1
          type: string
          description: |
            明細番号
            半角数字
            重複/0はエラー　1～99の範囲で１からの連番とします
            1件のみの場合は省略可（項目自体の設定が不要です）
          example: "4"
        transferAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            振込金額
            半角数字
            1以上、整数のみ
          example: "1000"
        ediInfo:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            EDI情報
            半角文字
            振込許容文字を指定可
          example: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
        beneficiaryBankCode:
          maxLength: 4
          minLength: 4
          type: string
          description: |
            被仕向金融機関番号
            半角数字
          example: "0398"
        beneficiaryBankName:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            被仕向金融機関名カナ
            半角文字
            参考値、処理に利用しません
          example: ｱｵｿﾞﾗ
        beneficiaryBranchCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            被仕向支店番号
            半角数字
          example: "111"
        beneficiaryBranchName:
          maxLength: 15
          minLength: 1
          type: string
          description: |
            被仕向支店名カナ
            半角文字
            参考値、処理に利用しません
          example: ﾎﾝﾃﾝ
        accountTypeCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            科目コード（預金種別コード）
            半角数字
            1：普通、2：当座、4：貯蓄、9：その他
          example: "1"
        accountNumber:
          maxLength: 7
          minLength: 7
          type: string
          description: |
            口座番号
            半角数字
            7桁未満の番号は右詰で、前ゼロで埋めること
          example: "1234567"
        beneficiaryName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            受取人名
            半角文字
            振込許容文字を指定可
            ただし、一部の非許容文字は、許容文字に変換を行います
          example: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
    TransferAccept:
      title: TransferAccept
      type: object
      properties:
        acceptNo:
          maxLength: 16
          minLength: 16
          type: string
          description: |
            受付番号（振込　受付番号）
            半角数字
            振込で取引が成立/予約中になると採番（振込、総合振込、定額自動振込で共通）
          example: "2018072901234567"
        acceptDatetime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            振込受付日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
            この申請の受付日時
          example: 2018-07-29T10:00:00+09:00
      example:
        acceptNo: "2018072901234567"
        acceptDatetime: 2018-07-29T10:00:00+09:00
    TransferApply:
      title: TransferApply
      type: object
      properties:
        applyNo:
          maxLength: 16
          minLength: 16
          type: string
          description: |
            受付番号（振込申請番号）
            半角数字
            すべての振込・総合振込で採番される、照会の基本単位となる番号
          example: "2018072902345678"
        transferApplyDetails:
          type: array
          description: |
            振込申請詳細情報
            振込申請詳細情報のリスト
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/TransferApplyDetail'
      example:
        transferApplyDetails:
        - applyUser: 山田二郎
          approvalUser: 田中太郎
          approvalComment: 実施しました
          applyComment: 緊急でお願いします。
          applyDatetime: 2018-07-29T10:00:00+09:00
          applyStatus: "1"
        - applyUser: 山田二郎
          approvalUser: 田中太郎
          approvalComment: 実施しました
          applyComment: 緊急でお願いします。
          applyDatetime: 2018-07-29T10:00:00+09:00
          applyStatus: "1"
        applyNo: "2018072902345678"
    TransferApplyDetail:
      title: TransferApplyDetail
      type: object
      properties:
        applyDatetime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            振込申請受付日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
            この申請の受付日時
            該当する情報が無い場合は項目自体を設定しません
          example: 2018-07-29T10:00:00+09:00
        applyStatus:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込申請ステータス
            半角数字
            0：未申請、1：申請中、2：差戻、3：取下げ、4：期限切れ、5：承認済、6：承認取消、7：自動承認
            該当する情報が無い場合は項目自体を設定しません
          example: "1"
        applyUser:
          maxLength: 45
          minLength: 1
          type: string
          description: |
            申請者
            全半角文字
            申請をしたユーザ名
            該当する情報が無い場合は項目自体を設定しません
          example: 山田二郎
        applyComment:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            申請者コメント
            全半角文字
            申請したユーザのコメント
            該当する情報が無い場合は項目自体を設定しません
          example: 緊急でお願いします。
        approvalUser:
          maxLength: 45
          minLength: 1
          type: string
          description: |
            決裁者
            全半角文字
            承認をしたユーザ名
            該当する情報が無い場合は項目自体を設定しません
          example: 田中太郎
        approvalComment:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            決裁者コメント
            全半角文字
            承認をしたユーザのコメント
            該当する情報が無い場合は項目自体を設定しません
          example: 実施しました
      example:
        applyUser: 山田二郎
        approvalUser: 田中太郎
        approvalComment: 実施しました
        applyComment: 緊急でお願いします。
        applyDatetime: 2018-07-29T10:00:00+09:00
        applyStatus: "1"
    TransferCancelRequest:
      title: TransferCancelRequest
      required:
      - accountId
      - applyNo
      - cancelTargetKeyClass
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        cancelTargetKeyClass:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            取消対象キー区分
            半角英数値
            取消対象の取引の内容について指定します
            1:振込申請取消　2:振込受付取消　3:総合振込申請取消　4:総合振込受付取消
            取消対象キー区分と、取消対象の振込申請番号の状態がマッチしない場合は、「400 Bad Request」を返却
          example: "2"
        applyNo:
          maxLength: 16
          minLength: 16
          type: string
          description: |
            受付番号（振込申請番号）
            半角数字
            取り消し対象の番号を設定
          example: "2018072902345678"
      example:
        cancelTargetKeyClass: "2"
        accountId: "101011234567"
        applyNo: "2018072902345678"
    TransferCancelResponse:
      title: TransferCancelResponse
      required:
      - accountId
      - applyNo
      - cancelTargetKeyClass
      - resultCode
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        cancelTargetKeyClass:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            取消対象キー区分
            半角英数値
            1:振込申請取消　2:振込受付取消　3:総合振込申請取消　4:総合振込受付取消
          example: "2"
        resultCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            結果コード
            半角数字
            1:完了　2：未完了
          example: "1"
        applyNo:
          maxLength: 16
          minLength: 16
          type: string
          description: |
            受付番号（振込申請番号）
            半角数字
            取り消し対象の番号
          example: "2018072902345678"
        applyEndDatetime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            振込依頼完了日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
            結果コードが、1:完了のときのみセット
            このリクエストの依頼が完了した日時を返却
            それ以外は項目自体を設定しません
          example: 2018-07-29T10:00:00+09:00
      example:
        cancelTargetKeyClass: "2"
        accountId: "101011234567"
        applyEndDatetime: 2018-07-29T10:00:00+09:00
        applyNo: "2018072902345678"
        resultCode: "1"
    TransferDetail:
      title: TransferDetail
      type: object
      properties:
        transferStatus:
          maxLength: 3
          minLength: 1
          type: string
          description: |
            振込ステータス
            半角数字
            2:申請中、3:差戻、4:取下げ、5:期限切れ、8:承認取消/予約取消、
            11:予約中、12:手続中、13:リトライ中、
            20:手続済、22:資金返却、24:組戻手続中、25:組戻済、26:組戻不成立、
            40:手続不成立
          example: "20"
        transferStatusName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            振込ステータス名
            全角文字
          example: 手続済
        transferTypeName:
          maxLength: 6
          minLength: 4
          type: string
          description: |
            種類
            全角文字
            振込振替　または　定額自動振込　を表示
          example: 振込振替
        isFeeFreeUse:
          type: boolean
          description: |
            振込無料回数利用可否
            振込利用回数の利用可否（無料回数の利用可否の設定であり、実際の利用有無ではありません）
          example: true
        isFeePointUse:
          type: boolean
          description: |
            ポイント利用可否
            ポイント会社の利用可否
          example: true
        pointName:
          maxLength: 32
          minLength: 1
          type: string
          description: |
            ポイント会社名
            全角文字
            該当する情報が無い場合は項目自体を設定しません
          example: GMOポイント
        feeLaterPaymentFlg:
          type: boolean
          description: |
            手数料後払区分
            「true=後払い」以外の場合は項目自体を設定しません
          example: true
        transferDetailFee:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            明細手数料
            半角数字
            振り込み完了時以外は、予定の手数料
          example: "345"
        totalDebitAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            合計出金金額
            半角数字
            手数料+振込金額　ただし、振込完了時以外は、予定の手数料
          example: "123456"
        transferApplies:
          type: array
          description: |
            振込申請情報
            振込申請情報のリスト
          items:
            $ref: '#/components/schemas/TransferApply'
        transferAccepts:
          type: array
          description: |
            振込受付情報
            振込受付情報のリスト
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/TransferAccept'
        transferResponses:
          type: array
          description: |
            振込レスポンス情報
            振込レスポンス情報のリスト
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/TransferResponse'
      example:
        isFeeFreeUse: true
        transferApplies:
        - transferApplyDetails:
          - applyUser: 山田二郎
            approvalUser: 田中太郎
            approvalComment: 実施しました
            applyComment: 緊急でお願いします。
            applyDatetime: 2018-07-29T10:00:00+09:00
            applyStatus: "1"
          - applyUser: 山田二郎
            approvalUser: 田中太郎
            approvalComment: 実施しました
            applyComment: 緊急でお願いします。
            applyDatetime: 2018-07-29T10:00:00+09:00
            applyStatus: "1"
          applyNo: "2018072902345678"
        - transferApplyDetails:
          - applyUser: 山田二郎
            approvalUser: 田中太郎
            approvalComment: 実施しました
            applyComment: 緊急でお願いします。
            applyDatetime: 2018-07-29T10:00:00+09:00
            applyStatus: "1"
          - applyUser: 山田二郎
            approvalUser: 田中太郎
            approvalComment: 実施しました
            applyComment: 緊急でお願いします。
            applyDatetime: 2018-07-29T10:00:00+09:00
            applyStatus: "1"
          applyNo: "2018072902345678"
        transferStatus: "20"
        pointName: GMOポイント
        transferAccepts:
        - acceptNo: "2018072901234567"
          acceptDatetime: 2018-07-29T10:00:00+09:00
        - acceptNo: "2018072901234567"
          acceptDatetime: 2018-07-29T10:00:00+09:00
        transferResponses:
        - accountId: "101011234567"
          transferInfos:
          - transferDetailResponses:
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            beneficiaryBankName: ｱｵｿﾞﾗ
            beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
            accountTypeCode: "1"
            unableDetailInfos:
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            transferAmount: "1000"
            beneficiaryBankCode: "0398"
            ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
            accountNumber: "1234567"
            beneficiaryBranchName: ﾎﾝﾃﾝ
            beneficiaryBranchCode: "111"
          - transferDetailResponses:
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            beneficiaryBankName: ｱｵｿﾞﾗ
            beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
            accountTypeCode: "1"
            unableDetailInfos:
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            transferAmount: "1000"
            beneficiaryBankCode: "0398"
            ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
            accountNumber: "1234567"
            beneficiaryBranchName: ﾎﾝﾃﾝ
            beneficiaryBranchCode: "111"
          transferDesignatedDate: 2018-07-30
          remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
        - accountId: "101011234567"
          transferInfos:
          - transferDetailResponses:
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            beneficiaryBankName: ｱｵｿﾞﾗ
            beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
            accountTypeCode: "1"
            unableDetailInfos:
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            transferAmount: "1000"
            beneficiaryBankCode: "0398"
            ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
            accountNumber: "1234567"
            beneficiaryBranchName: ﾎﾝﾃﾝ
            beneficiaryBranchCode: "111"
          - transferDetailResponses:
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            - usedPoint: "1000"
              isFeeFreeUsed: false
              transferFee: "1000"
              beneficiaryBranchNameKanji: 本店
              beneficiaryBankNameKanji: あおぞら銀行
            beneficiaryBankName: ｱｵｿﾞﾗ
            beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
            accountTypeCode: "1"
            unableDetailInfos:
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            - isRepayment: true
              repaymentDate: 2018-07-30
              refundStatus: "1"
              transferDetailStatus: "1"
            transferAmount: "1000"
            beneficiaryBankCode: "0398"
            ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
            accountNumber: "1234567"
            beneficiaryBranchName: ﾎﾝﾃﾝ
            beneficiaryBranchCode: "111"
          transferDesignatedDate: 2018-07-30
          remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
        transferTypeName: 振込振替
        totalDebitAmount: "123456"
        isFeePointUse: true
        transferDetailFee: "345"
        feeLaterPaymentFlg: true
        transferStatusName: 手続済
    TransferDetailResponse:
      title: TransferDetailResponse
      type: object
      properties:
        beneficiaryBankNameKanji:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            被仕向金融機関名漢字
            全角文字
            被仕向金融機関番号に該当する金融機関名漢字
            該当する情報が無い場合は項目自体を設定しません
          example: あおぞら銀行
        beneficiaryBranchNameKanji:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            被仕向支店名漢字
            全角文字
            被仕向支店番号に該当する支店名漢字
            該当する情報が無い場合は項目自体を設定しません
          example: 本店
        usedPoint:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            利用ポイント
            半角数字
            実際に利用したポイント
            該当する情報が無い場合は項目自体を設定しません
          example: "1000"
        isFeeFreeUsed:
          type: boolean
          description: |
            振込無料回数利用有無
            振込無料回数の実際の利用有無
            総合振込では無料回数は利用できないため、常にfalse
          example: false
        transferFee:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            手数料
            半角数字
            個別明細単位の手数料
            該当する情報が無い場合は項目自体を設定しません
          example: "1000"
      example:
        usedPoint: "1000"
        isFeeFreeUsed: false
        transferFee: "1000"
        beneficiaryBranchNameKanji: 本店
        beneficiaryBankNameKanji: あおぞら銀行
    TransferError:
      title: TransferError
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            エラーコード
            半角英数文字
          example: ERROR12345
        errorMessage:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            エラーメッセージ
            全半角英数記号文字
          example: エラーメッセージ
        errorDetails:
          type: array
          description: |
            エラー詳細情報
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/ErrorDetail'
        transferErrorDetails:
          type: array
          description: |
            振込明細エラー情報
            個別明細がエラーの場合のみ応答
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/TransferErrorDetail'
    TransferErrorDetail:
      title: TransferErrorDetail
      type: object
      properties:
        itemId:
          maxLength: 6
          minLength: 1
          type: string
          description: |
            明細番号
            半角数字
            エラーとなった明細番号を表示
          example: "3"
        errorDetails:
          type: array
          description: |
            エラー詳細情報
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/ErrorDetail'
    TransferFeeDetail:
      title: TransferFeeDetail
      required:
      - itemId
      - transferFee
      type: object
      properties:
        itemId:
          maxLength: 6
          minLength: 1
          type: string
          description: |
            明細番号
            半角数字
            明細番号を表示
          example: "3"
        transferFee:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            個別振込手数料
            半角数字
            該当明細番号の手数料を表示
          example: "150"
      example:
        itemId: "3"
        transferFee: "150"
    TransferFeeResponse:
      title: TransferFeeResponse
      required:
      - accountId
      - baseDate
      - baseTime
      - totalFee
      - transferFeeDetails
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        baseDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            基準日
            振込の手数料を照会した基準日を示します
            YYYY-MM-DD形式
          example: 2018-07-30
        baseTime:
          maxLength: 14
          minLength: 14
          type: string
          description: |
            基準時刻
            振込の手数料を照会した基準時刻を示します
            HH:MM:SS+09:00形式
          example: 10:00:00+09:00
        totalFee:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            合計振込手数料
            半角数字
            手数料の合計額を表示
          example: "20000"
        transferFeeDetails:
          type: array
          description: |
            振込手数料明細情報
            個別明細を設定
          items:
            $ref: '#/components/schemas/TransferFeeDetail'
      example:
        accountId: "101011234567"
        baseDate: 2018-07-30
        totalFee: "20000"
        transferFeeDetails:
        - itemId: "3"
          transferFee: "150"
        - itemId: "3"
          transferFee: "150"
        baseTime: 10:00:00+09:00
    TransferInfo:
      title: TransferInfo
      type: object
      properties:
        transferAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            振込金額
            半角数字
            1以上,整数のみ
          example: "1000"
        ediInfo:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            EDI情報
            半角文字
            該当する情報が無い場合は項目自体を設定しません
          example: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
        beneficiaryBankCode:
          maxLength: 4
          minLength: 4
          type: string
          description: |
            被仕向金融機関番号
            半角数字
          example: "0398"
        beneficiaryBankName:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            被仕向金融機関名カナ
            半角文字
          example: ｱｵｿﾞﾗ
        beneficiaryBranchCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            被仕向支店番号
            半角数字
          example: "111"
        beneficiaryBranchName:
          maxLength: 15
          minLength: 1
          type: string
          description: |
            被仕向支店名カナ
            半角文字
          example: ﾎﾝﾃﾝ
        accountTypeCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            科目コード（預金種別コード）
            半角数字
            1：普通、2：当座、4：貯蓄、9：その他
          example: "1"
        accountNumber:
          maxLength: 7
          minLength: 7
          type: string
          description: |
            口座番号
            半角数字
            7桁未満の番号は右詰で、前ゼロで埋めること
          example: "1234567"
        beneficiaryName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            受取人名
            半角文字
            該当する情報が無い場合は項目自体を設定しません
          example: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
        transferDetailResponses:
          type: array
          description: |
            振込明細結果
            振込明細結果のリスト
            正常時のみ応答
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/TransferDetailResponse'
        unableDetailInfos:
          type: array
          description: |
            不能明細情報
            不能明細情報のリスト
            該当する情報が無い場合は項目自体を設定しません
          items:
            $ref: '#/components/schemas/UnableDetailInfo'
      example:
        transferDetailResponses:
        - usedPoint: "1000"
          isFeeFreeUsed: false
          transferFee: "1000"
          beneficiaryBranchNameKanji: 本店
          beneficiaryBankNameKanji: あおぞら銀行
        - usedPoint: "1000"
          isFeeFreeUsed: false
          transferFee: "1000"
          beneficiaryBranchNameKanji: 本店
          beneficiaryBankNameKanji: あおぞら銀行
        beneficiaryBankName: ｱｵｿﾞﾗ
        beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
        accountTypeCode: "1"
        unableDetailInfos:
        - isRepayment: true
          repaymentDate: 2018-07-30
          refundStatus: "1"
          transferDetailStatus: "1"
        - isRepayment: true
          repaymentDate: 2018-07-30
          refundStatus: "1"
          transferDetailStatus: "1"
        transferAmount: "1000"
        beneficiaryBankCode: "0398"
        ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
        accountNumber: "1234567"
        beneficiaryBranchName: ﾎﾝﾃﾝ
        beneficiaryBranchCode: "111"
    TransferQueryBulkResponse:
      title: TransferQueryBulkResponse
      type: object
      properties:
        dateFrom:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            対象期間From
            半角文字
            リクエストしたときと同じ内容
            対象期間（From）をYYYY-MM-DD形式で設定
          example: 2018-07-30
        dateTo:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            対象期間To
            半角文字
            リクエストしたときと同じ内容
            対象期間（To）をYYYY-MM-DD形式で設定
          example: 2018-08-10
        requestNextItemKey:
          maxLength: 24
          minLength: 1
          type: string
          description: |
            リクエスト時次明細キー
            半角数字
            リクエストしたときと同じ内容
            該当する情報が無い場合は項目自体を設定しません
          example: "1234567890"
        requestTransferStatuses:
          type: array
          description: |
            振込一括照会対象ステータス
            該当する情報が無い場合は項目自体を設定しません
          items:
            $ref: '#/components/schemas/RequestTransferStatus'
        requestTransferClass:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            照会対象取得区分
            半角数字
            リクエストしたときと同じ内容
            1：ALL、2：振込申請のみ、3：振込受付情報のみ
            該当する情報が無い場合は項目自体を設定しません
          example: "1"
        requestTransferTerm:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込照会対象期間区分
            半角数字
            リクエストしたときと同じ内容
            1：振込申請受付日　2：振込指定日
            該当する情報が無い場合は項目自体を設定しません
          example: "1"
        hasNext:
          type: boolean
          description: |
            次明細フラグ
            ・true=次明細あり
            ・false=次明細なし
          example: true
        nextItemKey:
          maxLength: 24
          minLength: 1
          type: string
          description: |
            次明細キー
            半角数字
            次明細フラグがfalseの場合は項目自体を設定しません
          example: "1234567890"
      example:
        requestTransferStatuses:
        - requestTransferStatus: "20"
        - requestTransferStatus: "20"
        dateTo: 2018-08-10
        requestNextItemKey: "1234567890"
        requestTransferClass: "1"
        requestTransferTerm: "1"
        hasNext: true
        dateFrom: 2018-07-30
        nextItemKey: "1234567890"
    TransferRequest:
      title: TransferRequest
      required:
      - accountId
      - transferDesignatedDate
      - transfers
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角英数字
            口座を識別するID
          example: "101011234567"
        remitterName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            振込依頼人名
            半角文字
            指定しない場合は口座名義がデフォルト値となります
            振込許容文字を指定可
            ただし、一部の非許容文字は、許容文字に変換を行います
          example: ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ
        transferDesignatedDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            振込指定日
            半角文字
            YYYY-MM-DD形式
            振込対象の指定日
            ただし、振込指定日が非営業日で、非営業日に実施できない振込（他行宛振込み）が振込情報に1件以上存在する場合、以下のとおりとなります
            ・「振込指定日休日コード」が1または省略の場合、振込指定日の翌営業日を振込対象の指定日となります
            ・「振込指定日休日コード」が2の場合、振込指定日の前営業日を振込対象の指定日となります
            ・「振込指定日休日コード」が3の場合、エラーとなり「400 Bad Request」を返却します
          example: 2018-07-30
        transferDateHolidayCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込指定日休日コード
            半角数字
            1：翌営業日、2：前営業日、3：エラー返却
            省略可（省略した場合は1とみなします）
          example: "1"
        totalCount:
          maxLength: 6
          minLength: 1
          type: string
          description: |
            合計件数
            半角数字
            1以上99件まで指定可能（0はエラー）
            1件のみの場合は省略可（項目自体の設定が不要です）
          example: "5"
        totalAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            合計金額
            半角数字
            1以上999,999,999,999円以下　数値のみで0、カンマ、マイナス不可
            1件のみの場合は省略可（項目自体の設定が不要です）
          example: "1234500"
        applyComment:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            振込申請メモ（申請コメント）
            全半角文字
            ビジネスID管理申し込みかつ、申請になるユーザーの場合のみ有効
            それ以外は値を設定しても銀行で読み捨て
            該当する情報が無い場合は省略可（項目自体の設定が不要です）
          example: 緊急で承認をお願いします
        transfers:
          type: array
          description: |
            振込情報
            振込情報のリスト
          items:
            $ref: '#/components/schemas/Transfer'
      example:
        accountId: "101011234567"
        remitterName: ｼﾞ-ｴﾑｵ-ｼｮｳｼﾞ(ｶ
        transferDesignatedDate: 2018-07-30
        transferDateHolidayCode: "1"
        totalCount: "3"
        totalAmount: "3000"
        applyComment: 緊急で承認をお願いします
        transfers:
        - itemId: 1
          transferAmount: "1000"
          ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
          beneficiaryBankCode: "0398"
          beneficiaryBankName: ｱｵｿﾞﾗ
          beneficiaryBranchCode: "111"
          beneficiaryBranchName: ﾎﾝﾃﾝ
          accountTypeCode: "1"
          accountNumber: "1234567"
          beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
        - itemId: 2
          transferAmount: "1500"
          ediInfo: EDI
          beneficiaryBankCode: "0310"
          beneficiaryBankName: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ
          beneficiaryBranchCode: "301"
          beneficiaryBranchName: ｳﾐ
          accountTypeCode: "1"
          accountNumber: "2345678"
          beneficiaryName: ｱｵｿﾞﾗ ﾃｽﾄ
        - itemId: 3
          transferAmount: "500"
          beneficiaryBankCode: "0310"
          beneficiaryBankName: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗﾈﾂﾄ
          beneficiaryBranchCode: "101"
          beneficiaryBranchName: ﾎｳｼﾞﾝ
          accountTypeCode: "1"
          accountNumber: "3456789"
          beneficiaryName: ｷｯｻｱｵｿﾞﾗ(ｶ
    TransferRequestResponse:
      title: TransferRequestResponse
      required:
      - accountId
      - applyNo
      - resultCode
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角数字
            口座を識別するID
          example: "101011234567"
        resultCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            結果コード
            半角数字
            1:完了　2：未完了
          example: "1"
        applyNo:
          maxLength: 16
          minLength: 16
          type: string
          description: |
            受付番号（振込申請番号）
            半角数字
            すべての振込・総合振込で採番される、照会の基本単位となる番号
          example: "2018072902345678"
        applyEndDatetime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            振込依頼完了日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
            結果コードが、1:完了のときのみセット
            それ以外は項目自体を設定しません
          example: 2018-07-29T10:00:00+09:00
      example:
        accountId: "101011234567"
        applyEndDatetime: 2018-07-29T10:00:00+09:00
        applyNo: "2018072902345678"
        resultCode: "1"
    TransferRequestResultResponse:
      title: TransferRequestResultResponse
      required:
      - accountId
      - applyNo
      - resultCode
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角数字
            口座を識別するID
          example: "101011234567"
        resultCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            結果コード
            半角数字
            1:完了　2：未完了　8：期限切
          example: "1"
        applyNo:
          maxLength: 16
          minLength: 16
          type: string
          description: |
            受付番号（振込申請番号）
            半角数字
            すべての振込・総合振込で採番される、照会の基本単位となる番号
          example: "2018072902345678"
        applyEndDatetime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            振込依頼完了日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
            結果コードが、1:完了のときのみセット
            振込申請番号の最も直近の依頼の完了日時を返却
            それ以外は項目自体を設定しません
          example: 2018-07-29T10:00:00+09:00
      example:
        accountId: "101011234567"
        applyEndDatetime: 2018-07-29T10:00:00+09:00
        applyNo: "2018072902345678"
        resultCode: "1"
    TransferResponse:
      title: TransferResponse
      type: object
      properties:
        accountId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            口座ID
            半角数字
            口座を識別するID
            引き落とし元となる口座情報
          example: "101011234567"
        remitterName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            振込依頼人名
            半角文字
          example: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
        transferDesignatedDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            振込指定日
            半角文字
            YYYY-MM-DD形式
          example: 2018-07-30
        transferInfos:
          type: array
          description: |
            振込情報
            振込情報のリスト
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/TransferInfo'
      example:
        accountId: "101011234567"
        transferInfos:
        - transferDetailResponses:
          - usedPoint: "1000"
            isFeeFreeUsed: false
            transferFee: "1000"
            beneficiaryBranchNameKanji: 本店
            beneficiaryBankNameKanji: あおぞら銀行
          - usedPoint: "1000"
            isFeeFreeUsed: false
            transferFee: "1000"
            beneficiaryBranchNameKanji: 本店
            beneficiaryBankNameKanji: あおぞら銀行
          beneficiaryBankName: ｱｵｿﾞﾗ
          beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
          accountTypeCode: "1"
          unableDetailInfos:
          - isRepayment: true
            repaymentDate: 2018-07-30
            refundStatus: "1"
            transferDetailStatus: "1"
          - isRepayment: true
            repaymentDate: 2018-07-30
            refundStatus: "1"
            transferDetailStatus: "1"
          transferAmount: "1000"
          beneficiaryBankCode: "0398"
          ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
          accountNumber: "1234567"
          beneficiaryBranchName: ﾎﾝﾃﾝ
          beneficiaryBranchCode: "111"
        - transferDetailResponses:
          - usedPoint: "1000"
            isFeeFreeUsed: false
            transferFee: "1000"
            beneficiaryBranchNameKanji: 本店
            beneficiaryBankNameKanji: あおぞら銀行
          - usedPoint: "1000"
            isFeeFreeUsed: false
            transferFee: "1000"
            beneficiaryBranchNameKanji: 本店
            beneficiaryBankNameKanji: あおぞら銀行
          beneficiaryBankName: ｱｵｿﾞﾗ
          beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
          accountTypeCode: "1"
          unableDetailInfos:
          - isRepayment: true
            repaymentDate: 2018-07-30
            refundStatus: "1"
            transferDetailStatus: "1"
          - isRepayment: true
            repaymentDate: 2018-07-30
            refundStatus: "1"
            transferDetailStatus: "1"
          transferAmount: "1000"
          beneficiaryBankCode: "0398"
          ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
          accountNumber: "1234567"
          beneficiaryBranchName: ﾎﾝﾃﾝ
          beneficiaryBranchCode: "111"
        transferDesignatedDate: 2018-07-30
        remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
    TransferStatusResponse:
      title: TransferStatusResponse
      required:
      - acceptanceKeyClass
      - baseDate
      - baseTime
      - count
      type: object
      properties:
        acceptanceKeyClass:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            照会対象キー区分
            半角数字
            リクエストしたときと同じ内容
            照会対象のキー
            1：振込申請照会対象指定、2：振込一括照会対象指定
          example: "1"
        baseDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            基準日
            半角文字
            振込照会明細情報を照会した基準日を示します
            YYYY-MM-DD形式
          example: 2018-08-10
        baseTime:
          maxLength: 14
          minLength: 14
          type: string
          description: |
            基準時刻
            半角文字
            振込照会明細情報を照会した基準時刻を示します
            HH:MM:SS+09:00形式
          example: 10:00:00+09:00
        count:
          maxLength: 7
          minLength: 1
          type: string
          description: |
            明細取得件数
            半角数字
            振込明細の件数
          example: "500"
        transferQueryBulkResponses:
          type: array
          description: |
            振込一括照会対象指定レスポンス
            該当する情報が無い場合は項目自体を設定しません
          items:
            $ref: '#/components/schemas/TransferQueryBulkResponse'
        transferDetails:
          type: array
          description: |
            振込照会明細情報
            振込照会明細情報のリスト
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/TransferDetail'
      example:
        baseDate: 2018-08-10
        transferQueryBulkResponses:
        - requestTransferStatuses:
          - requestTransferStatus: "20"
          - requestTransferStatus: "20"
          dateTo: 2018-08-10
          requestNextItemKey: "1234567890"
          requestTransferClass: "1"
          requestTransferTerm: "1"
          hasNext: true
          dateFrom: 2018-07-30
          nextItemKey: "1234567890"
        - requestTransferStatuses:
          - requestTransferStatus: "20"
          - requestTransferStatus: "20"
          dateTo: 2018-08-10
          requestNextItemKey: "1234567890"
          requestTransferClass: "1"
          requestTransferTerm: "1"
          hasNext: true
          dateFrom: 2018-07-30
          nextItemKey: "1234567890"
        transferDetails:
        - isFeeFreeUse: true
          transferApplies:
          - transferApplyDetails:
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            applyNo: "2018072902345678"
          - transferApplyDetails:
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            applyNo: "2018072902345678"
          transferStatus: "20"
          pointName: GMOポイント
          transferAccepts:
          - acceptNo: "2018072901234567"
            acceptDatetime: 2018-07-29T10:00:00+09:00
          - acceptNo: "2018072901234567"
            acceptDatetime: 2018-07-29T10:00:00+09:00
          transferResponses:
          - accountId: "101011234567"
            transferInfos:
            - transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
              accountTypeCode: "1"
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              transferAmount: "1000"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              accountNumber: "1234567"
              beneficiaryBranchName: ﾎﾝﾃﾝ
              beneficiaryBranchCode: "111"
            - transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
              accountTypeCode: "1"
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              transferAmount: "1000"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              accountNumber: "1234567"
              beneficiaryBranchName: ﾎﾝﾃﾝ
              beneficiaryBranchCode: "111"
            transferDesignatedDate: 2018-07-30
            remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
          - accountId: "101011234567"
            transferInfos:
            - transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
              accountTypeCode: "1"
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              transferAmount: "1000"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              accountNumber: "1234567"
              beneficiaryBranchName: ﾎﾝﾃﾝ
              beneficiaryBranchCode: "111"
            - transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
              accountTypeCode: "1"
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              transferAmount: "1000"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              accountNumber: "1234567"
              beneficiaryBranchName: ﾎﾝﾃﾝ
              beneficiaryBranchCode: "111"
            transferDesignatedDate: 2018-07-30
            remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
          transferTypeName: 振込振替
          totalDebitAmount: "123456"
          isFeePointUse: true
          transferDetailFee: "345"
          feeLaterPaymentFlg: true
          transferStatusName: 手続済
        - isFeeFreeUse: true
          transferApplies:
          - transferApplyDetails:
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            applyNo: "2018072902345678"
          - transferApplyDetails:
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            - applyUser: 山田二郎
              approvalUser: 田中太郎
              approvalComment: 実施しました
              applyComment: 緊急でお願いします。
              applyDatetime: 2018-07-29T10:00:00+09:00
              applyStatus: "1"
            applyNo: "2018072902345678"
          transferStatus: "20"
          pointName: GMOポイント
          transferAccepts:
          - acceptNo: "2018072901234567"
            acceptDatetime: 2018-07-29T10:00:00+09:00
          - acceptNo: "2018072901234567"
            acceptDatetime: 2018-07-29T10:00:00+09:00
          transferResponses:
          - accountId: "101011234567"
            transferInfos:
            - transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
              accountTypeCode: "1"
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              transferAmount: "1000"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              accountNumber: "1234567"
              beneficiaryBranchName: ﾎﾝﾃﾝ
              beneficiaryBranchCode: "111"
            - transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
              accountTypeCode: "1"
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              transferAmount: "1000"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              accountNumber: "1234567"
              beneficiaryBranchName: ﾎﾝﾃﾝ
              beneficiaryBranchCode: "111"
            transferDesignatedDate: 2018-07-30
            remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
          - accountId: "101011234567"
            transferInfos:
            - transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
              accountTypeCode: "1"
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              transferAmount: "1000"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              accountNumber: "1234567"
              beneficiaryBranchName: ﾎﾝﾃﾝ
              beneficiaryBranchCode: "111"
            - transferDetailResponses:
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              - usedPoint: "1000"
                isFeeFreeUsed: false
                transferFee: "1000"
                beneficiaryBranchNameKanji: 本店
                beneficiaryBankNameKanji: あおぞら銀行
              beneficiaryBankName: ｱｵｿﾞﾗ
              beneficiaryName: ｶ)ｱｵｿﾞﾗｻﾝｷﾞｮｳ
              accountTypeCode: "1"
              unableDetailInfos:
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              - isRepayment: true
                repaymentDate: 2018-07-30
                refundStatus: "1"
                transferDetailStatus: "1"
              transferAmount: "1000"
              beneficiaryBankCode: "0398"
              ediInfo: ｾｲｷﾕｳｼﾖﾊﾞﾝｺﾞｳ1234
              accountNumber: "1234567"
              beneficiaryBranchName: ﾎﾝﾃﾝ
              beneficiaryBranchCode: "111"
            transferDesignatedDate: 2018-07-30
            remitterName: ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ
          transferTypeName: 振込振替
          totalDebitAmount: "123456"
          isFeePointUse: true
          transferDetailFee: "345"
          feeLaterPaymentFlg: true
          transferStatusName: 手続済
        count: "500"
        baseTime: 10:00:00+09:00
        acceptanceKeyClass: "1"
    UnableDetailInfo:
      title: UnableDetailInfo
      type: object
      properties:
        transferDetailStatus:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込詳細ステータス
            半角数字
            1：手続済、2：手続不成立
            手続中より前は該当する情報無しとみなし項目自体を設定しません
          example: "1"
        refundStatus:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            組戻ステータス
            半角数字
            1：組戻手続中、2：組戻済、3：組戻不成立
            組み戻しなし、および該当する情報が無い場合は項目自体を設定しません
          example: "1"
        isRepayment:
          type: boolean
          description: |
            資金返却フラグ
            true=あり
            無し、および該当する情報が無い場合は項目自体を設定しません
          example: true
        repaymentDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            資金返却日
            半角文字
            YYYY-MM-DD形式
            総合振込のみ表示
            該当する情報が無い場合は項目自体を設定しません
          example: 2018-07-30
      example:
        isRepayment: true
        repaymentDate: 2018-07-30
        refundStatus: "1"
        transferDetailStatus: "1"
    VAccount:
      title: VAccount
      required:
      - raAccountNumber
      - raBranchCode
      - raBranchName
      - raHolderName
      - raId
      - vaAccountNumber
      - vaBranchCode
      - vaBranchName
      - vaBranchNameKana
      - vaHolderNameKana
      - vaId
      - vaIssueDateTime
      - vaStatusChangePossibleCode
      - vaStatusCode
      - vaStatusName
      - vaTypeCode
      - vaTypeName
      type: object
      properties:
        vaId:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            振込入金口座ID
            半角数字
            振込入金口座を識別するID
          example: "5021099622"
        vaBranchCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            支店コード
            半角数字
          example: "502"
        vaBranchName:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            支店名
            全角文字
          example: あじさい支店
        vaBranchNameKana:
          maxLength: 15
          minLength: 1
          type: string
          description: |
            支店名カナ
            半角文字
          example: ｱｼﾞｻｲ
        vaAccountNumber:
          maxLength: 7
          minLength: 7
          type: string
          description: |
            口座番号
            半角数字
          example: "1099622"
        vaHolderNameKana:
          maxLength: 40
          minLength: 1
          type: string
          description: |
            口座名義カナ
            半角文字
          example: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
        vaTypeCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込入金口座　種類コード
            半角数字
            ・1=期限型
            ・2=継続型
          example: "1"
        vaTypeName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            振込入金口座　種類名
            全角文字
            振込入金口座　種類コードの名称
          example: 期限型
        vaStatusCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込入金口座　状態コード
            半角数字
            ・1=利用可能
            ・2=停止中
            ・3=削除済
          example: "2"
        vaStatusName:
          maxLength: 4
          minLength: 1
          type: string
          description: |
            振込入金口座　状態名
            全角文字
            振込入金口座　状態コードの名称
          example: 停止中
        vaStatusChangePossibleCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込入金口座　状態変更可能コード
            半角数字
            現在の口座状態から変更可能な口座状態を表したコード値
            ・1=停止・削除
            ・2=再開・削除
            ・3=該当なし
          example: "2"
        vaIssueDateTime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            発行日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
          example: 2018-08-01T10:00:00+09:00
        vaChangeStatusDateTime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            状態変更日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
            状態が変更されている場合のみ設定されます
            該当しない場合は項目自体を設定しません
          example: 2018-08-10T15:00:00+09:00
        vaCloseDateTime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            削除日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
            状態コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・3=削除済
          example: 2018-08-29T16:00:00+09:00
        expireDateTime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            有効期限日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
            種類コードが以下の場合のみ設定されます
            該当しない場合は項目自体を設定しません
            ・2=期限型
          example: 2018-08-31T12:59:59+09:00
        latestDepositDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            最終入金日
            半角文字
            YYYY-MM-DD形式
            入金がない場合は項目自体を設定しません
          example: 2018-08-02
        latestDepositAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            最終入金金額
            半角数字
            入金がない場合は項目自体を設定しません
          example: "50000"
        latestDepositCount:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            最終入金日入金回数
            半角数字
            入金がない場合は項目自体を設定しません
          example: "3"
        raId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            入金口座ID
            半角数字
            入金先の口座を識別するID
          example: "101011234567"
        raBranchCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            入金口座　支店コード
            半角数字
          example: "101"
        raBranchName:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            入金口座　支店名
            全角文字
          example: 法人営業部
        raAccountNumber:
          maxLength: 7
          minLength: 7
          type: string
          description: |
            入金口座　口座番号
            半角数字
          example: "1234567"
        raHolderName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            入金口座名義
            全角文字
          example: ＧＭＯあおぞら株式会社
      example:
        vaBranchCode: "502"
        expireDateTime: 2018-08-31T12:59:59+09:00
        vaChangeStatusDateTime: 2018-08-10T15:00:00+09:00
        raBranchName: 法人営業部
        vaStatusName: 停止中
        raBranchCode: "101"
        raHolderName: ＧＭＯあおぞら株式会社
        vaCloseDateTime: 2018-08-29T16:00:00+09:00
        vaAccountNumber: "1099622"
        latestDepositCount: "3"
        vaId: "5021099622"
        vaIssueDateTime: 2018-08-01T10:00:00+09:00
        vaStatusCode: "2"
        vaStatusChangePossibleCode: "2"
        vaBranchName: あじさい支店
        vaBranchNameKana: ｱｼﾞｻｲ
        vaTypeCode: "1"
        latestDepositDate: 2018-08-02
        latestDepositAmount: "50000"
        vaHolderNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
        vaTypeName: 期限型
        raId: "101011234567"
        raAccountNumber: "1234567"
    Va:
      title: Va
      required:
      - vaAccountNumber
      - vaBranchCode
      - vaBranchNameKana
      - vaId
      type: object
      properties:
        vaId:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            振込入金口座ID
            半角数字
            振込入金口座を識別するID
          example: "5021099622"
        vaBranchCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            支店コード
            半角数字
          example: "502"
        vaBranchNameKana:
          maxLength: 15
          minLength: 1
          type: string
          description: |
            支店名カナ
            半角文字
          example: ｱｼﾞｻｲ
        vaAccountNumber:
          maxLength: 7
          minLength: 7
          type: string
          description: |
            口座番号
            半角数字
          example: "1099622"
      example:
        vaId: "5021099622"
        vaBranchCode: "502"
        vaBranchNameKana: ｱｼﾞｻｲ
        vaAccountNumber: "1099622"
    VaCloseRequest:
      title: VaCloseRequest
      type: object
      properties:
        vaContractAuthKey:
          maxLength: 400
          minLength: 1
          type: string
          description: |
            振込入金口座API認証情報
            半角英数字
            銀行契約の方はNULLを設定
            提携企業の方が、契約された顧客の解約申込を依頼される場合は必須
            提携企業以外の方が値を設定されている場合は「400 Bad Request」を返却
          example: 5CSDFG1515A54DF
      example:
        vaContractAuthKey: 5CSDFG1515A54DF
    VaCloseRequestResponse:
      required:
      - acceptDate
      type: object
      properties:
        acceptDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            解約申込受付日
            解約申込を受け付けた日付を示します
            YYYY-MM-DD形式
          example: 2018-08-15
      example:
        acceptDate: 2018-08-15
    VaDepositTransactionsResponse:
      title: VaDepositTransactionsResponse
      required:
      - baseDate
      - baseTime
      - count
      - dateFrom
      - dateTo
      - hasNext
      - raAccountNumber
      - raBranchCode
      - raBranchNameKana
      - raHolderName
      - raId
      type: object
      properties:
        raId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            入金口座ID
            半角数字
            入金先の口座を識別するID
          example: "101011234567"
        raBranchCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            入金口座　支店コード
            半角数字
          example: "101"
        raBranchNameKana:
          maxLength: 15
          minLength: 1
          type: string
          description: |
            入金口座　支店名カナ
            半角文字
          example: ﾎｳｼﾞﾝｴｲｷﾞﾖｳﾌﾞ
        raAccountNumber:
          maxLength: 7
          minLength: 7
          type: string
          description: |
            入金口座　口座番号
            半角数字
          example: "1234567"
        raHolderName:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            入金口座　口座名義（漢字）
            全角文字
          example: GMOあおぞら株式会社
        dateFrom:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            対象期間From
            半角文字
            YYYY-MM-DD形式
            リクエストに対象期間From、Toが設定されていない場合は当日日付が設定されます
          example: 2018-08-01
        dateTo:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            対象期間To
            半角文字
            YYYY-MM-DD形式
            リクエストに対象期間From、Toが設定されていない場合は当日日付が設定されます
          example: 2018-08-02
        baseDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            基準日
            半角文字
            入金明細を照会した基準日を示します
            YYYY-MM-DD形式
          example: 2018-08-10
        baseTime:
          maxLength: 14
          minLength: 14
          type: string
          description: |
            基準時刻
            半角文字
            入金明細を照会した基準時刻を示します
            HH:MM:SS+09:00形式
          example: 10:00:00+09:00
        hasNext:
          type: boolean
          description: |
            次明細フラグ
            ・true=次明細あり
            ・false=次明細なし
          example: true
        nextItemKey:
          maxLength: 24
          minLength: 1
          type: string
          description: |
            次明細キー
            半角数字
            次明細フラグがfalseの場合は、項目自体を設定しません
          example: "20181012090520112541"
        count:
          maxLength: 7
          minLength: 1
          type: string
          description: |
            明細取得件数
            半角数字
          example: "500"
        vaTransactions:
          type: array
          description: |
            振込入金口座入金明細情報リスト
            該当する情報が無い場合は、空のリストを返却します
          items:
            $ref: '#/components/schemas/VaTransaction'
      example:
        baseDate: 2018-08-10
        vaTransactions:
        - depositAmount: "10000"
          remitterNameKana: ﾃｽﾄ ﾀﾛｳ
          vaBranchCode: "502"
          paymentBankName: ｱｵｿﾞﾗｷﾞﾝｺｳ
          partnerName: GMOあおぞらネット銀行
          valueDate: 2018-08-02
          paymentBranchName: ﾎﾝﾃﾝ
          transactionDate: 2018-08-02
          vaAccountNumber: "1099622"
          itemKey: "20181012090520112541"
          vaId: "5021099622"
          vaAccountNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
          vaBranchNameKana: ｱｼﾞｻｲ
          remarks: 振込 ｲ-ﾃﾞｲ-ｱｲ テスト　タロウ あじさい支店 1036971
        - depositAmount: "10000"
          remitterNameKana: ﾃｽﾄ ﾀﾛｳ
          vaBranchCode: "502"
          paymentBankName: ｱｵｿﾞﾗｷﾞﾝｺｳ
          partnerName: GMOあおぞらネット銀行
          valueDate: 2018-08-02
          paymentBranchName: ﾎﾝﾃﾝ
          transactionDate: 2018-08-02
          vaAccountNumber: "1099622"
          itemKey: "20181012090520112541"
          vaId: "5021099622"
          vaAccountNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
          vaBranchNameKana: ｱｼﾞｻｲ
          remarks: 振込 ｲ-ﾃﾞｲ-ｱｲ テスト　タロウ あじさい支店 1036971
        count: "500"
        raBranchCode: "101"
        hasNext: true
        raHolderName: GMOあおぞら株式会社
        dateFrom: 2018-08-01
        nextItemKey: "20181012090520112541"
        raBranchNameKana: ﾎｳｼﾞﾝｴｲｷﾞﾖｳﾌﾞ
        dateTo: 2018-08-02
        baseTime: 10:00:00+09:00
        raId: "101011234567"
        raAccountNumber: "1234567"
    VaId:
      title: VaId
      required:
      - vaId
      type: object
      properties:
        vaId:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            振込入金口座ID
            半角数字
            振込入金口座を識別するID
          example: "5021099622"
      example:
        vaId: "5021099622"
    VaIssueRequest:
      title: VaIssueRequest
      required:
      - issueRequestCount
      - vaTypeCode
      type: object
      properties:
        vaTypeCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込入金口座　種類コード
            半角数字
            ・1=期限型
            ・2=継続型
          example: "1"
        issueRequestCount:
          maxLength: 4
          minLength: 1
          type: string
          description: |
            発行口座数
            半角数字
            1回のリクエストで1,000口座まで発行可能
          example: "1000"
        raId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            入金口座ID
            半角数字
            科目コードが以下の口座IDのみ受け付けます
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
            銀行契約の場合は必須
          example: "101011234567"
        vaContractAuthKey:
          maxLength: 400
          minLength: 1
          type: string
          description: |
            振込入金口座API認証情報
            半角英数字
            銀行契約の方はNULLを設定
            提携企業の方が、契約された顧客の発行を依頼される場合は必須
            提携企業以外の方が値を設定されている場合は「400 Bad Request」を返却
          example: 5CSDFG1515A54DF
        vaHolderNameKana:
          maxLength: 40
          minLength: 1
          type: string
          description: |-
            追加名義カナ
            半角文字
            振込入金口座名義（※）に任意の文字を追加する場合は指定してください
            ※ご登録されている「法人名カナ」

            追加名義カナで指定できる文字数 = 40 - 振込入金口座名義の文字数
            合計が40文字を超える場合は、追加名義カナの後部から文字が削られます

            ・使用可能な記号は「/」、「(」、「)」、「.」、「,」、「-」
            ・一部の非許容文字は、許容文字に変換を行います
            ・濁点、半濁点は１文字として数えます
            ・追加名義カナを前につける場合、半角スペースは追加名義カナの右側に1文字のみ許容します
            ・追加名義カナを前につける場合、追加名義カナの左側に半角スペースは許容しません
            ・追加名義カナを前につける場合、追加名義カナの中に半角の連続スペースは許容しません
          example: ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
        vaHolderNamePos:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            追加名義位置
            半角数字
            追加名義カナを口座名義の前につけるか後ろにつけるかの指定
            ・1=通常（後ろにつける）
            ・2=前につける
            指定が無い場合は後ろにつけます
          example: "1"
      example:
        vaContractAuthKey: 5CSDFG1515A54DF
        issueRequestCount: "1000"
        vaTypeCode: "1"
        vaHolderNamePos: "1"
        vaHolderNameKana: ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
        raId: "101011234567"
    VaIssueResponse:
      title: VaIssueResponse
      required:
      - vaHolderNameKana
      - vaList
      - vaTypeCode
      - vaTypeName
      type: object
      properties:
        vaTypeCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込入金口座　種類コード
            半角数字
            ・1=期限型
            ・2=継続型
          example: "1"
        vaTypeName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            振込入金口座　種類名
            全角文字
            振込入金口座　種類コードの名称
          example: 期限型
        expireDateTime:
          maxLength: 25
          minLength: 25
          type: string
          description: |
            有効期限日時
            半角文字
            YYYY-MM-DDTHH:MM:SS+09:00形式
            振込入金口座種別コードが「2=継続型」の場合は、項目自体を設定しません
          example: 2018-08-31T12:59:59+09:00
        vaHolderNameKana:
          maxLength: 40
          minLength: 1
          type: string
          description: |
            振込入金口座名義カナ
            半角文字
          example: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
        vaList:
          type: array
          description: 振込入金口座リスト
          items:
            $ref: '#/components/schemas/Va'
      example:
        expireDateTime: 2018-08-31T12:59:59+09:00
        vaTypeCode: "1"
        vaHolderNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
        vaTypeName: 期限型
        vaList:
        - vaId: "5021099622"
          vaBranchCode: "502"
          vaBranchNameKana: ｱｼﾞｻｲ
          vaAccountNumber: "1099622"
        - vaId: "5021099622"
          vaBranchCode: "502"
          vaBranchNameKana: ｱｼﾞｻｲ
          vaAccountNumber: "1099622"
    VaListRequest:
      title: VaListRequest
      type: object
      properties:
        vaContractAuthKey:
          maxLength: 400
          minLength: 1
          type: string
          description: |
            振込入金口座API認証情報
            半角英数字
            銀行契約の方はNULLを設定
            提携企業の方が、契約された顧客の一覧照会を依頼される場合は必須
            提携企業以外の方が値を設定されている場合は「400 Bad Request」を返却
          example: 5CSDFG1515A54DF
        vaTypeCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込入金口座　種類コード
            半角数字
            ・1=期限型
            ・2=継続型
          example: "1"
        depositAmountExistCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            入金有無コード
            半角数字
            ・1=入金あり
            ・2=入金なし
          example: "1"
        vaHolderNameKana:
          maxLength: 40
          minLength: 1
          type: string
          description: |
            振込入金口座名義カナ
            半角文字
            振込許容文字を指定可
            ただし、一部の非許容文字は、許容文字に変換を行います
          example: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
        vaStatusCodeList:
          type: array
          description: |
            振込入金口座IDリスト
            照会したい振込入金口座状態コードのリスト
            上限3件まで設定可能
          items:
            $ref: '#/components/schemas/VaStatusCode'
        latestDepositDateFrom:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            最終入金日From
            半角文字
            YYYY-MM-DD形式
            入金有無コードが未設定もしくは、「1=入金あり」が設定されている場合は指定可
            それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
          example: 2018-08-10
        latestDepositDateTo:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            最終入金日To
            半角文字
            YYYY-MM-DD形式
            入金有無コードが未設定もしくは、「1=入金あり」が設定されている場合は指定可
            それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
            最終入金日Fromと最終入金日Toを指定する場合は、最終入金日From≦最終入金日Toとし、それ以外は「400 Bad Request」を返却
          example: 2018-08-10
        vaIssueDateFrom:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            振込入金口座発行日From
            半角文字
            YYYY-MM-DD形式
          example: 2018-07-31
        vaIssueDateTo:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            振込入金口座発行日To
            半角文字
            YYYY-MM-DD形式
            振込入金口座発行Fromと振込入金口座発行Toを指定する場合は、振込入金口座発行From≦振込入金口座発行Toとし、それ以外は「400 Bad Request」を返却
          example: 2018-08-01
        expireDateFrom:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            有効期限From
            半角文字
            YYYY-MM-DD形式
            振込入金口座 種類コードが未設定もしくは、「1＝期限型」が設定されている場合は指定可　それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
          example: 2018-08-31
        expireDateTo:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            有効期限To
            半角文字
            YYYY-MM-DD形式
            振込入金口座
            種類コードが未設定もしくは、「1＝期限型」が設定されている場合は指定可　それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却）
            有効期限Fromと有効期限Toを指定する場合は、有効期限From≦有効期限Toとし、それ以外は「400 Bad Request」を返却
          example: 2018-09-01
        raId:
          maxLength: 29
          minLength: 12
          type: string
          description: |
            入金口座ID
            半角数字
            口座一覧照会APIで取得できる口座IDを設定
            科目コードが以下の口座IDのみ受け付けます
            ・01=普通預金（有利息）
            ・02=普通預金（決済用）
          example: "101011234567"
        nextItemKey:
          maxLength: 24
          minLength: 1
          type: string
          description: |
            次一覧キー
            半角英数字
          example: AABA0515651
        sortItemCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            ソート項目コード
            半角数字
            ・1=有効期限日時
            ・2=最終入金日
            ・3=発行日時
            ・4=最終入金金額
            有効期限日時、最終入金日、最終入金金額など、レスポンスで返却されない場合がある項目をソート項目に指定した場合、ソートは効きません
          example: "2"
        sortOrderCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            ソート順コード
            半角数字
            ソート項目コードのソート順を指定するコード値
            ・1=昇順
            ・2=降順
          example: "2"
        vaIdList:
          type: array
          description: |
            振込入金口座IDリスト
            照会したい振込入金口座IDのリスト
            上限500件まで設定可能
          items:
            $ref: '#/components/schemas/VaId'
      example:
        depositAmountExistCode: "1"
        expireDateFrom: 2018-08-31
        expireDateTo: 2018-09-01
        vaStatusCodeList:
        - vaStatusCode: "1"
        - vaStatusCode: "1"
        sortOrderCode: "2"
        latestDepositDateTo: 2018-08-10
        vaIssueDateTo: 2018-08-01
        nextItemKey: AABA0515651
        sortItemCode: "2"
        vaContractAuthKey: 5CSDFG1515A54DF
        vaIssueDateFrom: 2018-07-31
        vaTypeCode: "1"
        vaIdList:
        - vaId: "5021099622"
        - vaId: "5021099622"
        latestDepositDateFrom: 2018-08-10
        vaHolderNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
        raId: "101011234567"
    VaListResponse:
      title: VaListResponse
      required:
      - baseDate
      - baseTime
      - count
      - hasNext
      type: object
      properties:
        baseDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            基準日
            半角文字
            一覧照会の基準日を示します
            YYYY-MM-DD形式
          example: 2018-08-10
        baseTime:
          maxLength: 14
          minLength: 14
          type: string
          description: |
            基準時刻
            半角文字
            一覧照会の基準時刻を示します
            HH:MM:SS+09:00形式
          example: 10:00:00+09:00
        hasNext:
          type: boolean
          description: |
            次一覧フラグ
            ・true=次一覧あり
            ・false=次一覧なし
          example: true
        nextItemKey:
          maxLength: 24
          minLength: 1
          type: string
          description: |
            次一覧キー
            半角英数字
            次一覧フラグがfalseの場合は項目自体を設定しません
          example: AABA0515651
        count:
          maxLength: 7
          minLength: 1
          type: string
          description: |
            口座取得件数
            半角数字
          example: "1"
        vAccounts:
          type: array
          description: |
            振込入金口座情報
            振込入金口座情報のリスト
            該当する情報が無い場合は空のリストを返却
          items:
            $ref: '#/components/schemas/VAccount'
      example:
        baseDate: 2018-08-10
        count: "1"
        hasNext: true
        nextItemKey: AABA0515651
        baseTime: 10:00:00+09:00
        vAccounts:
        - vaBranchCode: "502"
          expireDateTime: 2018-08-31T12:59:59+09:00
          vaChangeStatusDateTime: 2018-08-10T15:00:00+09:00
          raBranchName: 法人営業部
          vaStatusName: 停止中
          raBranchCode: "101"
          raHolderName: ＧＭＯあおぞら株式会社
          vaCloseDateTime: 2018-08-29T16:00:00+09:00
          vaAccountNumber: "1099622"
          latestDepositCount: "3"
          vaId: "5021099622"
          vaIssueDateTime: 2018-08-01T10:00:00+09:00
          vaStatusCode: "2"
          vaStatusChangePossibleCode: "2"
          vaBranchName: あじさい支店
          vaBranchNameKana: ｱｼﾞｻｲ
          vaTypeCode: "1"
          latestDepositDate: 2018-08-02
          latestDepositAmount: "50000"
          vaHolderNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
          vaTypeName: 期限型
          raId: "101011234567"
          raAccountNumber: "1234567"
        - vaBranchCode: "502"
          expireDateTime: 2018-08-31T12:59:59+09:00
          vaChangeStatusDateTime: 2018-08-10T15:00:00+09:00
          raBranchName: 法人営業部
          vaStatusName: 停止中
          raBranchCode: "101"
          raHolderName: ＧＭＯあおぞら株式会社
          vaCloseDateTime: 2018-08-29T16:00:00+09:00
          vaAccountNumber: "1099622"
          latestDepositCount: "3"
          vaId: "5021099622"
          vaIssueDateTime: 2018-08-01T10:00:00+09:00
          vaStatusCode: "2"
          vaStatusChangePossibleCode: "2"
          vaBranchName: あじさい支店
          vaBranchNameKana: ｱｼﾞｻｲ
          vaTypeCode: "1"
          latestDepositDate: 2018-08-02
          latestDepositAmount: "50000"
          vaHolderNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
          vaTypeName: 期限型
          raId: "101011234567"
          raAccountNumber: "1234567"
    VaStatusChangeRequest:
      title: VaStatusChangeRequest
      required:
      - vaIdList
      - vaStatusChangeCode
      type: object
      properties:
        vaContractAuthKey:
          maxLength: 400
          minLength: 1
          type: string
          description: |
            振込入金口座API認証情報
            半角英数字
            銀行契約の方はNULLを設定
            提携企業の方が、契約された顧客の状態変更を依頼される場合は必須
            提携企業以外の方が値を設定されている場合は「400 Bad Request」を返却
          example: 5CSDFG1515A54DF
        vaStatusChangeCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込入金口座状態変更依頼コード
            半角数字
            以下の変更したコード値を設定
            ・1=停止
            ・2=再開
            ・3=削除
          example: "1"
        vaIdList:
          type: array
          description: |
            振込入金口座IDリスト
            上限は100件
          items:
            $ref: '#/components/schemas/VaId'
      example:
        vaContractAuthKey: 5CSDFG1515A54DF
        vaStatusChangeCode: "1"
        vaIdList:
        - vaId: "5021099622"
        - vaId: "5021099622"
    VaStatusChangeResponse:
      title: VaStatusChangeResponse
      required:
      - vAccounts
      type: object
      properties:
        vAccounts:
          type: array
          description: |-
            振込入金口座情報
            振込入金口座情報のリスト
          items:
            $ref: '#/components/schemas/VAccount'
      example:
        vAccounts:
        - vaBranchCode: "502"
          expireDateTime: 2018-08-31T12:59:59+09:00
          vaChangeStatusDateTime: 2018-08-10T15:00:00+09:00
          raBranchName: 法人営業部
          vaStatusName: 停止中
          raBranchCode: "101"
          raHolderName: ＧＭＯあおぞら株式会社
          vaCloseDateTime: 2018-08-29T16:00:00+09:00
          vaAccountNumber: "1099622"
          latestDepositCount: "3"
          vaId: "5021099622"
          vaIssueDateTime: 2018-08-01T10:00:00+09:00
          vaStatusCode: "2"
          vaStatusChangePossibleCode: "2"
          vaBranchName: あじさい支店
          vaBranchNameKana: ｱｼﾞｻｲ
          vaTypeCode: "1"
          latestDepositDate: 2018-08-02
          latestDepositAmount: "50000"
          vaHolderNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
          vaTypeName: 期限型
          raId: "101011234567"
          raAccountNumber: "1234567"
        - vaBranchCode: "502"
          expireDateTime: 2018-08-31T12:59:59+09:00
          vaChangeStatusDateTime: 2018-08-10T15:00:00+09:00
          raBranchName: 法人営業部
          vaStatusName: 停止中
          raBranchCode: "101"
          raHolderName: ＧＭＯあおぞら株式会社
          vaCloseDateTime: 2018-08-29T16:00:00+09:00
          vaAccountNumber: "1099622"
          latestDepositCount: "3"
          vaId: "5021099622"
          vaIssueDateTime: 2018-08-01T10:00:00+09:00
          vaStatusCode: "2"
          vaStatusChangePossibleCode: "2"
          vaBranchName: あじさい支店
          vaBranchNameKana: ｱｼﾞｻｲ
          vaTypeCode: "1"
          latestDepositDate: 2018-08-02
          latestDepositAmount: "50000"
          vaHolderNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
          vaTypeName: 期限型
          raId: "101011234567"
          raAccountNumber: "1234567"
    VaStatusCode:
      title: VaStatusCode
      type: object
      properties:
        vaStatusCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            振込入金口座　状態コード
            半角数字
            ・1=利用可能
            ・2=停止中
            ・3=削除済
          example: "1"
      example:
        vaStatusCode: "1"
    VaTransaction:
      title: VaTransaction
      required:
      - depositAmount
      - itemKey
      - partnerName
      - paymentBankName
      - paymentBranchName
      - remitterNameKana
      - transactionDate
      - vaAccountNameKana
      - vaAccountNumber
      - vaBranchCode
      - vaBranchNameKana
      - vaId
      - valueDate
      type: object
      properties:
        vaId:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            振込入金口座ID
            半角数字
            振込入金口座を識別するID
          example: "5021099622"
        transactionDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            取引日
            半角文字
            YYYY-MM-DD形式
          example: 2018-08-02
        valueDate:
          maxLength: 10
          minLength: 10
          type: string
          description: |
            起算日
            半角文字
            YYYY-MM-DD形式
          example: 2018-08-02
        vaBranchCode:
          maxLength: 3
          minLength: 3
          type: string
          description: |
            支店コード
            半角数字
          example: "502"
        vaBranchNameKana:
          maxLength: 15
          minLength: 1
          type: string
          description: |
            支店名カナ
            半角文字
          example: ｱｼﾞｻｲ
        vaAccountNumber:
          maxLength: 7
          minLength: 7
          type: string
          description: |
            口座番号
            半角数字
          example: "1099622"
        vaAccountNameKana:
          maxLength: 40
          minLength: 1
          type: string
          description: |
            口座名義カナ
            半角文字
          example: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
        depositAmount:
          maxLength: 20
          minLength: 1
          type: string
          description: |
            入金金額
            半角数字
          example: "10000"
        remitterNameKana:
          maxLength: 48
          minLength: 1
          type: string
          description: |
            振込依頼人名カナ
            半角文字
          example: ﾃｽﾄ ﾀﾛｳ
        paymentBankName:
          maxLength: 30
          minLength: 1
          type: string
          description: |
            仕向金融機関名カナ
            半角文字
          example: ｱｵｿﾞﾗｷﾞﾝｺｳ
        paymentBranchName:
          maxLength: 15
          minLength: 1
          type: string
          description: |
            仕向支店名カナ
            半角文字
          example: ﾎﾝﾃﾝ
        partnerName:
          maxLength: 10
          minLength: 1
          type: string
          description: |
            サービス企業名
            全角文字
            振込入金口座契約サービス企業名
          example: GMOあおぞらネット銀行
        remarks:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            摘要内容
            全半角文字
            該当データがない場合は項目自体を設定しません
          example: 振込 ｲ-ﾃﾞｲ-ｱｲ テスト　タロウ あじさい支店 1036971
        itemKey:
          maxLength: 24
          minLength: 1
          type: string
          description: |-
            明細キー
            半角数字
            口座ID毎に設定される明細キー（明細データtimestamp（μs））
          example: "20181012090520112541"
      example:
        depositAmount: "10000"
        remitterNameKana: ﾃｽﾄ ﾀﾛｳ
        vaBranchCode: "502"
        paymentBankName: ｱｵｿﾞﾗｷﾞﾝｺｳ
        partnerName: GMOあおぞらネット銀行
        valueDate: 2018-08-02
        paymentBranchName: ﾎﾝﾃﾝ
        transactionDate: 2018-08-02
        vaAccountNumber: "1099622"
        itemKey: "20181012090520112541"
        vaId: "5021099622"
        vaAccountNameKana: ｼﾞ-ｴﾑｵ-ｱｵｿﾞﾗ(ｶ)ﾃｽﾄﾆﾕｳｷﾝｸﾞﾁ
        vaBranchNameKana: ｱｼﾞｻｲ
        remarks: 振込 ｲ-ﾃﾞｲ-ｱｲ テスト　タロウ あじさい支店 1036971
x-original-swagger-version: "2.0"
